[{"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_64_27_27_w192_64_5_5_o1_192_27_27_ws1_1_wd1_1_p2_2_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 64, 27, 27], "filter_shape": [192, 64, 5, 5], "output_shape": [1, 192, 27, 27], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [2, 2]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_64_27_27_w192_64_5_5_o1_192_27_27_ws1_1_wd1_1_p2_2_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[6];\n  __shared__ float pad_temp_shared[434];\n  __shared__ float input1_shared[600];\n  compute1[0] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    if ((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) < 434) {\n      if (((((int)threadIdx.y) * 25) + (((int)threadIdx.x) * 3)) < 73) {\n        pad_temp_shared[(((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3))] = (((((2 <= ((((int)blockIdx.y) * 3) + (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) % 217) / 31))) && (((((int)blockIdx.y) * 3) + (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) % 217) / 31)) < 29)) && (2 <= ((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) % 31))) && (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) % 31) < 29)) ? input0[((((((rc_outer * 1458) + (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) / 217) * 729)) + (((int)blockIdx.y) * 81)) + ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) % 217) / 31) * 27)) + ((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) % 31)) - 56)] : 0.000000e+00f);\n      }\n    }\n    if ((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) < 433) {\n      if (((((int)threadIdx.y) * 25) + (((int)threadIdx.x) * 3)) < 72) {\n        if (((int)threadIdx.x) < 8) {\n          pad_temp_shared[((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1)] = (((((2 <= ((((int)blockIdx.y) * 3) + ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1) % 217) / 31))) && (((((int)blockIdx.y) * 3) + ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1) % 217) / 31)) < 29)) && (2 <= (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1) % 31))) && ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1) % 31) < 29)) ? input0[((((((rc_outer * 1458) + ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1) / 217) * 729)) + (((int)blockIdx.y) * 81)) + (((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1) % 217) / 31) * 27)) + (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 1) % 31)) - 56)] : 0.000000e+00f);\n        }\n      }\n    }\n    if ((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) < 432) {\n      if (((((int)threadIdx.y) * 25) + (((int)threadIdx.x) * 3)) < 71) {\n        if (((int)threadIdx.x) < 8) {\n          pad_temp_shared[((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2)] = (((((2 <= ((((int)blockIdx.y) * 3) + ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2) % 217) / 31))) && (((((int)blockIdx.y) * 3) + ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2) % 217) / 31)) < 29)) && (2 <= (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2) % 31))) && ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2) % 31) < 29)) ? input0[((((((rc_outer * 1458) + ((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2) / 217) * 729)) + (((int)blockIdx.y) * 81)) + (((((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2) % 217) / 31) * 27)) + (((((((int)threadIdx.z) * 73) + (((int)threadIdx.y) * 25)) + (((int)threadIdx.x) * 3)) + 2) % 31)) - 56)] : 0.000000e+00f);\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) / 50)) < 12) {\n      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) / 25)) < 24) {\n        if (((((int)threadIdx.z) * 20) + (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) / 5)) < 120) {\n          if ((((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4)) < 600) {\n            if (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) < 100) {\n              input1_shared[(((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 19200) + (((int)threadIdx.z) * 3200)) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) / 50) * 1600)) + (rc_outer * 50)) + (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) % 50))];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 1) / 50)) < 12) {\n      if (((((int)threadIdx.z) * 4) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 1) / 25)) < 24) {\n        if (((((int)threadIdx.z) * 20) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 1) / 5)) < 120) {\n          if ((((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4)) < 599) {\n            if (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) < 99) {\n              input1_shared[((((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 19200) + (((int)threadIdx.z) * 3200)) + (((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 1) / 50) * 1600)) + (rc_outer * 50)) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 1) % 50))];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 2) / 50)) < 12) {\n      if (((((int)threadIdx.z) * 4) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 2) / 25)) < 24) {\n        if (((((int)threadIdx.z) * 20) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 2) / 5)) < 120) {\n          if ((((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4)) < 598) {\n            if (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) < 98) {\n              if (((int)threadIdx.x) < 8) {\n                input1_shared[((((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 19200) + (((int)threadIdx.z) * 3200)) + (((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 2) / 50) * 1600)) + (rc_outer * 50)) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 2) % 50))];\n              }\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 3) / 50)) < 12) {\n      if (((((int)threadIdx.z) * 4) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 3) / 25)) < 24) {\n        if (((((int)threadIdx.z) * 20) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 3) / 5)) < 120) {\n          if ((((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4)) < 597) {\n            if (((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) < 97) {\n              if (((int)threadIdx.x) < 8) {\n                input1_shared[((((((int)threadIdx.z) * 100) + (((int)threadIdx.y) * 34)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 19200) + (((int)threadIdx.z) * 3200)) + (((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 3) / 50) * 1600)) + (rc_outer * 50)) + ((((((int)threadIdx.y) * 34) + (((int)threadIdx.x) * 4)) + 3) % 50))];\n              }\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3))] * input1_shared[(((int)threadIdx.z) * 50)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3))] * input1_shared[((((int)threadIdx.z) * 50) + 300)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 1)] * input1_shared[(((int)threadIdx.z) * 50)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 1)] * input1_shared[((((int)threadIdx.z) * 50) + 300)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 2)] * input1_shared[(((int)threadIdx.z) * 50)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 2)] * input1_shared[((((int)threadIdx.z) * 50) + 300)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 1)] * input1_shared[((((int)threadIdx.z) * 50) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 1)] * input1_shared[((((int)threadIdx.z) * 50) + 301)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 2)] * input1_shared[((((int)threadIdx.z) * 50) + 1)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 2)] * input1_shared[((((int)threadIdx.z) * 50) + 301)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 3)] * input1_shared[((((int)threadIdx.z) * 50) + 1)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 3)] * input1_shared[((((int)threadIdx.z) * 50) + 301)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 2)] * input1_shared[((((int)threadIdx.z) * 50) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 2)] * input1_shared[((((int)threadIdx.z) * 50) + 302)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 3)] * input1_shared[((((int)threadIdx.z) * 50) + 2)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 3)] * input1_shared[((((int)threadIdx.z) * 50) + 302)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 4)] * input1_shared[((((int)threadIdx.z) * 50) + 2)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 4)] * input1_shared[((((int)threadIdx.z) * 50) + 302)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 3)] * input1_shared[((((int)threadIdx.z) * 50) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 3)] * input1_shared[((((int)threadIdx.z) * 50) + 303)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 4)] * input1_shared[((((int)threadIdx.z) * 50) + 3)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 4)] * input1_shared[((((int)threadIdx.z) * 50) + 303)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 5)] * input1_shared[((((int)threadIdx.z) * 50) + 3)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 5)] * input1_shared[((((int)threadIdx.z) * 50) + 303)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 4)] * input1_shared[((((int)threadIdx.z) * 50) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 4)] * input1_shared[((((int)threadIdx.z) * 50) + 304)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 5)] * input1_shared[((((int)threadIdx.z) * 50) + 4)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 5)] * input1_shared[((((int)threadIdx.z) * 50) + 304)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 6)] * input1_shared[((((int)threadIdx.z) * 50) + 4)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 6)] * input1_shared[((((int)threadIdx.z) * 50) + 304)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 31)] * input1_shared[((((int)threadIdx.z) * 50) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 31)] * input1_shared[((((int)threadIdx.z) * 50) + 305)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 32)] * input1_shared[((((int)threadIdx.z) * 50) + 5)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 32)] * input1_shared[((((int)threadIdx.z) * 50) + 305)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 33)] * input1_shared[((((int)threadIdx.z) * 50) + 5)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 33)] * input1_shared[((((int)threadIdx.z) * 50) + 305)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 32)] * input1_shared[((((int)threadIdx.z) * 50) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 32)] * input1_shared[((((int)threadIdx.z) * 50) + 306)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 33)] * input1_shared[((((int)threadIdx.z) * 50) + 6)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 33)] * input1_shared[((((int)threadIdx.z) * 50) + 306)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 34)] * input1_shared[((((int)threadIdx.z) * 50) + 6)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 34)] * input1_shared[((((int)threadIdx.z) * 50) + 306)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 33)] * input1_shared[((((int)threadIdx.z) * 50) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 33)] * input1_shared[((((int)threadIdx.z) * 50) + 307)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 34)] * input1_shared[((((int)threadIdx.z) * 50) + 7)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 34)] * input1_shared[((((int)threadIdx.z) * 50) + 307)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 35)] * input1_shared[((((int)threadIdx.z) * 50) + 7)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 35)] * input1_shared[((((int)threadIdx.z) * 50) + 307)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 34)] * input1_shared[((((int)threadIdx.z) * 50) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 34)] * input1_shared[((((int)threadIdx.z) * 50) + 308)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 35)] * input1_shared[((((int)threadIdx.z) * 50) + 8)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 35)] * input1_shared[((((int)threadIdx.z) * 50) + 308)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 36)] * input1_shared[((((int)threadIdx.z) * 50) + 8)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 36)] * input1_shared[((((int)threadIdx.z) * 50) + 308)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 35)] * input1_shared[((((int)threadIdx.z) * 50) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 35)] * input1_shared[((((int)threadIdx.z) * 50) + 309)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 36)] * input1_shared[((((int)threadIdx.z) * 50) + 9)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 36)] * input1_shared[((((int)threadIdx.z) * 50) + 309)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 37)] * input1_shared[((((int)threadIdx.z) * 50) + 9)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 37)] * input1_shared[((((int)threadIdx.z) * 50) + 309)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 62)] * input1_shared[((((int)threadIdx.z) * 50) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 62)] * input1_shared[((((int)threadIdx.z) * 50) + 310)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 63)] * input1_shared[((((int)threadIdx.z) * 50) + 10)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 63)] * input1_shared[((((int)threadIdx.z) * 50) + 310)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 64)] * input1_shared[((((int)threadIdx.z) * 50) + 10)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 64)] * input1_shared[((((int)threadIdx.z) * 50) + 310)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 63)] * input1_shared[((((int)threadIdx.z) * 50) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 63)] * input1_shared[((((int)threadIdx.z) * 50) + 311)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 64)] * input1_shared[((((int)threadIdx.z) * 50) + 11)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 64)] * input1_shared[((((int)threadIdx.z) * 50) + 311)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 65)] * input1_shared[((((int)threadIdx.z) * 50) + 11)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 65)] * input1_shared[((((int)threadIdx.z) * 50) + 311)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 64)] * input1_shared[((((int)threadIdx.z) * 50) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 64)] * input1_shared[((((int)threadIdx.z) * 50) + 312)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 65)] * input1_shared[((((int)threadIdx.z) * 50) + 12)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 65)] * input1_shared[((((int)threadIdx.z) * 50) + 312)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 66)] * input1_shared[((((int)threadIdx.z) * 50) + 12)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 66)] * input1_shared[((((int)threadIdx.z) * 50) + 312)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 65)] * input1_shared[((((int)threadIdx.z) * 50) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 65)] * input1_shared[((((int)threadIdx.z) * 50) + 313)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 66)] * input1_shared[((((int)threadIdx.z) * 50) + 13)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 66)] * input1_shared[((((int)threadIdx.z) * 50) + 313)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 67)] * input1_shared[((((int)threadIdx.z) * 50) + 13)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 67)] * input1_shared[((((int)threadIdx.z) * 50) + 313)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 66)] * input1_shared[((((int)threadIdx.z) * 50) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 66)] * input1_shared[((((int)threadIdx.z) * 50) + 314)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 67)] * input1_shared[((((int)threadIdx.z) * 50) + 14)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 67)] * input1_shared[((((int)threadIdx.z) * 50) + 314)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 68)] * input1_shared[((((int)threadIdx.z) * 50) + 14)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 68)] * input1_shared[((((int)threadIdx.z) * 50) + 314)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 93)] * input1_shared[((((int)threadIdx.z) * 50) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 93)] * input1_shared[((((int)threadIdx.z) * 50) + 315)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 94)] * input1_shared[((((int)threadIdx.z) * 50) + 15)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 94)] * input1_shared[((((int)threadIdx.z) * 50) + 315)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 95)] * input1_shared[((((int)threadIdx.z) * 50) + 15)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 95)] * input1_shared[((((int)threadIdx.z) * 50) + 315)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 94)] * input1_shared[((((int)threadIdx.z) * 50) + 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 94)] * input1_shared[((((int)threadIdx.z) * 50) + 316)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 95)] * input1_shared[((((int)threadIdx.z) * 50) + 16)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 95)] * input1_shared[((((int)threadIdx.z) * 50) + 316)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 96)] * input1_shared[((((int)threadIdx.z) * 50) + 16)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 96)] * input1_shared[((((int)threadIdx.z) * 50) + 316)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 95)] * input1_shared[((((int)threadIdx.z) * 50) + 17)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 95)] * input1_shared[((((int)threadIdx.z) * 50) + 317)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 96)] * input1_shared[((((int)threadIdx.z) * 50) + 17)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 96)] * input1_shared[((((int)threadIdx.z) * 50) + 317)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 97)] * input1_shared[((((int)threadIdx.z) * 50) + 17)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 97)] * input1_shared[((((int)threadIdx.z) * 50) + 317)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 96)] * input1_shared[((((int)threadIdx.z) * 50) + 18)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 96)] * input1_shared[((((int)threadIdx.z) * 50) + 318)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 97)] * input1_shared[((((int)threadIdx.z) * 50) + 18)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 97)] * input1_shared[((((int)threadIdx.z) * 50) + 318)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 98)] * input1_shared[((((int)threadIdx.z) * 50) + 18)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 98)] * input1_shared[((((int)threadIdx.z) * 50) + 318)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 97)] * input1_shared[((((int)threadIdx.z) * 50) + 19)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 97)] * input1_shared[((((int)threadIdx.z) * 50) + 319)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 98)] * input1_shared[((((int)threadIdx.z) * 50) + 19)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 98)] * input1_shared[((((int)threadIdx.z) * 50) + 319)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 99)] * input1_shared[((((int)threadIdx.z) * 50) + 19)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 99)] * input1_shared[((((int)threadIdx.z) * 50) + 319)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 124)] * input1_shared[((((int)threadIdx.z) * 50) + 20)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 124)] * input1_shared[((((int)threadIdx.z) * 50) + 320)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 125)] * input1_shared[((((int)threadIdx.z) * 50) + 20)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 125)] * input1_shared[((((int)threadIdx.z) * 50) + 320)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 126)] * input1_shared[((((int)threadIdx.z) * 50) + 20)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 126)] * input1_shared[((((int)threadIdx.z) * 50) + 320)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 125)] * input1_shared[((((int)threadIdx.z) * 50) + 21)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 125)] * input1_shared[((((int)threadIdx.z) * 50) + 321)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 126)] * input1_shared[((((int)threadIdx.z) * 50) + 21)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 126)] * input1_shared[((((int)threadIdx.z) * 50) + 321)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 127)] * input1_shared[((((int)threadIdx.z) * 50) + 21)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 127)] * input1_shared[((((int)threadIdx.z) * 50) + 321)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 126)] * input1_shared[((((int)threadIdx.z) * 50) + 22)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 126)] * input1_shared[((((int)threadIdx.z) * 50) + 322)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 127)] * input1_shared[((((int)threadIdx.z) * 50) + 22)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 127)] * input1_shared[((((int)threadIdx.z) * 50) + 322)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 128)] * input1_shared[((((int)threadIdx.z) * 50) + 22)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 128)] * input1_shared[((((int)threadIdx.z) * 50) + 322)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 127)] * input1_shared[((((int)threadIdx.z) * 50) + 23)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 127)] * input1_shared[((((int)threadIdx.z) * 50) + 323)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 128)] * input1_shared[((((int)threadIdx.z) * 50) + 23)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 128)] * input1_shared[((((int)threadIdx.z) * 50) + 323)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 129)] * input1_shared[((((int)threadIdx.z) * 50) + 23)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 129)] * input1_shared[((((int)threadIdx.z) * 50) + 323)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 128)] * input1_shared[((((int)threadIdx.z) * 50) + 24)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 128)] * input1_shared[((((int)threadIdx.z) * 50) + 324)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 129)] * input1_shared[((((int)threadIdx.z) * 50) + 24)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 129)] * input1_shared[((((int)threadIdx.z) * 50) + 324)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 130)] * input1_shared[((((int)threadIdx.z) * 50) + 24)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 130)] * input1_shared[((((int)threadIdx.z) * 50) + 324)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 217)] * input1_shared[((((int)threadIdx.z) * 50) + 25)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 217)] * input1_shared[((((int)threadIdx.z) * 50) + 325)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 218)] * input1_shared[((((int)threadIdx.z) * 50) + 25)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 218)] * input1_shared[((((int)threadIdx.z) * 50) + 325)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 219)] * input1_shared[((((int)threadIdx.z) * 50) + 25)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 219)] * input1_shared[((((int)threadIdx.z) * 50) + 325)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 218)] * input1_shared[((((int)threadIdx.z) * 50) + 26)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 218)] * input1_shared[((((int)threadIdx.z) * 50) + 326)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 219)] * input1_shared[((((int)threadIdx.z) * 50) + 26)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 219)] * input1_shared[((((int)threadIdx.z) * 50) + 326)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 220)] * input1_shared[((((int)threadIdx.z) * 50) + 26)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 220)] * input1_shared[((((int)threadIdx.z) * 50) + 326)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 219)] * input1_shared[((((int)threadIdx.z) * 50) + 27)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 219)] * input1_shared[((((int)threadIdx.z) * 50) + 327)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 220)] * input1_shared[((((int)threadIdx.z) * 50) + 27)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 220)] * input1_shared[((((int)threadIdx.z) * 50) + 327)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 221)] * input1_shared[((((int)threadIdx.z) * 50) + 27)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 221)] * input1_shared[((((int)threadIdx.z) * 50) + 327)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 220)] * input1_shared[((((int)threadIdx.z) * 50) + 28)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 220)] * input1_shared[((((int)threadIdx.z) * 50) + 328)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 221)] * input1_shared[((((int)threadIdx.z) * 50) + 28)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 221)] * input1_shared[((((int)threadIdx.z) * 50) + 328)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 222)] * input1_shared[((((int)threadIdx.z) * 50) + 28)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 222)] * input1_shared[((((int)threadIdx.z) * 50) + 328)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 221)] * input1_shared[((((int)threadIdx.z) * 50) + 29)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 221)] * input1_shared[((((int)threadIdx.z) * 50) + 329)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 222)] * input1_shared[((((int)threadIdx.z) * 50) + 29)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 222)] * input1_shared[((((int)threadIdx.z) * 50) + 329)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 223)] * input1_shared[((((int)threadIdx.z) * 50) + 29)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 223)] * input1_shared[((((int)threadIdx.z) * 50) + 329)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 248)] * input1_shared[((((int)threadIdx.z) * 50) + 30)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 248)] * input1_shared[((((int)threadIdx.z) * 50) + 330)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 249)] * input1_shared[((((int)threadIdx.z) * 50) + 30)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 249)] * input1_shared[((((int)threadIdx.z) * 50) + 330)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 250)] * input1_shared[((((int)threadIdx.z) * 50) + 30)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 250)] * input1_shared[((((int)threadIdx.z) * 50) + 330)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 249)] * input1_shared[((((int)threadIdx.z) * 50) + 31)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 249)] * input1_shared[((((int)threadIdx.z) * 50) + 331)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 250)] * input1_shared[((((int)threadIdx.z) * 50) + 31)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 250)] * input1_shared[((((int)threadIdx.z) * 50) + 331)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 251)] * input1_shared[((((int)threadIdx.z) * 50) + 31)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 251)] * input1_shared[((((int)threadIdx.z) * 50) + 331)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 250)] * input1_shared[((((int)threadIdx.z) * 50) + 32)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 250)] * input1_shared[((((int)threadIdx.z) * 50) + 332)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 251)] * input1_shared[((((int)threadIdx.z) * 50) + 32)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 251)] * input1_shared[((((int)threadIdx.z) * 50) + 332)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 252)] * input1_shared[((((int)threadIdx.z) * 50) + 32)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 252)] * input1_shared[((((int)threadIdx.z) * 50) + 332)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 251)] * input1_shared[((((int)threadIdx.z) * 50) + 33)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 251)] * input1_shared[((((int)threadIdx.z) * 50) + 333)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 252)] * input1_shared[((((int)threadIdx.z) * 50) + 33)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 252)] * input1_shared[((((int)threadIdx.z) * 50) + 333)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 253)] * input1_shared[((((int)threadIdx.z) * 50) + 33)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 253)] * input1_shared[((((int)threadIdx.z) * 50) + 333)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 252)] * input1_shared[((((int)threadIdx.z) * 50) + 34)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 252)] * input1_shared[((((int)threadIdx.z) * 50) + 334)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 253)] * input1_shared[((((int)threadIdx.z) * 50) + 34)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 253)] * input1_shared[((((int)threadIdx.z) * 50) + 334)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 254)] * input1_shared[((((int)threadIdx.z) * 50) + 34)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 254)] * input1_shared[((((int)threadIdx.z) * 50) + 334)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 279)] * input1_shared[((((int)threadIdx.z) * 50) + 35)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 279)] * input1_shared[((((int)threadIdx.z) * 50) + 335)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 280)] * input1_shared[((((int)threadIdx.z) * 50) + 35)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 280)] * input1_shared[((((int)threadIdx.z) * 50) + 335)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 281)] * input1_shared[((((int)threadIdx.z) * 50) + 35)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 281)] * input1_shared[((((int)threadIdx.z) * 50) + 335)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 280)] * input1_shared[((((int)threadIdx.z) * 50) + 36)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 280)] * input1_shared[((((int)threadIdx.z) * 50) + 336)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 281)] * input1_shared[((((int)threadIdx.z) * 50) + 36)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 281)] * input1_shared[((((int)threadIdx.z) * 50) + 336)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 282)] * input1_shared[((((int)threadIdx.z) * 50) + 36)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 282)] * input1_shared[((((int)threadIdx.z) * 50) + 336)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 281)] * input1_shared[((((int)threadIdx.z) * 50) + 37)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 281)] * input1_shared[((((int)threadIdx.z) * 50) + 337)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 282)] * input1_shared[((((int)threadIdx.z) * 50) + 37)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 282)] * input1_shared[((((int)threadIdx.z) * 50) + 337)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 283)] * input1_shared[((((int)threadIdx.z) * 50) + 37)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 283)] * input1_shared[((((int)threadIdx.z) * 50) + 337)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 282)] * input1_shared[((((int)threadIdx.z) * 50) + 38)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 282)] * input1_shared[((((int)threadIdx.z) * 50) + 338)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 283)] * input1_shared[((((int)threadIdx.z) * 50) + 38)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 283)] * input1_shared[((((int)threadIdx.z) * 50) + 338)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 284)] * input1_shared[((((int)threadIdx.z) * 50) + 38)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 284)] * input1_shared[((((int)threadIdx.z) * 50) + 338)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 283)] * input1_shared[((((int)threadIdx.z) * 50) + 39)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 283)] * input1_shared[((((int)threadIdx.z) * 50) + 339)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 284)] * input1_shared[((((int)threadIdx.z) * 50) + 39)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 284)] * input1_shared[((((int)threadIdx.z) * 50) + 339)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 285)] * input1_shared[((((int)threadIdx.z) * 50) + 39)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 285)] * input1_shared[((((int)threadIdx.z) * 50) + 339)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 310)] * input1_shared[((((int)threadIdx.z) * 50) + 40)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 310)] * input1_shared[((((int)threadIdx.z) * 50) + 340)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 311)] * input1_shared[((((int)threadIdx.z) * 50) + 40)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 311)] * input1_shared[((((int)threadIdx.z) * 50) + 340)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 312)] * input1_shared[((((int)threadIdx.z) * 50) + 40)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 312)] * input1_shared[((((int)threadIdx.z) * 50) + 340)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 311)] * input1_shared[((((int)threadIdx.z) * 50) + 41)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 311)] * input1_shared[((((int)threadIdx.z) * 50) + 341)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 312)] * input1_shared[((((int)threadIdx.z) * 50) + 41)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 312)] * input1_shared[((((int)threadIdx.z) * 50) + 341)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 313)] * input1_shared[((((int)threadIdx.z) * 50) + 41)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 313)] * input1_shared[((((int)threadIdx.z) * 50) + 341)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 312)] * input1_shared[((((int)threadIdx.z) * 50) + 42)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 312)] * input1_shared[((((int)threadIdx.z) * 50) + 342)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 313)] * input1_shared[((((int)threadIdx.z) * 50) + 42)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 313)] * input1_shared[((((int)threadIdx.z) * 50) + 342)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 314)] * input1_shared[((((int)threadIdx.z) * 50) + 42)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 314)] * input1_shared[((((int)threadIdx.z) * 50) + 342)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 313)] * input1_shared[((((int)threadIdx.z) * 50) + 43)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 313)] * input1_shared[((((int)threadIdx.z) * 50) + 343)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 314)] * input1_shared[((((int)threadIdx.z) * 50) + 43)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 314)] * input1_shared[((((int)threadIdx.z) * 50) + 343)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 315)] * input1_shared[((((int)threadIdx.z) * 50) + 43)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 315)] * input1_shared[((((int)threadIdx.z) * 50) + 343)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 314)] * input1_shared[((((int)threadIdx.z) * 50) + 44)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 314)] * input1_shared[((((int)threadIdx.z) * 50) + 344)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 315)] * input1_shared[((((int)threadIdx.z) * 50) + 44)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 315)] * input1_shared[((((int)threadIdx.z) * 50) + 344)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 316)] * input1_shared[((((int)threadIdx.z) * 50) + 44)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 316)] * input1_shared[((((int)threadIdx.z) * 50) + 344)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 341)] * input1_shared[((((int)threadIdx.z) * 50) + 45)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 341)] * input1_shared[((((int)threadIdx.z) * 50) + 345)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 342)] * input1_shared[((((int)threadIdx.z) * 50) + 45)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 342)] * input1_shared[((((int)threadIdx.z) * 50) + 345)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 343)] * input1_shared[((((int)threadIdx.z) * 50) + 45)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 343)] * input1_shared[((((int)threadIdx.z) * 50) + 345)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 342)] * input1_shared[((((int)threadIdx.z) * 50) + 46)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 342)] * input1_shared[((((int)threadIdx.z) * 50) + 346)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 343)] * input1_shared[((((int)threadIdx.z) * 50) + 46)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 343)] * input1_shared[((((int)threadIdx.z) * 50) + 346)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 344)] * input1_shared[((((int)threadIdx.z) * 50) + 46)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 344)] * input1_shared[((((int)threadIdx.z) * 50) + 346)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 343)] * input1_shared[((((int)threadIdx.z) * 50) + 47)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 343)] * input1_shared[((((int)threadIdx.z) * 50) + 347)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 344)] * input1_shared[((((int)threadIdx.z) * 50) + 47)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 344)] * input1_shared[((((int)threadIdx.z) * 50) + 347)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 345)] * input1_shared[((((int)threadIdx.z) * 50) + 47)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 345)] * input1_shared[((((int)threadIdx.z) * 50) + 347)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 344)] * input1_shared[((((int)threadIdx.z) * 50) + 48)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 344)] * input1_shared[((((int)threadIdx.z) * 50) + 348)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 345)] * input1_shared[((((int)threadIdx.z) * 50) + 48)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 345)] * input1_shared[((((int)threadIdx.z) * 50) + 348)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 346)] * input1_shared[((((int)threadIdx.z) * 50) + 48)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 346)] * input1_shared[((((int)threadIdx.z) * 50) + 348)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 345)] * input1_shared[((((int)threadIdx.z) * 50) + 49)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 345)] * input1_shared[((((int)threadIdx.z) * 50) + 349)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 346)] * input1_shared[((((int)threadIdx.z) * 50) + 49)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 346)] * input1_shared[((((int)threadIdx.z) * 50) + 349)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 347)] * input1_shared[((((int)threadIdx.z) * 50) + 49)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 31) + (((int)threadIdx.x) * 3)) + 347)] * input1_shared[((((int)threadIdx.z) * 50) + 349)]));\n  }\n  compute[(((((((int)blockIdx.z) * 8748) + (((int)threadIdx.z) * 729)) + (((int)blockIdx.y) * 81)) + (((int)threadIdx.y) * 27)) + (((int)threadIdx.x) * 3))] = max((compute1[0] + input2[((((int)blockIdx.z) * 12) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8748) + (((int)threadIdx.z) * 729)) + (((int)blockIdx.y) * 81)) + (((int)threadIdx.y) * 27)) + (((int)threadIdx.x) * 3)) + 4374)] = max((compute1[3] + input2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 6)]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8748) + (((int)threadIdx.z) * 729)) + (((int)blockIdx.y) * 81)) + (((int)threadIdx.y) * 27)) + (((int)threadIdx.x) * 3)) + 1)] = max((compute1[1] + input2[((((int)blockIdx.z) * 12) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8748) + (((int)threadIdx.z) * 729)) + (((int)blockIdx.y) * 81)) + (((int)threadIdx.y) * 27)) + (((int)threadIdx.x) * 3)) + 4375)] = max((compute1[4] + input2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 6)]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8748) + (((int)threadIdx.z) * 729)) + (((int)blockIdx.y) * 81)) + (((int)threadIdx.y) * 27)) + (((int)threadIdx.x) * 3)) + 2)] = max((compute1[2] + input2[((((int)blockIdx.z) * 12) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8748) + (((int)threadIdx.z) * 729)) + (((int)blockIdx.y) * 81)) + (((int)threadIdx.y) * 27)) + (((int)threadIdx.x) * 3)) + 4376)] = max((compute1[5] + input2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 6)]), 0.000000e+00f);\n}\n\n", "gridDim": [1, 9, 16], "blockDim": [9, 3, 6]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_192_13_13_w384_192_3_3_o1_384_13_13_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 192, 13, 13], "filter_shape": [384, 192, 3, 3], "output_shape": [1, 384, 13, 13], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_192_13_13_w384_192_3_3_o1_384_13_13_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[270];\n  __shared__ float input1_shared[1728];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) < 270) {\n      if (((int)threadIdx.x) < 9) {\n        pad_temp_shared[((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2))] = (((((1 <= (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 45) / 15) + ((int)blockIdx.y))) && ((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 45) / 15) + ((int)blockIdx.y)) < 14)) && (1 <= (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 15))) && ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 15) < 14)) ? input0[((((((rc_outer * 1014) + ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) / 45) * 169)) + (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 45) / 15) * 13)) + (((int)blockIdx.y) * 13)) + (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 15)) - 14)] : 0.000000e+00f);\n      }\n    }\n    if (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) < 269) {\n      if (((int)threadIdx.x) < 8) {\n        pad_temp_shared[(((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1)] = (((((1 <= ((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 45) / 15) + ((int)blockIdx.y))) && (((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 45) / 15) + ((int)blockIdx.y)) < 14)) && (1 <= ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 15))) && (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 15) < 14)) ? input0[((((((rc_outer * 1014) + (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) / 45) * 169)) + ((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 45) / 15) * 13)) + (((int)blockIdx.y) * 13)) + ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 15)) - 14)] : 0.000000e+00f);\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 576) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1728) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9))] = input1[(((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9))];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 576) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1727) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 1)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 1)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 576) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1726) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 2)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 2)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 575) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1725) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 3)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 3)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 575) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1724) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 4)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 4)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 575) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1723) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 5)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 5)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 574) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1722) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 6)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 6)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 574) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1721) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 7)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 7)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 574) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1720) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 8)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 3456)) + ((((int)threadIdx.x) / 6) * 1728)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 8)];\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 108)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 108) + 54)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 108) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 108) + 55)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 108) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 108) + 56)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 108) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 108) + 57)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 108) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 108) + 58)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 17)] * input1_shared[((((int)threadIdx.z) * 108) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 17)] * input1_shared[((((int)threadIdx.z) * 108) + 59)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 108) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 108) + 60)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 31)] * input1_shared[((((int)threadIdx.z) * 108) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 31)] * input1_shared[((((int)threadIdx.z) * 108) + 61)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 108) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 108) + 62)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 45)] * input1_shared[((((int)threadIdx.z) * 108) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 45)] * input1_shared[((((int)threadIdx.z) * 108) + 63)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 46)] * input1_shared[((((int)threadIdx.z) * 108) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 46)] * input1_shared[((((int)threadIdx.z) * 108) + 64)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 47)] * input1_shared[((((int)threadIdx.z) * 108) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 47)] * input1_shared[((((int)threadIdx.z) * 108) + 65)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 60)] * input1_shared[((((int)threadIdx.z) * 108) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 60)] * input1_shared[((((int)threadIdx.z) * 108) + 66)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 61)] * input1_shared[((((int)threadIdx.z) * 108) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 61)] * input1_shared[((((int)threadIdx.z) * 108) + 67)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 62)] * input1_shared[((((int)threadIdx.z) * 108) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 62)] * input1_shared[((((int)threadIdx.z) * 108) + 68)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 75)] * input1_shared[((((int)threadIdx.z) * 108) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 75)] * input1_shared[((((int)threadIdx.z) * 108) + 69)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 76)] * input1_shared[((((int)threadIdx.z) * 108) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 76)] * input1_shared[((((int)threadIdx.z) * 108) + 70)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 108) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 108) + 71)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 90)] * input1_shared[((((int)threadIdx.z) * 108) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 90)] * input1_shared[((((int)threadIdx.z) * 108) + 72)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 108) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 108) + 73)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 92)] * input1_shared[((((int)threadIdx.z) * 108) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 92)] * input1_shared[((((int)threadIdx.z) * 108) + 74)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 108) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 108) + 75)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 106)] * input1_shared[((((int)threadIdx.z) * 108) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 106)] * input1_shared[((((int)threadIdx.z) * 108) + 76)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 107)] * input1_shared[((((int)threadIdx.z) * 108) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 107)] * input1_shared[((((int)threadIdx.z) * 108) + 77)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 120)] * input1_shared[((((int)threadIdx.z) * 108) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 120)] * input1_shared[((((int)threadIdx.z) * 108) + 78)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 121)] * input1_shared[((((int)threadIdx.z) * 108) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 121)] * input1_shared[((((int)threadIdx.z) * 108) + 79)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 122)] * input1_shared[((((int)threadIdx.z) * 108) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 122)] * input1_shared[((((int)threadIdx.z) * 108) + 80)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 135)] * input1_shared[((((int)threadIdx.z) * 108) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 135)] * input1_shared[((((int)threadIdx.z) * 108) + 81)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 136)] * input1_shared[((((int)threadIdx.z) * 108) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 136)] * input1_shared[((((int)threadIdx.z) * 108) + 82)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 137)] * input1_shared[((((int)threadIdx.z) * 108) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 137)] * input1_shared[((((int)threadIdx.z) * 108) + 83)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 150)] * input1_shared[((((int)threadIdx.z) * 108) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 150)] * input1_shared[((((int)threadIdx.z) * 108) + 84)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 151)] * input1_shared[((((int)threadIdx.z) * 108) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 151)] * input1_shared[((((int)threadIdx.z) * 108) + 85)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 152)] * input1_shared[((((int)threadIdx.z) * 108) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 152)] * input1_shared[((((int)threadIdx.z) * 108) + 86)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 165)] * input1_shared[((((int)threadIdx.z) * 108) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 165)] * input1_shared[((((int)threadIdx.z) * 108) + 87)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 166)] * input1_shared[((((int)threadIdx.z) * 108) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 166)] * input1_shared[((((int)threadIdx.z) * 108) + 88)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 167)] * input1_shared[((((int)threadIdx.z) * 108) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 167)] * input1_shared[((((int)threadIdx.z) * 108) + 89)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 180)] * input1_shared[((((int)threadIdx.z) * 108) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 180)] * input1_shared[((((int)threadIdx.z) * 108) + 90)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 181)] * input1_shared[((((int)threadIdx.z) * 108) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 181)] * input1_shared[((((int)threadIdx.z) * 108) + 91)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 108) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 108) + 92)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 195)] * input1_shared[((((int)threadIdx.z) * 108) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 195)] * input1_shared[((((int)threadIdx.z) * 108) + 93)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 108) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 108) + 94)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 197)] * input1_shared[((((int)threadIdx.z) * 108) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 197)] * input1_shared[((((int)threadIdx.z) * 108) + 95)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 108) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 108) + 96)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 211)] * input1_shared[((((int)threadIdx.z) * 108) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 211)] * input1_shared[((((int)threadIdx.z) * 108) + 97)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 212)] * input1_shared[((((int)threadIdx.z) * 108) + 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 212)] * input1_shared[((((int)threadIdx.z) * 108) + 98)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 225)] * input1_shared[((((int)threadIdx.z) * 108) + 45)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 225)] * input1_shared[((((int)threadIdx.z) * 108) + 99)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 226)] * input1_shared[((((int)threadIdx.z) * 108) + 46)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 226)] * input1_shared[((((int)threadIdx.z) * 108) + 100)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 227)] * input1_shared[((((int)threadIdx.z) * 108) + 47)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 227)] * input1_shared[((((int)threadIdx.z) * 108) + 101)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 108) + 48)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 108) + 102)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 241)] * input1_shared[((((int)threadIdx.z) * 108) + 49)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 241)] * input1_shared[((((int)threadIdx.z) * 108) + 103)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 242)] * input1_shared[((((int)threadIdx.z) * 108) + 50)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 242)] * input1_shared[((((int)threadIdx.z) * 108) + 104)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 255)] * input1_shared[((((int)threadIdx.z) * 108) + 51)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 255)] * input1_shared[((((int)threadIdx.z) * 108) + 105)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 108) + 52)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 108) + 106)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 257)] * input1_shared[((((int)threadIdx.z) * 108) + 53)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 257)] * input1_shared[((((int)threadIdx.z) * 108) + 107)]));\n  }\n  compute[((((((int)blockIdx.z) * 5408) + (((int)threadIdx.z) * 338)) + (((int)blockIdx.y) * 13)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2))]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 5408) + (((int)threadIdx.z) * 338)) + (((int)blockIdx.y) * 13)) + ((int)threadIdx.x)) + 169)] = max((compute1[1] + input2[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1)]), 0.000000e+00f);\n}\n\n", "gridDim": [1, 13, 12], "blockDim": [13, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_3_227_227_w64_3_11_11_o1_64_55_55_ws4_4_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 3, 227, 227], "filter_shape": [64, 3, 11, 11], "output_shape": [1, 64, 55, 55], "window_movement_strides": [4, 4], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_3_227_227_w64_3_11_11_o1_64_55_55_ws4_4_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[227];\n  __shared__ float input1_shared[88];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[(((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5))];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 3)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 4)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11))];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11))];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 227)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 228)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 229)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 230)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 231)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 11)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 11)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 454)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 455)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 456)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 457)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 458)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 22)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 22)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 681)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 682)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 683)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 684)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 685)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 33)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 33)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 908)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 909)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 910)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 911)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 912)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 44)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 44)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1135)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1136)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1137)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1138)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1139)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 55)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 55)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1362)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1363)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1364)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1365)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1366)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 66)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 66)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1589)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1590)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1591)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1592)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1593)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 77)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 77)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1816)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1817)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1818)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1819)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 1820)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 88)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 88)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2043)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2044)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2045)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2046)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2047)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 99)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 99)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n    __syncthreads();\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[(((int)threadIdx.x) * 5)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2270)];\n    }\n    if (((int)threadIdx.x) < 46) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 1)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2271)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 2)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2272)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 3)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2273)];\n    }\n    if (((int)threadIdx.x) < 45) {\n      pad_temp_shared[((((int)threadIdx.x) * 5) + 4)] = input0[((((rc_outer * 51529) + (((int)blockIdx.y) * 908)) + (((int)threadIdx.x) * 5)) + 2274)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[(((int)threadIdx.x) * 2)] = input1[(((((((int)blockIdx.z) * 2904) + (((((int)threadIdx.x) * 2) / 11) * 363)) + (rc_outer * 121)) + ((((int)threadIdx.x) * 2) % 11)) + 110)];\n    }\n    if (((int)threadIdx.x) < 44) {\n      input1_shared[((((int)threadIdx.x) * 2) + 1)] = input1[(((((((int)blockIdx.z) * 2904) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 363)) + (rc_outer * 121)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 110)];\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[0]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[22]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[44]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[66]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[11]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[33]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[55]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) * 4)] * input1_shared[77]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[1]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[23]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[45]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[67]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[12]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[34]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[56]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 1)] * input1_shared[78]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[2]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[24]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[46]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[68]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[13]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[35]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[57]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 2)] * input1_shared[79]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[3]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[25]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[47]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[69]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[14]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[36]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[58]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 3)] * input1_shared[80]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[4]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[26]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[48]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[70]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[15]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[37]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[59]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 4)] * input1_shared[81]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[5]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[27]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[49]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[71]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[16]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[38]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[60]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 5)] * input1_shared[82]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[6]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[28]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[50]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[72]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[17]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[39]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[61]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 6)] * input1_shared[83]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[7]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[29]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[51]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[73]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[18]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[40]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[62]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 7)] * input1_shared[84]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[8]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[30]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[52]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[74]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[19]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[41]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[63]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 8)] * input1_shared[85]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[9]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[31]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[53]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[75]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[20]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[42]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[64]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 9)] * input1_shared[86]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[10]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[32]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[54]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[76]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[21]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[43]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[65]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 4) + 10)] * input1_shared[87]));\n  }\n  compute[(((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x))] = max((compute1[0] + input2[(((int)blockIdx.z) * 8)]), 0.000000e+00f);\n  compute[((((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x)) + 6050)] = max((compute1[2] + input2[((((int)blockIdx.z) * 8) + 2)]), 0.000000e+00f);\n  compute[((((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x)) + 12100)] = max((compute1[4] + input2[((((int)blockIdx.z) * 8) + 4)]), 0.000000e+00f);\n  compute[((((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x)) + 18150)] = max((compute1[6] + input2[((((int)blockIdx.z) * 8) + 6)]), 0.000000e+00f);\n  compute[((((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x)) + 3025)] = max((compute1[1] + input2[((((int)blockIdx.z) * 8) + 1)]), 0.000000e+00f);\n  compute[((((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x)) + 9075)] = max((compute1[3] + input2[((((int)blockIdx.z) * 8) + 3)]), 0.000000e+00f);\n  compute[((((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x)) + 15125)] = max((compute1[5] + input2[((((int)blockIdx.z) * 8) + 5)]), 0.000000e+00f);\n  compute[((((((int)blockIdx.z) * 24200) + (((int)blockIdx.y) * 55)) + ((int)threadIdx.x)) + 21175)] = max((compute1[7] + input2[((((int)blockIdx.z) * 8) + 7)]), 0.000000e+00f);\n}\n\n", "gridDim": [1, 55, 8], "blockDim": [55, 1, 1]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_384_13_13_w384_384_3_3_o1_384_13_13_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 384, 13, 13], "filter_shape": [384, 384, 3, 3], "output_shape": [1, 384, 13, 13], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_384_13_13_w384_384_3_3_o1_384_13_13_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[270];\n  __shared__ float input1_shared[1728];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) < 270) {\n      if (((int)threadIdx.x) < 9) {\n        pad_temp_shared[((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2))] = (((((1 <= (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 45) / 15) + ((int)blockIdx.y))) && ((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 45) / 15) + ((int)blockIdx.y)) < 14)) && (1 <= (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 15))) && ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 15) < 14)) ? input0[((((((rc_outer * 1014) + ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) / 45) * 169)) + (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 45) / 15) * 13)) + (((int)blockIdx.y) * 13)) + (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) % 15)) - 14)] : 0.000000e+00f);\n      }\n    }\n    if (((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) < 269) {\n      if (((int)threadIdx.x) < 8) {\n        pad_temp_shared[(((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1)] = (((((1 <= ((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 45) / 15) + ((int)blockIdx.y))) && (((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 45) / 15) + ((int)blockIdx.y)) < 14)) && (1 <= ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 15))) && (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 15) < 14)) ? input0[((((((rc_outer * 1014) + (((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) / 45) * 169)) + ((((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 45) / 15) * 13)) + (((int)blockIdx.y) * 13)) + ((((((int)threadIdx.z) * 17) + (((int)threadIdx.x) * 2)) + 1) % 15)) - 14)] : 0.000000e+00f);\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 576) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1728) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9))] = input1[(((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9))];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 576) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1727) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 1)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 1)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 576) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1726) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 2)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 2)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 575) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1725) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 3)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 3)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 575) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1724) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 4)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 4)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 575) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1723) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 5)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 5)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 574) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1722) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 6)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 6)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 574) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1721) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 7)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 7)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) < 32) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 192) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.x) * 3)) < 574) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) < 1720) {\n            if (((int)threadIdx.x) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 9)) + 8)] = input1[((((((((int)blockIdx.z) * 110592) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.x) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.x) % 6) * 9)) + 8)];\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 108)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 108) + 54)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 108) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 108) + 55)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 108) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 108) + 56)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 108) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 108) + 57)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 108) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 108) + 58)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 17)] * input1_shared[((((int)threadIdx.z) * 108) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 17)] * input1_shared[((((int)threadIdx.z) * 108) + 59)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 108) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 108) + 60)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 31)] * input1_shared[((((int)threadIdx.z) * 108) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 31)] * input1_shared[((((int)threadIdx.z) * 108) + 61)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 108) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 108) + 62)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 45)] * input1_shared[((((int)threadIdx.z) * 108) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 45)] * input1_shared[((((int)threadIdx.z) * 108) + 63)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 46)] * input1_shared[((((int)threadIdx.z) * 108) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 46)] * input1_shared[((((int)threadIdx.z) * 108) + 64)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 47)] * input1_shared[((((int)threadIdx.z) * 108) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 47)] * input1_shared[((((int)threadIdx.z) * 108) + 65)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 60)] * input1_shared[((((int)threadIdx.z) * 108) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 60)] * input1_shared[((((int)threadIdx.z) * 108) + 66)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 61)] * input1_shared[((((int)threadIdx.z) * 108) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 61)] * input1_shared[((((int)threadIdx.z) * 108) + 67)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 62)] * input1_shared[((((int)threadIdx.z) * 108) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 62)] * input1_shared[((((int)threadIdx.z) * 108) + 68)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 75)] * input1_shared[((((int)threadIdx.z) * 108) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 75)] * input1_shared[((((int)threadIdx.z) * 108) + 69)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 76)] * input1_shared[((((int)threadIdx.z) * 108) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 76)] * input1_shared[((((int)threadIdx.z) * 108) + 70)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 108) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 108) + 71)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 90)] * input1_shared[((((int)threadIdx.z) * 108) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 90)] * input1_shared[((((int)threadIdx.z) * 108) + 72)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 108) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 108) + 73)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 92)] * input1_shared[((((int)threadIdx.z) * 108) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 92)] * input1_shared[((((int)threadIdx.z) * 108) + 74)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 108) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 108) + 75)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 106)] * input1_shared[((((int)threadIdx.z) * 108) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 106)] * input1_shared[((((int)threadIdx.z) * 108) + 76)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 107)] * input1_shared[((((int)threadIdx.z) * 108) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 107)] * input1_shared[((((int)threadIdx.z) * 108) + 77)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 120)] * input1_shared[((((int)threadIdx.z) * 108) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 120)] * input1_shared[((((int)threadIdx.z) * 108) + 78)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 121)] * input1_shared[((((int)threadIdx.z) * 108) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 121)] * input1_shared[((((int)threadIdx.z) * 108) + 79)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 122)] * input1_shared[((((int)threadIdx.z) * 108) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 122)] * input1_shared[((((int)threadIdx.z) * 108) + 80)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 135)] * input1_shared[((((int)threadIdx.z) * 108) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 135)] * input1_shared[((((int)threadIdx.z) * 108) + 81)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 136)] * input1_shared[((((int)threadIdx.z) * 108) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 136)] * input1_shared[((((int)threadIdx.z) * 108) + 82)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 137)] * input1_shared[((((int)threadIdx.z) * 108) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 137)] * input1_shared[((((int)threadIdx.z) * 108) + 83)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 150)] * input1_shared[((((int)threadIdx.z) * 108) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 150)] * input1_shared[((((int)threadIdx.z) * 108) + 84)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 151)] * input1_shared[((((int)threadIdx.z) * 108) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 151)] * input1_shared[((((int)threadIdx.z) * 108) + 85)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 152)] * input1_shared[((((int)threadIdx.z) * 108) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 152)] * input1_shared[((((int)threadIdx.z) * 108) + 86)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 165)] * input1_shared[((((int)threadIdx.z) * 108) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 165)] * input1_shared[((((int)threadIdx.z) * 108) + 87)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 166)] * input1_shared[((((int)threadIdx.z) * 108) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 166)] * input1_shared[((((int)threadIdx.z) * 108) + 88)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 167)] * input1_shared[((((int)threadIdx.z) * 108) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 167)] * input1_shared[((((int)threadIdx.z) * 108) + 89)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 180)] * input1_shared[((((int)threadIdx.z) * 108) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 180)] * input1_shared[((((int)threadIdx.z) * 108) + 90)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 181)] * input1_shared[((((int)threadIdx.z) * 108) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 181)] * input1_shared[((((int)threadIdx.z) * 108) + 91)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 108) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 108) + 92)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 195)] * input1_shared[((((int)threadIdx.z) * 108) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 195)] * input1_shared[((((int)threadIdx.z) * 108) + 93)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 108) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 108) + 94)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 197)] * input1_shared[((((int)threadIdx.z) * 108) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 197)] * input1_shared[((((int)threadIdx.z) * 108) + 95)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 108) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 108) + 96)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 211)] * input1_shared[((((int)threadIdx.z) * 108) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 211)] * input1_shared[((((int)threadIdx.z) * 108) + 97)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 212)] * input1_shared[((((int)threadIdx.z) * 108) + 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 212)] * input1_shared[((((int)threadIdx.z) * 108) + 98)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 225)] * input1_shared[((((int)threadIdx.z) * 108) + 45)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 225)] * input1_shared[((((int)threadIdx.z) * 108) + 99)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 226)] * input1_shared[((((int)threadIdx.z) * 108) + 46)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 226)] * input1_shared[((((int)threadIdx.z) * 108) + 100)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 227)] * input1_shared[((((int)threadIdx.z) * 108) + 47)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 227)] * input1_shared[((((int)threadIdx.z) * 108) + 101)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 108) + 48)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 108) + 102)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 241)] * input1_shared[((((int)threadIdx.z) * 108) + 49)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 241)] * input1_shared[((((int)threadIdx.z) * 108) + 103)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 242)] * input1_shared[((((int)threadIdx.z) * 108) + 50)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 242)] * input1_shared[((((int)threadIdx.z) * 108) + 104)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 255)] * input1_shared[((((int)threadIdx.z) * 108) + 51)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 255)] * input1_shared[((((int)threadIdx.z) * 108) + 105)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 108) + 52)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 108) + 106)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 257)] * input1_shared[((((int)threadIdx.z) * 108) + 53)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 257)] * input1_shared[((((int)threadIdx.z) * 108) + 107)]));\n  }\n  compute[((((((int)blockIdx.z) * 5408) + (((int)threadIdx.z) * 338)) + (((int)blockIdx.y) * 13)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2))]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 5408) + (((int)threadIdx.z) * 338)) + (((int)blockIdx.y) * 13)) + ((int)threadIdx.x)) + 169)] = max((compute1[1] + input2[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1)]), 0.000000e+00f);\n}\n\n", "gridDim": [1, 13, 12], "blockDim": [13, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_384_13_13_w256_384_3_3_o1_256_13_13_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 384, 13, 13], "filter_shape": [256, 384, 3, 3], "output_shape": [1, 256, 13, 13], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_384_13_13_w256_384_3_3_o1_256_13_13_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[270];\n  __shared__ float input1_shared[864];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    if ((((((int)threadIdx.z) * 34) / 3) + ((int)threadIdx.y)) < 90) {\n      if (((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 3)) < 270) {\n        if (((int)threadIdx.y) < 12) {\n          pad_temp_shared[((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 3))] = (((((1 <= ((((((int)threadIdx.z) * 34) / 3) + ((int)threadIdx.y)) % 15)) && (((((((int)threadIdx.z) * 34) / 3) + ((int)threadIdx.y)) % 15) < 14)) && (1 <= (((int)blockIdx.x) + ((((int)threadIdx.z) * 34) % 3)))) && ((((int)blockIdx.x) + ((((int)threadIdx.z) * 34) % 3)) < 14)) ? input0[((((((rc_outer * 1014) + (((((((int)threadIdx.z) * 34) / 3) + ((int)threadIdx.y)) / 15) * 169)) + (((((((int)threadIdx.z) * 34) / 3) + ((int)threadIdx.y)) % 15) * 13)) + ((int)blockIdx.x)) + ((((int)threadIdx.z) * 34) % 3)) - 14)] : 0.000000e+00f);\n        }\n      }\n    }\n    if (((((((int)threadIdx.z) * 34) + 1) / 3) + ((int)threadIdx.y)) < 90) {\n      if (((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 3)) < 269) {\n        if (((int)threadIdx.y) < 11) {\n          pad_temp_shared[(((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 3)) + 1)] = (((((1 <= (((((((int)threadIdx.z) * 34) + 1) / 3) + ((int)threadIdx.y)) % 15)) && ((((((((int)threadIdx.z) * 34) + 1) / 3) + ((int)threadIdx.y)) % 15) < 14)) && (1 <= (((int)blockIdx.x) + (((((int)threadIdx.z) * 34) + 1) % 3)))) && ((((int)blockIdx.x) + (((((int)threadIdx.z) * 34) + 1) % 3)) < 14)) ? input0[((((((rc_outer * 1014) + ((((((((int)threadIdx.z) * 34) + 1) / 3) + ((int)threadIdx.y)) / 15) * 169)) + ((((((((int)threadIdx.z) * 34) + 1) / 3) + ((int)threadIdx.y)) % 15) * 13)) + ((int)blockIdx.x)) + (((((int)threadIdx.z) * 34) + 1) % 3)) - 14)] : 0.000000e+00f);\n        }\n      }\n    }\n    if (((((((int)threadIdx.z) * 34) + 2) / 3) + ((int)threadIdx.y)) < 90) {\n      if (((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 3)) < 268) {\n        if (((int)threadIdx.y) < 11) {\n          pad_temp_shared[(((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 3)) + 2)] = (((((1 <= (((((((int)threadIdx.z) * 34) + 2) / 3) + ((int)threadIdx.y)) % 15)) && ((((((((int)threadIdx.z) * 34) + 2) / 3) + ((int)threadIdx.y)) % 15) < 14)) && (1 <= (((int)blockIdx.x) + (((((int)threadIdx.z) * 34) + 2) % 3)))) && ((((int)blockIdx.x) + (((((int)threadIdx.z) * 34) + 2) % 3)) < 14)) ? input0[((((((rc_outer * 1014) + ((((((((int)threadIdx.z) * 34) + 2) / 3) + ((int)threadIdx.y)) / 15) * 169)) + ((((((((int)threadIdx.z) * 34) + 2) / 3) + ((int)threadIdx.y)) % 15) * 13)) + ((int)blockIdx.x)) + (((((int)threadIdx.z) * 34) + 2) % 3)) - 14)] : 0.000000e+00f);\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 288) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 864) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9))] = input1[(((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9))];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 288) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 863) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 1)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 1)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 288) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 862) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 2)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 2)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 287) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 861) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 3)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 3)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 287) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 860) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 4)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 4)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 287) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 859) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 5)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 5)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 286) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 858) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 6)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 6)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 286) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 857) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 7)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 7)];\n            }\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.y) / 6)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 96) {\n        if (((((int)threadIdx.z) * 36) + (((int)threadIdx.y) * 3)) < 286) {\n          if (((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) < 856) {\n            if (((int)threadIdx.y) < 12) {\n              input1_shared[(((((int)threadIdx.z) * 108) + (((int)threadIdx.y) * 9)) + 8)] = input1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 6912)) + ((((int)threadIdx.y) / 6) * 3456)) + (rc_outer * 54)) + ((((int)threadIdx.y) % 6) * 9)) + 8)];\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 3)] * input1_shared[(((int)threadIdx.z) * 54)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.y) * 3)] * input1_shared[((((int)threadIdx.z) * 54) + 432)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 1)] * input1_shared[((((int)threadIdx.z) * 54) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 1)] * input1_shared[((((int)threadIdx.z) * 54) + 433)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 2)] * input1_shared[((((int)threadIdx.z) * 54) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 2)] * input1_shared[((((int)threadIdx.z) * 54) + 434)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 3)] * input1_shared[((((int)threadIdx.z) * 54) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 3)] * input1_shared[((((int)threadIdx.z) * 54) + 435)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 4)] * input1_shared[((((int)threadIdx.z) * 54) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 4)] * input1_shared[((((int)threadIdx.z) * 54) + 436)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 5)] * input1_shared[((((int)threadIdx.z) * 54) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 5)] * input1_shared[((((int)threadIdx.z) * 54) + 437)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 6)] * input1_shared[((((int)threadIdx.z) * 54) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 6)] * input1_shared[((((int)threadIdx.z) * 54) + 438)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 7)] * input1_shared[((((int)threadIdx.z) * 54) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 7)] * input1_shared[((((int)threadIdx.z) * 54) + 439)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 8)] * input1_shared[((((int)threadIdx.z) * 54) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 8)] * input1_shared[((((int)threadIdx.z) * 54) + 440)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 45)] * input1_shared[((((int)threadIdx.z) * 54) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 45)] * input1_shared[((((int)threadIdx.z) * 54) + 441)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 46)] * input1_shared[((((int)threadIdx.z) * 54) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 46)] * input1_shared[((((int)threadIdx.z) * 54) + 442)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 47)] * input1_shared[((((int)threadIdx.z) * 54) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 47)] * input1_shared[((((int)threadIdx.z) * 54) + 443)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 48)] * input1_shared[((((int)threadIdx.z) * 54) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 48)] * input1_shared[((((int)threadIdx.z) * 54) + 444)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 49)] * input1_shared[((((int)threadIdx.z) * 54) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 49)] * input1_shared[((((int)threadIdx.z) * 54) + 445)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 50)] * input1_shared[((((int)threadIdx.z) * 54) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 50)] * input1_shared[((((int)threadIdx.z) * 54) + 446)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 51)] * input1_shared[((((int)threadIdx.z) * 54) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 51)] * input1_shared[((((int)threadIdx.z) * 54) + 447)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 52)] * input1_shared[((((int)threadIdx.z) * 54) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 52)] * input1_shared[((((int)threadIdx.z) * 54) + 448)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 53)] * input1_shared[((((int)threadIdx.z) * 54) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 53)] * input1_shared[((((int)threadIdx.z) * 54) + 449)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 90)] * input1_shared[((((int)threadIdx.z) * 54) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 90)] * input1_shared[((((int)threadIdx.z) * 54) + 450)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 91)] * input1_shared[((((int)threadIdx.z) * 54) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 91)] * input1_shared[((((int)threadIdx.z) * 54) + 451)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 92)] * input1_shared[((((int)threadIdx.z) * 54) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 92)] * input1_shared[((((int)threadIdx.z) * 54) + 452)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 93)] * input1_shared[((((int)threadIdx.z) * 54) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 93)] * input1_shared[((((int)threadIdx.z) * 54) + 453)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 94)] * input1_shared[((((int)threadIdx.z) * 54) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 94)] * input1_shared[((((int)threadIdx.z) * 54) + 454)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 95)] * input1_shared[((((int)threadIdx.z) * 54) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 95)] * input1_shared[((((int)threadIdx.z) * 54) + 455)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 96)] * input1_shared[((((int)threadIdx.z) * 54) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 96)] * input1_shared[((((int)threadIdx.z) * 54) + 456)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 97)] * input1_shared[((((int)threadIdx.z) * 54) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 97)] * input1_shared[((((int)threadIdx.z) * 54) + 457)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 98)] * input1_shared[((((int)threadIdx.z) * 54) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 98)] * input1_shared[((((int)threadIdx.z) * 54) + 458)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 135)] * input1_shared[((((int)threadIdx.z) * 54) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 135)] * input1_shared[((((int)threadIdx.z) * 54) + 459)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 136)] * input1_shared[((((int)threadIdx.z) * 54) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 136)] * input1_shared[((((int)threadIdx.z) * 54) + 460)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 137)] * input1_shared[((((int)threadIdx.z) * 54) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 137)] * input1_shared[((((int)threadIdx.z) * 54) + 461)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 138)] * input1_shared[((((int)threadIdx.z) * 54) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 138)] * input1_shared[((((int)threadIdx.z) * 54) + 462)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 139)] * input1_shared[((((int)threadIdx.z) * 54) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 139)] * input1_shared[((((int)threadIdx.z) * 54) + 463)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 140)] * input1_shared[((((int)threadIdx.z) * 54) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 140)] * input1_shared[((((int)threadIdx.z) * 54) + 464)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 141)] * input1_shared[((((int)threadIdx.z) * 54) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 141)] * input1_shared[((((int)threadIdx.z) * 54) + 465)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 142)] * input1_shared[((((int)threadIdx.z) * 54) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 142)] * input1_shared[((((int)threadIdx.z) * 54) + 466)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 143)] * input1_shared[((((int)threadIdx.z) * 54) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 143)] * input1_shared[((((int)threadIdx.z) * 54) + 467)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 180)] * input1_shared[((((int)threadIdx.z) * 54) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 180)] * input1_shared[((((int)threadIdx.z) * 54) + 468)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 181)] * input1_shared[((((int)threadIdx.z) * 54) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 181)] * input1_shared[((((int)threadIdx.z) * 54) + 469)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 182)] * input1_shared[((((int)threadIdx.z) * 54) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 182)] * input1_shared[((((int)threadIdx.z) * 54) + 470)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 183)] * input1_shared[((((int)threadIdx.z) * 54) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 183)] * input1_shared[((((int)threadIdx.z) * 54) + 471)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 184)] * input1_shared[((((int)threadIdx.z) * 54) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 184)] * input1_shared[((((int)threadIdx.z) * 54) + 472)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 185)] * input1_shared[((((int)threadIdx.z) * 54) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 185)] * input1_shared[((((int)threadIdx.z) * 54) + 473)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 186)] * input1_shared[((((int)threadIdx.z) * 54) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 186)] * input1_shared[((((int)threadIdx.z) * 54) + 474)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 187)] * input1_shared[((((int)threadIdx.z) * 54) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 187)] * input1_shared[((((int)threadIdx.z) * 54) + 475)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 188)] * input1_shared[((((int)threadIdx.z) * 54) + 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 188)] * input1_shared[((((int)threadIdx.z) * 54) + 476)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 225)] * input1_shared[((((int)threadIdx.z) * 54) + 45)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 225)] * input1_shared[((((int)threadIdx.z) * 54) + 477)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 226)] * input1_shared[((((int)threadIdx.z) * 54) + 46)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 226)] * input1_shared[((((int)threadIdx.z) * 54) + 478)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 227)] * input1_shared[((((int)threadIdx.z) * 54) + 47)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 227)] * input1_shared[((((int)threadIdx.z) * 54) + 479)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 228)] * input1_shared[((((int)threadIdx.z) * 54) + 48)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 228)] * input1_shared[((((int)threadIdx.z) * 54) + 480)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 229)] * input1_shared[((((int)threadIdx.z) * 54) + 49)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 229)] * input1_shared[((((int)threadIdx.z) * 54) + 481)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 230)] * input1_shared[((((int)threadIdx.z) * 54) + 50)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 230)] * input1_shared[((((int)threadIdx.z) * 54) + 482)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 231)] * input1_shared[((((int)threadIdx.z) * 54) + 51)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 231)] * input1_shared[((((int)threadIdx.z) * 54) + 483)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 232)] * input1_shared[((((int)threadIdx.z) * 54) + 52)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 232)] * input1_shared[((((int)threadIdx.z) * 54) + 484)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 233)] * input1_shared[((((int)threadIdx.z) * 54) + 53)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 3) + 233)] * input1_shared[((((int)threadIdx.z) * 54) + 485)]));\n  }\n  compute[((((((int)blockIdx.z) * 2704) + (((int)threadIdx.z) * 169)) + (((int)threadIdx.y) * 13)) + ((int)blockIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 2704) + (((int)threadIdx.z) * 169)) + (((int)threadIdx.y) * 13)) + ((int)blockIdx.x)) + 1352)] = max((compute1[1] + input2[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8)]), 0.000000e+00f);\n}\n\n", "gridDim": [13, 1, 16], "blockDim": [1, 13, 8]}]