[{"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_88_14_14_w88_88_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 88, 14, 14], "filter_shape": [88, 88, 1, 1], "output_shape": [1, 88, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_88_14_14_w88_88_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1232];\n  __shared__ float input1_shared[968];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + (((((int)threadIdx.x) * 8) / 28) * 196)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 8) % 28))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 1) % 28))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 2) % 28))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 3) % 28))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 4) % 28))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 5) % 28))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 6) % 28))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[(((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 7) % 28))];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7))];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 1)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 2)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 3)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 4)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 5)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 6)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 7)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 7)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 35)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 35)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 63)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 63)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 91)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 91)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 119)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 119)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 147)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 147)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 175)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 175)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 203)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 203)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 231)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 231)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 259)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 259)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 287)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 287)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 315)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 315)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 343)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 343)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 371)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 371)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 399)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 399)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 427)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 427)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 455)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 455)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 483)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 483)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 511)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 511)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 539)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 539)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 567)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 567)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 595)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 595)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 623)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 623)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 651)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 651)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 679)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 679)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 707)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 707)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 735)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 735)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 763)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 763)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 791)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 791)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 819)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 819)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 847)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 847)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 875)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 875)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 903)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 903)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 931)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 931)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 959)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 959)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 987)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 987)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1015)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1015)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1043)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1043)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1071)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1071)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1099)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1099)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1127)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1127)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1155)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1155)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1183)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1183)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1211)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1211)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + (((((int)threadIdx.x) * 8) / 28) * 196)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 8) % 28)) + 8624)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 1) % 28)) + 8624)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 2) % 28)) + 8624)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 3) % 28)) + 8624)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 4) % 28)) + 8624)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 5) % 28)) + 8624)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 6) % 28)) + 8624)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[((((((((int)threadIdx.z) * 784) + (((int)threadIdx.y) * 392)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + 7) % 28)) + 8624)];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 44)];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 45)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 46)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 47)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 48)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 49)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.y) * 88)) + (((int)threadIdx.x) * 7)) + 50)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 7)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 7)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 35)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 35)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 63)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 63)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 91)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 91)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 119)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 119)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 147)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 147)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 175)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 175)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 203)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 203)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 231)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 231)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 259)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 259)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 287)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 287)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 315)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 315)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 343)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 343)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 371)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 371)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 399)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 399)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 427)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 427)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 455)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 455)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 483)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 483)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 511)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 511)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 539)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 539)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 567)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 567)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 595)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 595)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 623)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 623)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 651)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 651)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 679)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 679)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 707)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 707)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 735)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 735)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 763)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 763)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 791)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 791)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 819)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 819)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 847)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 847)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 875)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 875)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 903)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 903)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 931)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 931)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 959)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 959)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 987)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 987)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1015)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1015)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1043)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1043)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1071)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1071)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1099)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1099)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1127)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1127)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1155)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1155)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1183)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1183)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1211)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + ((int)threadIdx.x)) + 1211)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute[(((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 2156)] = max(compute1[2], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 7)] = max(compute1[1], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 2163)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [1, 7, 4], "blockDim": [7, 2, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_264_28_28_w88_264_1_1_o1_88_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 264, 28, 28], "filter_shape": [88, 264, 1, 1], "output_shape": [1, 88, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_264_28_28_w88_264_1_1_o1_88_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1848];\n  __shared__ float input1_shared[726];\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    for (int xx_init = 0; xx_init < 2; ++xx_init) {\n      compute1[((ff_init * 2) + xx_init)] = 0.000000e+00f;\n    }\n  }\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 168) + (((int)threadIdx.y) * 84)) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 25872) + (((int)threadIdx.z) * 2352)) + ((((((int)threadIdx.y) * 3) + (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28)) >> 1) * 784)) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.y) * 3) + (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28)) & 1) * 28)) + (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 33)) + ((int)threadIdx.y)) < 22) {\n        if (((((((int)threadIdx.z) * 66) + (((int)threadIdx.y) * 33)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 726) {\n          if ((((((int)threadIdx.y) * 33) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 66) {\n            if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 33) {\n              input1_shared[((((((int)threadIdx.z) * 66) + (((int)threadIdx.y) * 33)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (rc_outer * 33)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 33; ++rc_inner) {\n      for (int ff = 0; ff < 2; ++ff) {\n        for (int xx = 0; xx < 2; ++xx) {\n          compute1[((ff * 2) + xx)] = (compute1[((ff * 2) + xx)] + (pad_temp_shared[((((rc_inner * 56) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 66) + (ff * 33)) + rc_inner)]));\n        }\n      }\n    }\n  }\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n      compute[(((((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 1568)) + (i1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[((i1_inner_inner_inner * 2) + i3_inner_inner_inner)], 0.000000e+00f);\n    }\n  }\n}\n\n", "gridDim": [1, 14, 4], "blockDim": [14, 2, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_528_14_14_w176_528_1_1_o1_176_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 528, 14, 14], "filter_shape": [176, 528, 1, 1], "output_shape": [1, 176, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_528_14_14_w176_528_1_1_o1_176_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[672];\n  __shared__ float input1_shared[384];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 22; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 4704) + ((((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14)) >> 1) * 196)) + (((int)blockIdx.y) * 28)) + ((((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14)) & 1) * 14)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 14))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 24) + ((int)threadIdx.z)) < 16) {\n        if ((((((int)threadIdx.z) * 24) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 384) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 24) {\n            input1_shared[(((((int)threadIdx.z) * 24) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 8448) + (((int)threadIdx.z) * 528)) + (rc_outer * 24)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 24; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 24) + rc_inner)]));\n      compute1[1] = (compute1[1] + (pad_temp_shared[(((rc_inner * 28) + ((int)threadIdx.x)) + 14)] * input1_shared[((((int)threadIdx.z) * 24) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 7, 11], "blockDim": [14, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_44_28_28_w22_44_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 44, 28, 28], "filter_shape": [22, 44, 1, 1], "output_shape": [1, 22, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_44_28_28_w22_44_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1232];\n  __shared__ float input1_shared[968];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    #pragma unroll\n    for (int xx_init = 0; xx_init < 2; ++xx_init) {\n      compute1[((ff_init * 2) + xx_init)] = 0.000000e+00f;\n    }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((int)threadIdx.z) * 3136) + ((((((int)threadIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44)) < 22) {\n      if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 968) {\n        if (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 88) {\n          input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  #pragma unroll\n  for (int rc_inner = 0; rc_inner < 44; ++rc_inner) {\n    #pragma unroll\n    for (int ff = 0; ff < 2; ++ff) {\n      #pragma unroll\n      for (int xx = 0; xx < 2; ++xx) {\n        compute1[((ff * 2) + xx)] = (compute1[((ff * 2) + xx)] + (pad_temp_shared[(((rc_inner * 28) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 88) + (ff * 44)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    #pragma unroll\n    for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n      compute[(((((((int)threadIdx.z) * 1568) + (i1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[((i1_inner_inner_inner * 2) + i3_inner_inner_inner)], 0.000000e+00f);\n    }\n  }\n}\n\n", "gridDim": [1, 28, 1], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_11_56_56_w11_11_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 11, 56, 56], "filter_shape": [11, 11, 1, 1], "output_shape": [1, 11, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_11_56_56_w11_11_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[11];\n  __shared__ float pad_temp_shared[1232];\n  __shared__ float input1_shared[121];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  compute1[8] = 0.000000e+00f;\n  compute1[9] = 0.000000e+00f;\n  compute1[10] = 0.000000e+00f;\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 11; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n    pad_temp_shared[(((((int)threadIdx.y) * 616) + (((int)threadIdx.x) * 11)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((((((int)threadIdx.y) * 11) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 56)) >> 1) * 3136) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.y) * 11) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 56)) & 1) * 56)) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 56))];\n  }\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n    if ((((((int)threadIdx.y) * 61) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 121) {\n      if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 61) {\n        input1_shared[(((((int)threadIdx.y) * 61) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((int)threadIdx.y) * 61) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n      }\n    }\n  }\n  __syncthreads();\n  for (int rc_inner = 0; rc_inner < 11; ++rc_inner) {\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[rc_inner]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 22)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 33)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 44)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 55)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 66)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 77)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 88)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 99)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((rc_inner * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] * input1_shared[(rc_inner + 110)]));\n  }\n  compute[(((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 3136)] = max(compute1[1], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 6272)] = max(compute1[2], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 9408)] = max(compute1[3], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 12544)] = max(compute1[4], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 15680)] = max(compute1[5], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 18816)] = max(compute1[6], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 21952)] = max(compute1[7], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 25088)] = max(compute1[8], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 28224)] = max(compute1[9], 0.000000e+00f);\n  compute[((((((int)blockIdx.y) * 112) + (((int)threadIdx.y) * 56)) + ((int)threadIdx.x)) + 31360)] = max(compute1[10], 0.000000e+00f);\n}\n\n", "gridDim": [1, 28, 1], "blockDim": [56, 2, 1]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_32_56_56_w11_32_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 32, 56, 56], "filter_shape": [11, 32, 1, 1], "output_shape": [1, 11, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_32_56_56_w11_32_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[896];\n  __shared__ float input1_shared[176];\n  #pragma unroll\n  for (int yy_init = 0; yy_init < 2; ++yy_init) {\n    compute1[yy_init] = 0.000000e+00f;\n    compute1[(yy_init + 2)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 2; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if ((((((int)threadIdx.z) * 82) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 896) {\n        if (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 82) {\n          pad_temp_shared[(((((int)threadIdx.z) * 82) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 50176) + (((((((int)threadIdx.z) * 82) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((((int)threadIdx.z) * 82) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 82) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n        }\n      }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) + ((int)threadIdx.z)) < 11) {\n        if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 176) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 16) {\n            input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((int)threadIdx.z) * 32) + (rc_outer * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      #pragma unroll\n      for (int yy = 0; yy < 2; ++yy) {\n        compute1[yy] = (compute1[yy] + (pad_temp_shared[(((rc_inner * 56) + (yy * 28)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n        compute1[(yy + 2)] = (compute1[(yy + 2)] + (pad_temp_shared[((((rc_inner * 56) + (yy * 28)) + ((int)threadIdx.x)) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i2_inner_inner_inner = 0; i2_inner_inner_inner < 2; ++i2_inner_inner_inner) {\n    compute[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (i2_inner_inner_inner * 56)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x))] = max(compute1[i2_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (i2_inner_inner_inner * 56)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 14)] = max(compute1[(i2_inner_inner_inner + 2)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [2, 28, 1], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_88_28_28_w44_88_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 88, 28, 28], "filter_shape": [44, 88, 1, 1], "output_shape": [1, 44, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_88_28_28_w44_88_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[2464];\n  __shared__ float input1_shared[1936];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16))] = input0[((((((int)threadIdx.z) * 6272) + (((((int)threadIdx.x) * 16) / 28) * 784)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 16) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 1)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 1) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 1) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 2)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 2) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 2) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 3)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 3) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 3) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 4)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 4) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 4) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 5)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 5) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 5) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 6)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 6) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 6) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 7)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 7) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 7) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 8)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 8) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 8) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 9)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 9) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 9) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 10)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 10) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 10) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 11)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 11) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 11) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 12)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 12) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 12) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 13)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 13) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 13) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 14)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 14) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 14) % 28))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 16)) + 15)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 16) + 15) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 16) + 15) % 28))];\n  input1_shared[((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13))] = input1[(((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13))];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 1)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 1)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 2)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 2)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 3)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 3)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 4)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 4)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 5)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 5)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 6)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 6)];\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 7) / 88)) < 22) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1929) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 7)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 7)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 8) / 88)) < 22) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1928) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 8)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 8)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 9) / 88)) < 22) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1927) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 9)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 9)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 10) / 88)) < 22) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1926) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 10)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 10)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 11) / 88)) < 22) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1925) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 11)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 11)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 12) / 88)) < 22) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1924) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 12)] = input1[((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 13)) + 12)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 88)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 88) + 968)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 88)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 88) + 968)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 88) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 88) + 969)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 88) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 88) + 969)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 88) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 88) + 970)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 88) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 88) + 970)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 88) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 88) + 971)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 88) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 88) + 971)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 88) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 88) + 972)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 88) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 88) + 972)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 88) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 88) + 973)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 88) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 88) + 973)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 88) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 88) + 974)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 88) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 88) + 974)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 88) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 88) + 975)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 88) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 88) + 975)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 88) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 88) + 976)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 88) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 88) + 976)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 88) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 88) + 977)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 88) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 88) + 977)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 88) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 88) + 978)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 88) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 88) + 978)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 88) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 88) + 979)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 88) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 88) + 979)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 88) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 88) + 980)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 88) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 88) + 980)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 88) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 88) + 981)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 88) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 88) + 981)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 88) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 88) + 982)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 88) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 88) + 982)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 88) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 88) + 983)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 88) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 88) + 983)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 88) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 88) + 984)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 88) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 88) + 984)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 88) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 88) + 985)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 88) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 88) + 985)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 88) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 88) + 986)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 88) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 88) + 986)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 88) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 88) + 987)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 88) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 88) + 987)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 88) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 88) + 988)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 88) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 88) + 988)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 88) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 88) + 989)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 88) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 88) + 989)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 616)] * input1_shared[((((int)threadIdx.z) * 88) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 616)] * input1_shared[((((int)threadIdx.z) * 88) + 990)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 617)] * input1_shared[((((int)threadIdx.z) * 88) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 617)] * input1_shared[((((int)threadIdx.z) * 88) + 990)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 644)] * input1_shared[((((int)threadIdx.z) * 88) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 644)] * input1_shared[((((int)threadIdx.z) * 88) + 991)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 645)] * input1_shared[((((int)threadIdx.z) * 88) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 645)] * input1_shared[((((int)threadIdx.z) * 88) + 991)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 672)] * input1_shared[((((int)threadIdx.z) * 88) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 672)] * input1_shared[((((int)threadIdx.z) * 88) + 992)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 673)] * input1_shared[((((int)threadIdx.z) * 88) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 673)] * input1_shared[((((int)threadIdx.z) * 88) + 992)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 700)] * input1_shared[((((int)threadIdx.z) * 88) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 700)] * input1_shared[((((int)threadIdx.z) * 88) + 993)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 701)] * input1_shared[((((int)threadIdx.z) * 88) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 701)] * input1_shared[((((int)threadIdx.z) * 88) + 993)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 728)] * input1_shared[((((int)threadIdx.z) * 88) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 728)] * input1_shared[((((int)threadIdx.z) * 88) + 994)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 729)] * input1_shared[((((int)threadIdx.z) * 88) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 729)] * input1_shared[((((int)threadIdx.z) * 88) + 994)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 756)] * input1_shared[((((int)threadIdx.z) * 88) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 756)] * input1_shared[((((int)threadIdx.z) * 88) + 995)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 757)] * input1_shared[((((int)threadIdx.z) * 88) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 757)] * input1_shared[((((int)threadIdx.z) * 88) + 995)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 784)] * input1_shared[((((int)threadIdx.z) * 88) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 784)] * input1_shared[((((int)threadIdx.z) * 88) + 996)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 785)] * input1_shared[((((int)threadIdx.z) * 88) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 785)] * input1_shared[((((int)threadIdx.z) * 88) + 996)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 812)] * input1_shared[((((int)threadIdx.z) * 88) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 812)] * input1_shared[((((int)threadIdx.z) * 88) + 997)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 813)] * input1_shared[((((int)threadIdx.z) * 88) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 813)] * input1_shared[((((int)threadIdx.z) * 88) + 997)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 840)] * input1_shared[((((int)threadIdx.z) * 88) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 840)] * input1_shared[((((int)threadIdx.z) * 88) + 998)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 841)] * input1_shared[((((int)threadIdx.z) * 88) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 841)] * input1_shared[((((int)threadIdx.z) * 88) + 998)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 868)] * input1_shared[((((int)threadIdx.z) * 88) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 868)] * input1_shared[((((int)threadIdx.z) * 88) + 999)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 869)] * input1_shared[((((int)threadIdx.z) * 88) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 869)] * input1_shared[((((int)threadIdx.z) * 88) + 999)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 896)] * input1_shared[((((int)threadIdx.z) * 88) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 896)] * input1_shared[((((int)threadIdx.z) * 88) + 1000)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 897)] * input1_shared[((((int)threadIdx.z) * 88) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 897)] * input1_shared[((((int)threadIdx.z) * 88) + 1000)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 924)] * input1_shared[((((int)threadIdx.z) * 88) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 924)] * input1_shared[((((int)threadIdx.z) * 88) + 1001)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 925)] * input1_shared[((((int)threadIdx.z) * 88) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 925)] * input1_shared[((((int)threadIdx.z) * 88) + 1001)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 952)] * input1_shared[((((int)threadIdx.z) * 88) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 952)] * input1_shared[((((int)threadIdx.z) * 88) + 1002)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 953)] * input1_shared[((((int)threadIdx.z) * 88) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 953)] * input1_shared[((((int)threadIdx.z) * 88) + 1002)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 980)] * input1_shared[((((int)threadIdx.z) * 88) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 980)] * input1_shared[((((int)threadIdx.z) * 88) + 1003)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 981)] * input1_shared[((((int)threadIdx.z) * 88) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 981)] * input1_shared[((((int)threadIdx.z) * 88) + 1003)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1008)] * input1_shared[((((int)threadIdx.z) * 88) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1008)] * input1_shared[((((int)threadIdx.z) * 88) + 1004)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1009)] * input1_shared[((((int)threadIdx.z) * 88) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1009)] * input1_shared[((((int)threadIdx.z) * 88) + 1004)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1036)] * input1_shared[((((int)threadIdx.z) * 88) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1036)] * input1_shared[((((int)threadIdx.z) * 88) + 1005)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1037)] * input1_shared[((((int)threadIdx.z) * 88) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1037)] * input1_shared[((((int)threadIdx.z) * 88) + 1005)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1064)] * input1_shared[((((int)threadIdx.z) * 88) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1064)] * input1_shared[((((int)threadIdx.z) * 88) + 1006)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1065)] * input1_shared[((((int)threadIdx.z) * 88) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1065)] * input1_shared[((((int)threadIdx.z) * 88) + 1006)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1092)] * input1_shared[((((int)threadIdx.z) * 88) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1092)] * input1_shared[((((int)threadIdx.z) * 88) + 1007)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1093)] * input1_shared[((((int)threadIdx.z) * 88) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1093)] * input1_shared[((((int)threadIdx.z) * 88) + 1007)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1120)] * input1_shared[((((int)threadIdx.z) * 88) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1120)] * input1_shared[((((int)threadIdx.z) * 88) + 1008)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1121)] * input1_shared[((((int)threadIdx.z) * 88) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1121)] * input1_shared[((((int)threadIdx.z) * 88) + 1008)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1148)] * input1_shared[((((int)threadIdx.z) * 88) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1148)] * input1_shared[((((int)threadIdx.z) * 88) + 1009)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1149)] * input1_shared[((((int)threadIdx.z) * 88) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1149)] * input1_shared[((((int)threadIdx.z) * 88) + 1009)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1176)] * input1_shared[((((int)threadIdx.z) * 88) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1176)] * input1_shared[((((int)threadIdx.z) * 88) + 1010)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1177)] * input1_shared[((((int)threadIdx.z) * 88) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1177)] * input1_shared[((((int)threadIdx.z) * 88) + 1010)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1204)] * input1_shared[((((int)threadIdx.z) * 88) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1204)] * input1_shared[((((int)threadIdx.z) * 88) + 1011)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1205)] * input1_shared[((((int)threadIdx.z) * 88) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1205)] * input1_shared[((((int)threadIdx.z) * 88) + 1011)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1232)] * input1_shared[((((int)threadIdx.z) * 88) + 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1232)] * input1_shared[((((int)threadIdx.z) * 88) + 1012)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1233)] * input1_shared[((((int)threadIdx.z) * 88) + 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1233)] * input1_shared[((((int)threadIdx.z) * 88) + 1012)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1260)] * input1_shared[((((int)threadIdx.z) * 88) + 45)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1260)] * input1_shared[((((int)threadIdx.z) * 88) + 1013)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1261)] * input1_shared[((((int)threadIdx.z) * 88) + 45)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1261)] * input1_shared[((((int)threadIdx.z) * 88) + 1013)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1288)] * input1_shared[((((int)threadIdx.z) * 88) + 46)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1288)] * input1_shared[((((int)threadIdx.z) * 88) + 1014)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1289)] * input1_shared[((((int)threadIdx.z) * 88) + 46)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1289)] * input1_shared[((((int)threadIdx.z) * 88) + 1014)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1316)] * input1_shared[((((int)threadIdx.z) * 88) + 47)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1316)] * input1_shared[((((int)threadIdx.z) * 88) + 1015)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1317)] * input1_shared[((((int)threadIdx.z) * 88) + 47)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1317)] * input1_shared[((((int)threadIdx.z) * 88) + 1015)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1344)] * input1_shared[((((int)threadIdx.z) * 88) + 48)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1344)] * input1_shared[((((int)threadIdx.z) * 88) + 1016)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1345)] * input1_shared[((((int)threadIdx.z) * 88) + 48)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1345)] * input1_shared[((((int)threadIdx.z) * 88) + 1016)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1372)] * input1_shared[((((int)threadIdx.z) * 88) + 49)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1372)] * input1_shared[((((int)threadIdx.z) * 88) + 1017)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1373)] * input1_shared[((((int)threadIdx.z) * 88) + 49)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1373)] * input1_shared[((((int)threadIdx.z) * 88) + 1017)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1400)] * input1_shared[((((int)threadIdx.z) * 88) + 50)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1400)] * input1_shared[((((int)threadIdx.z) * 88) + 1018)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1401)] * input1_shared[((((int)threadIdx.z) * 88) + 50)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1401)] * input1_shared[((((int)threadIdx.z) * 88) + 1018)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1428)] * input1_shared[((((int)threadIdx.z) * 88) + 51)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1428)] * input1_shared[((((int)threadIdx.z) * 88) + 1019)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1429)] * input1_shared[((((int)threadIdx.z) * 88) + 51)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1429)] * input1_shared[((((int)threadIdx.z) * 88) + 1019)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1456)] * input1_shared[((((int)threadIdx.z) * 88) + 52)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1456)] * input1_shared[((((int)threadIdx.z) * 88) + 1020)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1457)] * input1_shared[((((int)threadIdx.z) * 88) + 52)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1457)] * input1_shared[((((int)threadIdx.z) * 88) + 1020)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1484)] * input1_shared[((((int)threadIdx.z) * 88) + 53)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1484)] * input1_shared[((((int)threadIdx.z) * 88) + 1021)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1485)] * input1_shared[((((int)threadIdx.z) * 88) + 53)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1485)] * input1_shared[((((int)threadIdx.z) * 88) + 1021)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1512)] * input1_shared[((((int)threadIdx.z) * 88) + 54)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1512)] * input1_shared[((((int)threadIdx.z) * 88) + 1022)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1513)] * input1_shared[((((int)threadIdx.z) * 88) + 54)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1513)] * input1_shared[((((int)threadIdx.z) * 88) + 1022)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1540)] * input1_shared[((((int)threadIdx.z) * 88) + 55)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1540)] * input1_shared[((((int)threadIdx.z) * 88) + 1023)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1541)] * input1_shared[((((int)threadIdx.z) * 88) + 55)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1541)] * input1_shared[((((int)threadIdx.z) * 88) + 1023)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1568)] * input1_shared[((((int)threadIdx.z) * 88) + 56)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1568)] * input1_shared[((((int)threadIdx.z) * 88) + 1024)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1569)] * input1_shared[((((int)threadIdx.z) * 88) + 56)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1569)] * input1_shared[((((int)threadIdx.z) * 88) + 1024)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1596)] * input1_shared[((((int)threadIdx.z) * 88) + 57)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1596)] * input1_shared[((((int)threadIdx.z) * 88) + 1025)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1597)] * input1_shared[((((int)threadIdx.z) * 88) + 57)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1597)] * input1_shared[((((int)threadIdx.z) * 88) + 1025)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1624)] * input1_shared[((((int)threadIdx.z) * 88) + 58)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1624)] * input1_shared[((((int)threadIdx.z) * 88) + 1026)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1625)] * input1_shared[((((int)threadIdx.z) * 88) + 58)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1625)] * input1_shared[((((int)threadIdx.z) * 88) + 1026)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1652)] * input1_shared[((((int)threadIdx.z) * 88) + 59)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1652)] * input1_shared[((((int)threadIdx.z) * 88) + 1027)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1653)] * input1_shared[((((int)threadIdx.z) * 88) + 59)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1653)] * input1_shared[((((int)threadIdx.z) * 88) + 1027)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1680)] * input1_shared[((((int)threadIdx.z) * 88) + 60)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1680)] * input1_shared[((((int)threadIdx.z) * 88) + 1028)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1681)] * input1_shared[((((int)threadIdx.z) * 88) + 60)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1681)] * input1_shared[((((int)threadIdx.z) * 88) + 1028)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1708)] * input1_shared[((((int)threadIdx.z) * 88) + 61)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1708)] * input1_shared[((((int)threadIdx.z) * 88) + 1029)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1709)] * input1_shared[((((int)threadIdx.z) * 88) + 61)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1709)] * input1_shared[((((int)threadIdx.z) * 88) + 1029)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1736)] * input1_shared[((((int)threadIdx.z) * 88) + 62)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1736)] * input1_shared[((((int)threadIdx.z) * 88) + 1030)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1737)] * input1_shared[((((int)threadIdx.z) * 88) + 62)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1737)] * input1_shared[((((int)threadIdx.z) * 88) + 1030)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1764)] * input1_shared[((((int)threadIdx.z) * 88) + 63)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1764)] * input1_shared[((((int)threadIdx.z) * 88) + 1031)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1765)] * input1_shared[((((int)threadIdx.z) * 88) + 63)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1765)] * input1_shared[((((int)threadIdx.z) * 88) + 1031)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1792)] * input1_shared[((((int)threadIdx.z) * 88) + 64)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1792)] * input1_shared[((((int)threadIdx.z) * 88) + 1032)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1793)] * input1_shared[((((int)threadIdx.z) * 88) + 64)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1793)] * input1_shared[((((int)threadIdx.z) * 88) + 1032)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1820)] * input1_shared[((((int)threadIdx.z) * 88) + 65)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1820)] * input1_shared[((((int)threadIdx.z) * 88) + 1033)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1821)] * input1_shared[((((int)threadIdx.z) * 88) + 65)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1821)] * input1_shared[((((int)threadIdx.z) * 88) + 1033)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1848)] * input1_shared[((((int)threadIdx.z) * 88) + 66)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1848)] * input1_shared[((((int)threadIdx.z) * 88) + 1034)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1849)] * input1_shared[((((int)threadIdx.z) * 88) + 66)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1849)] * input1_shared[((((int)threadIdx.z) * 88) + 1034)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1876)] * input1_shared[((((int)threadIdx.z) * 88) + 67)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1876)] * input1_shared[((((int)threadIdx.z) * 88) + 1035)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1877)] * input1_shared[((((int)threadIdx.z) * 88) + 67)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1877)] * input1_shared[((((int)threadIdx.z) * 88) + 1035)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1904)] * input1_shared[((((int)threadIdx.z) * 88) + 68)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1904)] * input1_shared[((((int)threadIdx.z) * 88) + 1036)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1905)] * input1_shared[((((int)threadIdx.z) * 88) + 68)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1905)] * input1_shared[((((int)threadIdx.z) * 88) + 1036)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1932)] * input1_shared[((((int)threadIdx.z) * 88) + 69)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1932)] * input1_shared[((((int)threadIdx.z) * 88) + 1037)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1933)] * input1_shared[((((int)threadIdx.z) * 88) + 69)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1933)] * input1_shared[((((int)threadIdx.z) * 88) + 1037)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1960)] * input1_shared[((((int)threadIdx.z) * 88) + 70)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1960)] * input1_shared[((((int)threadIdx.z) * 88) + 1038)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1961)] * input1_shared[((((int)threadIdx.z) * 88) + 70)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1961)] * input1_shared[((((int)threadIdx.z) * 88) + 1038)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1988)] * input1_shared[((((int)threadIdx.z) * 88) + 71)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1988)] * input1_shared[((((int)threadIdx.z) * 88) + 1039)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1989)] * input1_shared[((((int)threadIdx.z) * 88) + 71)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1989)] * input1_shared[((((int)threadIdx.z) * 88) + 1039)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2016)] * input1_shared[((((int)threadIdx.z) * 88) + 72)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2016)] * input1_shared[((((int)threadIdx.z) * 88) + 1040)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2017)] * input1_shared[((((int)threadIdx.z) * 88) + 72)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2017)] * input1_shared[((((int)threadIdx.z) * 88) + 1040)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2044)] * input1_shared[((((int)threadIdx.z) * 88) + 73)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2044)] * input1_shared[((((int)threadIdx.z) * 88) + 1041)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2045)] * input1_shared[((((int)threadIdx.z) * 88) + 73)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2045)] * input1_shared[((((int)threadIdx.z) * 88) + 1041)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2072)] * input1_shared[((((int)threadIdx.z) * 88) + 74)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2072)] * input1_shared[((((int)threadIdx.z) * 88) + 1042)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2073)] * input1_shared[((((int)threadIdx.z) * 88) + 74)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2073)] * input1_shared[((((int)threadIdx.z) * 88) + 1042)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2100)] * input1_shared[((((int)threadIdx.z) * 88) + 75)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2100)] * input1_shared[((((int)threadIdx.z) * 88) + 1043)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2101)] * input1_shared[((((int)threadIdx.z) * 88) + 75)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2101)] * input1_shared[((((int)threadIdx.z) * 88) + 1043)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2128)] * input1_shared[((((int)threadIdx.z) * 88) + 76)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2128)] * input1_shared[((((int)threadIdx.z) * 88) + 1044)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2129)] * input1_shared[((((int)threadIdx.z) * 88) + 76)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2129)] * input1_shared[((((int)threadIdx.z) * 88) + 1044)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2156)] * input1_shared[((((int)threadIdx.z) * 88) + 77)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2156)] * input1_shared[((((int)threadIdx.z) * 88) + 1045)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2157)] * input1_shared[((((int)threadIdx.z) * 88) + 77)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2157)] * input1_shared[((((int)threadIdx.z) * 88) + 1045)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2184)] * input1_shared[((((int)threadIdx.z) * 88) + 78)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2184)] * input1_shared[((((int)threadIdx.z) * 88) + 1046)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2185)] * input1_shared[((((int)threadIdx.z) * 88) + 78)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2185)] * input1_shared[((((int)threadIdx.z) * 88) + 1046)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2212)] * input1_shared[((((int)threadIdx.z) * 88) + 79)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2212)] * input1_shared[((((int)threadIdx.z) * 88) + 1047)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2213)] * input1_shared[((((int)threadIdx.z) * 88) + 79)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2213)] * input1_shared[((((int)threadIdx.z) * 88) + 1047)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2240)] * input1_shared[((((int)threadIdx.z) * 88) + 80)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2240)] * input1_shared[((((int)threadIdx.z) * 88) + 1048)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2241)] * input1_shared[((((int)threadIdx.z) * 88) + 80)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2241)] * input1_shared[((((int)threadIdx.z) * 88) + 1048)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2268)] * input1_shared[((((int)threadIdx.z) * 88) + 81)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2268)] * input1_shared[((((int)threadIdx.z) * 88) + 1049)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2269)] * input1_shared[((((int)threadIdx.z) * 88) + 81)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2269)] * input1_shared[((((int)threadIdx.z) * 88) + 1049)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2296)] * input1_shared[((((int)threadIdx.z) * 88) + 82)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2296)] * input1_shared[((((int)threadIdx.z) * 88) + 1050)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2297)] * input1_shared[((((int)threadIdx.z) * 88) + 82)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2297)] * input1_shared[((((int)threadIdx.z) * 88) + 1050)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2324)] * input1_shared[((((int)threadIdx.z) * 88) + 83)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2324)] * input1_shared[((((int)threadIdx.z) * 88) + 1051)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2325)] * input1_shared[((((int)threadIdx.z) * 88) + 83)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2325)] * input1_shared[((((int)threadIdx.z) * 88) + 1051)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2352)] * input1_shared[((((int)threadIdx.z) * 88) + 84)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2352)] * input1_shared[((((int)threadIdx.z) * 88) + 1052)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2353)] * input1_shared[((((int)threadIdx.z) * 88) + 84)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2353)] * input1_shared[((((int)threadIdx.z) * 88) + 1052)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2380)] * input1_shared[((((int)threadIdx.z) * 88) + 85)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2380)] * input1_shared[((((int)threadIdx.z) * 88) + 1053)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2381)] * input1_shared[((((int)threadIdx.z) * 88) + 85)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2381)] * input1_shared[((((int)threadIdx.z) * 88) + 1053)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2408)] * input1_shared[((((int)threadIdx.z) * 88) + 86)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2408)] * input1_shared[((((int)threadIdx.z) * 88) + 1054)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2409)] * input1_shared[((((int)threadIdx.z) * 88) + 86)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2409)] * input1_shared[((((int)threadIdx.z) * 88) + 1054)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2436)] * input1_shared[((((int)threadIdx.z) * 88) + 87)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2436)] * input1_shared[((((int)threadIdx.z) * 88) + 1055)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2437)] * input1_shared[((((int)threadIdx.z) * 88) + 87)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2437)] * input1_shared[((((int)threadIdx.z) * 88) + 1055)]));\n  compute[((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + 8624)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + 1)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + 8625)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [1, 28, 2], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_44_56_56_w22_44_1_1_o1_22_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 44, 56, 56], "filter_shape": [22, 44, 1, 1], "output_shape": [1, 22, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_44_56_56_w22_44_1_1_o1_22_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[11];\n  __shared__ float pad_temp_shared[224];\n  __shared__ float input1_shared[88];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 11; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 11; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 12544) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 56) * 3136)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 56))];\n    }\n    if (((((int)threadIdx.z) * 11) + (((int)threadIdx.x) >> 2)) < 22) {\n      if (((((int)threadIdx.z) * 44) + ((int)threadIdx.x)) < 88) {\n        if (((int)threadIdx.x) < 44) {\n          input1_shared[((((int)threadIdx.z) * 44) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 484) + ((((int)threadIdx.x) >> 2) * 44)) + (rc_outer * 4)) + (((int)threadIdx.x) & 3))];\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {\n      #pragma unroll\n      for (int ff = 0; ff < 11; ++ff) {\n        compute1[ff] = (compute1[ff] + (pad_temp_shared[((rc_inner * 56) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 44) + (ff * 4)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 11; ++i1_inner_inner_inner) {\n    compute[((((((int)threadIdx.z) * 34496) + (i1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 56, 1], "blockDim": [56, 1, 2]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_22_28_28_w22_22_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 22, 28, 28], "filter_shape": [22, 22, 1, 1], "output_shape": [1, 22, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_22_28_28_w22_22_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[308];\n  __shared__ float input1_shared[242];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + ((((int)threadIdx.x) / 7) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) % 7) * 2))];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 2) + 1) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 2) + 1) % 14))];\n  if (((((int)threadIdx.z) * 2) + ((((int)threadIdx.x) * 2) / 11)) < 22) {\n    if (((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2)) < 242) {\n      if (((int)threadIdx.x) < 11) {\n        input1_shared[((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2))] = input1[(((((int)threadIdx.z) * 44) + (((((int)threadIdx.x) * 2) / 11) * 22)) + ((((int)threadIdx.x) * 2) % 11))];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + 1) / 11)) < 22) {\n    if (((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2)) < 241) {\n      if (((int)threadIdx.x) < 11) {\n        input1_shared[(((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((int)threadIdx.z) * 44) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 22)) + (((((int)threadIdx.x) * 2) + 1) % 11))];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 22) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 22) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 22) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 22) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 22) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 22) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 22) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 22) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 22) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 22) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 22) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 22) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 22) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 22) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 22) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 22) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 22) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 22) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 22) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 22) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 22) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 22) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 22) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 22) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 22) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 22) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 22) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 22) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 22) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 22) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 22) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 22) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 22) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 22) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 22) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 22) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 22) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 22) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 22) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 22) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 22) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 22) + 21)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + ((((int)threadIdx.x) / 7) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) % 7) * 2)) + 8624)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 2) + 1) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 2) + 1) % 14)) + 8624)];\n  if (((((int)threadIdx.z) * 2) + ((((int)threadIdx.x) * 2) / 11)) < 22) {\n    if (((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2)) < 242) {\n      if (((int)threadIdx.x) < 11) {\n        input1_shared[((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2))] = input1[((((((int)threadIdx.z) * 44) + (((((int)threadIdx.x) * 2) / 11) * 22)) + ((((int)threadIdx.x) * 2) % 11)) + 11)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + 1) / 11)) < 22) {\n    if (((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2)) < 241) {\n      if (((int)threadIdx.x) < 11) {\n        input1_shared[(((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((int)threadIdx.z) * 44) + ((((((int)threadIdx.x) * 2) + 1) / 11) * 22)) + (((((int)threadIdx.x) * 2) + 1) % 11)) + 11)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 22) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 22) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 22) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 22) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 22) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 22) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 22) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 22) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 22) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 22) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 22) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 22) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 22) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 22) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 22) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 22) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 22) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 22) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 22) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 22) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 22) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 22) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 22) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 22) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 22) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 22) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 22) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 22) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 22) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 22) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 22) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 22) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 22) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 22) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 22) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 22) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 22) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 22) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 22) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 22) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 22) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 22) + 21)]));\n  compute[((((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 28)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 784)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 812)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [2, 14, 1], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_704_7_7_w176_704_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 704, 7, 7], "filter_shape": [176, 704, 1, 1], "output_shape": [1, 176, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_704_7_7_w176_704_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[308];\n  __shared__ float input1_shared[968];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((rc_outer * 2156) + (((int)threadIdx.z) * 196)) + (((((int)threadIdx.x) * 4) / 7) * 49)) + (((int)blockIdx.y) * 7)) + ((((int)threadIdx.x) * 4) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((rc_outer * 2156) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 4) + 1) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 4) + 1) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((rc_outer * 2156) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 4) + 2) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 4) + 2) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((rc_outer * 2156) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 4) + 3) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 4) + 3) % 7))];\n    input1_shared[((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13))] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + (((((int)threadIdx.x) * 13) / 44) * 704)) + (rc_outer * 44)) + ((((int)threadIdx.x) * 13) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 1)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 1) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 1) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 2)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 2) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 2) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 3)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 3) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 3) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 4)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 4) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 4) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 5)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 5) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 5) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 6)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 6) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 6) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 7)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 7) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 7) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 8)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 8) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 8) % 44))];\n    input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 9)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 9) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 9) % 44))];\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 10) / 44)) < 22) {\n      if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) < 958) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 10)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 10) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 10) % 44))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 11) / 44)) < 22) {\n      if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) < 957) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 11)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 11) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 11) % 44))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 13) + 12) / 44)) < 22) {\n      if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) < 956) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 13)) + 12)] = input1[(((((((int)blockIdx.z) * 15488) + (((int)threadIdx.z) * 1408)) + ((((((int)threadIdx.x) * 13) + 12) / 44) * 704)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 13) + 12) % 44))];\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 203)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 203)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 217)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 217)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 231)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 231)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 259)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 259)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 273)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 273)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 287)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 287)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 301)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 301)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  }\n  compute[((((((int)blockIdx.z) * 1078) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1078) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x)) + 539)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 7, 8], "blockDim": [7, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_1056_7_7_w176_1056_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 1056, 7, 7], "filter_shape": [176, 1056, 1, 1], "output_shape": [1, 176, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_1056_7_7_w176_1056_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[112];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 66; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.x))] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))];\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if (((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4) + ((int)threadIdx.z)) < 16) {\n        if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 256) {\n          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 16) {\n            input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input1[(((((((int)blockIdx.z) * 16896) + (((int)threadIdx.z) * 1056)) + (rc_outer * 16)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 7) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [1, 7, 11], "blockDim": [7, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_44_28_28_w44_44_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 44, 28, 28], "filter_shape": [44, 44, 1, 1], "output_shape": [1, 44, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_44_28_28_w44_44_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1232];\n  __shared__ float input1_shared[968];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n    compute1[(ff_init + 2)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((int)threadIdx.z) * 3136) + ((((((int)threadIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44)) < 22) {\n      if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 968) {\n        if (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 88) {\n          input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((int)blockIdx.z) * 968) + (((int)threadIdx.z) * 88)) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  #pragma unroll\n  for (int rc_inner = 0; rc_inner < 44; ++rc_inner) {\n    #pragma unroll\n    for (int ff = 0; ff < 2; ++ff) {\n      compute1[ff] = (compute1[ff] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 88) + (ff * 44)) + rc_inner)]));\n      compute1[(ff + 2)] = (compute1[(ff + 2)] + (pad_temp_shared[(((rc_inner * 28) + ((int)threadIdx.x)) + 14)] * input1_shared[(((((int)threadIdx.z) * 88) + (ff * 44)) + rc_inner)]));\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 1568)) + (i1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 1568)) + (i1_inner_inner_inner * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14)] = max(compute1[(i1_inner_inner_inner + 2)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 28, 2], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_3_224_224_w32_3_3_3_o1_32_111_111_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 3, 224, 224], "filter_shape": [32, 3, 3, 3], "output_shape": [1, 32, 111, 111], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_3_224_224_w32_3_3_3_o1_32_111_111_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[32];\n  __shared__ float pad_temp_shared[669];\n  __shared__ float input1_shared[288];\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    for (int vthread_s = 0; vthread_s < 16; ++vthread_s) {\n      compute1[((vthread_s * 2) + ff_init)] = 0.000000e+00f;\n    }\n  }\n  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 669) {\n        pad_temp_shared[((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((rc_outer * 50176) + (((int)blockIdx.y) * 448)) + ((((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 223) * 224)) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 223))];\n      }\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((int)threadIdx.x) < 96) {\n        input1_shared[((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)threadIdx.x) / 3) * 27) + (rc_outer * 9)) + ((((int)threadIdx.x) % 3) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n      }\n    }\n    __syncthreads();\n    for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n      for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n        for (int ff = 0; ff < 2; ++ff) {\n          for (int vthread_s1 = 0; vthread_s1 < 16; ++vthread_s1) {\n            compute1[((vthread_s1 * 2) + ff)] = (compute1[((vthread_s1 * 2) + ff)] + (pad_temp_shared[(((ry_inner * 223) + (((int)threadIdx.x) * 2)) + rx_inner)] * input1_shared[((((vthread_s1 * 18) + (ff * 9)) + (ry_inner * 3)) + rx_inner)]));\n          }\n        }\n      }\n    }\n  }\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    for (int vthread_s2 = 0; vthread_s2 < 16; ++vthread_s2) {\n      compute[((((vthread_s2 * 24642) + (i1_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x))] = max(compute1[((vthread_s2 * 2) + i1_inner_inner_inner)], 0.000000e+00f);\n    }\n  }\n}\n\n", "gridDim": [1, 111, 1], "blockDim": [111, 1, 1]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_264_14_14_w44_264_1_1_o1_44_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 264, 14, 14], "filter_shape": [44, 264, 1, 1], "output_shape": [1, 44, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_264_14_14_w44_264_1_1_o1_44_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[968];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 6; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 8624) + (((int)threadIdx.z) * 784)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 14))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44)) < 22) {\n        if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 968) {\n          if (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 88) {\n            input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + ((((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44) * 264)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 44))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 44; ++rc_inner) {\n      #pragma unroll\n      for (int ff = 0; ff < 2; ++ff) {\n        compute1[ff] = (compute1[ff] + (pad_temp_shared[((rc_inner * 14) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 88) + (ff * 44)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 392)) + (i1_inner_inner_inner * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 14, 2], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_264_28_28_w44_264_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 264, 28, 28], "filter_shape": [44, 264, 1, 1], "output_shape": [1, 44, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_264_28_28_w44_264_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1232];\n  __shared__ float input1_shared[968];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + (((((int)threadIdx.x) * 8) / 28) * 784)) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 8) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 8) % 14))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 1) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 1) % 14))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 2) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 2) % 14))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 3) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 3) % 14))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 4) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 4) % 14))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 5) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 5) % 14))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 6) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 6) % 14))];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 7) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 7) % 14))];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7))];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 1)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 2)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 3)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 4)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 5)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 6)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + (((((int)threadIdx.x) * 8) / 28) * 784)) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 8) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 8) % 14)) + 34496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 1) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 1) % 14)) + 34496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 2) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 2) % 14)) + 34496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 3) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 3) % 14)) + 34496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 4) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 4) % 14)) + 34496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 5) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 5) % 14)) + 34496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 6) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 6) % 14)) + 34496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 7) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 7) % 14)) + 34496)];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 44)];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 45)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 46)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 47)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 48)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 49)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 50)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + (((((int)threadIdx.x) * 8) / 28) * 784)) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 8) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 8) % 14)) + 68992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 1) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 1) % 14)) + 68992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 2) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 2) % 14)) + 68992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 3) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 3) % 14)) + 68992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 4) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 4) % 14)) + 68992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 5) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 5) % 14)) + 68992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 6) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 6) % 14)) + 68992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 7) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 7) % 14)) + 68992)];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 88)];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 89)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 90)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 91)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 92)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 93)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 94)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + (((((int)threadIdx.x) * 8) / 28) * 784)) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 8) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 8) % 14)) + 103488)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 1) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 1) % 14)) + 103488)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 2) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 2) % 14)) + 103488)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 3) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 3) % 14)) + 103488)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 4) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 4) % 14)) + 103488)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 5) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 5) % 14)) + 103488)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 6) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 6) % 14)) + 103488)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 7) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 7) % 14)) + 103488)];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 132)];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 133)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 134)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 135)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 136)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 137)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 138)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + (((((int)threadIdx.x) * 8) / 28) * 784)) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 8) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 8) % 14)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 1) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 1) % 14)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 2) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 2) % 14)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 3) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 3) % 14)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 4) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 4) % 14)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 5) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 5) % 14)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 6) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 6) % 14)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 7) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 7) % 14)) + 137984)];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 176)];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 177)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 178)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 179)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 180)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 181)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 182)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8))] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + (((((int)threadIdx.x) * 8) / 28) * 784)) + (((int)blockIdx.y) * 56)) + ((((((int)threadIdx.x) * 8) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 8) % 14)) + 172480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 1)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 1) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 1) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 1) % 14)) + 172480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 2)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 2) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 2) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 2) % 14)) + 172480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 3)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 3) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 3) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 3) % 14)) + 172480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 4)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 4) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 4) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 4) % 14)) + 172480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 5)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 5) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 5) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 5) % 14)) + 172480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 6)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 6) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 6) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 6) % 14)) + 172480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + 7)] = input0[((((((((((int)threadIdx.z) * 3136) + (((int)threadIdx.y) * 1568)) + ((((((int)threadIdx.x) * 8) + 7) / 28) * 784)) + (((int)blockIdx.y) * 56)) + (((((((int)threadIdx.x) * 8) + 7) % 28) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 8) + 7) % 14)) + 172480)];\n  input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7))] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 220)];\n  input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 221)];\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 2) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 86) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 2)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 222)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 3) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 85) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 3)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 223)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 4) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 84) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 4)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 224)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 5) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 83) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 5)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 225)];\n        }\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + 6) / 44)) + ((int)threadIdx.y)) < 22) {\n    if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((((int)threadIdx.y) * 44) + (((int)threadIdx.x) * 7)) < 82) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 44)) + (((int)threadIdx.x) * 7)) + 6)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.y) * 264)) + (((int)threadIdx.x) * 7)) + 226)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[((((int)threadIdx.z) * 44) + 484)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 485)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 486)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 487)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 488)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 489)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 490)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 491)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 492)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 493)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 494)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 495)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 496)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 497)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 498)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 499)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 500)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 501)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 502)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 503)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 504)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 505)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 616)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 617)] * input1_shared[((((int)threadIdx.z) * 44) + 506)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 644)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 645)] * input1_shared[((((int)threadIdx.z) * 44) + 507)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 672)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 673)] * input1_shared[((((int)threadIdx.z) * 44) + 508)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 700)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 701)] * input1_shared[((((int)threadIdx.z) * 44) + 509)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 728)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 729)] * input1_shared[((((int)threadIdx.z) * 44) + 510)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 756)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 757)] * input1_shared[((((int)threadIdx.z) * 44) + 511)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 784)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 785)] * input1_shared[((((int)threadIdx.z) * 44) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 812)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 813)] * input1_shared[((((int)threadIdx.z) * 44) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 840)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 841)] * input1_shared[((((int)threadIdx.z) * 44) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 868)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 869)] * input1_shared[((((int)threadIdx.z) * 44) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 896)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 897)] * input1_shared[((((int)threadIdx.z) * 44) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 924)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 925)] * input1_shared[((((int)threadIdx.z) * 44) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 952)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 953)] * input1_shared[((((int)threadIdx.z) * 44) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 980)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 981)] * input1_shared[((((int)threadIdx.z) * 44) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1008)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1009)] * input1_shared[((((int)threadIdx.z) * 44) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1036)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1037)] * input1_shared[((((int)threadIdx.z) * 44) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1064)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1065)] * input1_shared[((((int)threadIdx.z) * 44) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1092)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1093)] * input1_shared[((((int)threadIdx.z) * 44) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1120)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1121)] * input1_shared[((((int)threadIdx.z) * 44) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1148)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1149)] * input1_shared[((((int)threadIdx.z) * 44) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1176)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1177)] * input1_shared[((((int)threadIdx.z) * 44) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1204)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 2)) + 1205)] * input1_shared[((((int)threadIdx.z) * 44) + 527)]));\n  compute[((((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 14)) + (((int)threadIdx.x) * 2))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 14)) + (((int)threadIdx.x) * 2)) + 8624)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 14)) + (((int)threadIdx.x) * 2)) + 1)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 14)) + (((int)threadIdx.x) * 2)) + 8625)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [2, 14, 2], "blockDim": [7, 2, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_176_7_7_w176_176_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 176, 7, 7], "filter_shape": [176, 176, 1, 1], "output_shape": [1, 176, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_176_7_7_w176_176_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[2156];\n  __shared__ float input1_shared[352];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 11; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 539) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 11)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((rc_outer * 2156) + (((int)threadIdx.z) * 539)) + (((int)threadIdx.y) * 77)) + ((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 2) + ((((((int)threadIdx.y) * 13) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44)) < 8) {\n        if (((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 13)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 352) {\n          if ((((((int)threadIdx.y) * 13) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 88) {\n            if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 13) {\n              input1_shared[((((((int)threadIdx.z) * 88) + (((int)threadIdx.y) * 13)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 1408) + (((int)threadIdx.z) * 352)) + (((((((int)threadIdx.y) * 13) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44) * 176)) + (rc_outer * 44)) + ((((((int)threadIdx.y) * 13) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 44))];\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 44; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 44) + rc_inner)]));\n      compute1[1] = (compute1[1] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 44) + rc_inner) + 176)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 196)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 1, 22], "blockDim": [7, 7, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_32_111_111_w11_32_1_1_o1_11_111_111_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 32, 111, 111], "filter_shape": [11, 32, 1, 1], "output_shape": [1, 11, 111, 111], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_32_111_111_w11_32_1_1_o1_11_111_111_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[11];\n  __shared__ float pad_temp_shared[222];\n  __shared__ float input1_shared[22];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  compute1[8] = 0.000000e+00f;\n  compute1[9] = 0.000000e+00f;\n  compute1[10] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37))];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37))];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1))];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 24642)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 24642)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 2)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 49284)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 49284)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 4)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 73926)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 73926)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 6)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 98568)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 98568)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 8)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 123210)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 123210)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 10)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 147852)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 147852)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 12)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 172494)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 172494)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 14)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 197136)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 197136)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 16)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 221778)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 221778)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 18)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 246420)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 246420)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 20)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 271062)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 271062)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 22)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 295704)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 295704)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 24)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 320346)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 320346)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 26)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 344988)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 344988)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 28)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 369630)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 369630)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 30)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  compute[((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 12321)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 24642)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 36963)] = max(compute1[3], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 49284)] = max(compute1[4], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 61605)] = max(compute1[5], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 73926)] = max(compute1[6], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 86247)] = max(compute1[7], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 98568)] = max(compute1[8], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 110889)] = max(compute1[9], 0.000000e+00f);\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 123210)] = max(compute1[10], 0.000000e+00f);\n}\n\n", "gridDim": [3, 37, 1], "blockDim": [37, 3, 1]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_352_14_14_w88_352_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 352, 14, 14], "filter_shape": [88, 352, 1, 1], "output_shape": [1, 88, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_352_14_14_w88_352_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[968];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 8624) + (((int)threadIdx.z) * 784)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 14))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44)) < 22) {\n        if ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 968) {\n          if (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 88) {\n            input1_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 7744) + (((int)threadIdx.z) * 704)) + ((((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 44) * 352)) + (rc_outer * 44)) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 44))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 44; ++rc_inner) {\n      #pragma unroll\n      for (int ff = 0; ff < 2; ++ff) {\n        compute1[ff] = (compute1[ff] + (pad_temp_shared[((rc_inner * 14) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 88) + (ff * 44)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 392)) + (i1_inner_inner_inner * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 14, 4], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_528_14_14_w88_528_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 528, 14, 14], "filter_shape": [88, 528, 1, 1], "output_shape": [1, 88, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_528_14_14_w88_528_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[968];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14))];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[(((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7))];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 1)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 2)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 3)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 4)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 5)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 6)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 8624)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 8624)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 8624)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 8624)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 44)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 45)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 46)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 47)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 48)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 49)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 50)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 17248)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 17248)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 17248)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 17248)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 88)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 89)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 90)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 91)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 92)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 93)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 94)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 25872)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 132)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 133)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 134)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 135)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 136)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 137)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 138)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 34496)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 34496)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 34496)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 34496)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 176)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 177)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 178)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 179)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 180)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 181)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 182)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 43120)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 43120)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 43120)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 43120)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 220)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 221)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 222)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 223)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 224)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 225)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 226)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 51744)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 51744)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 51744)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 51744)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 264)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 265)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 266)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 267)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 268)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 269)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 270)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 60368)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 60368)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 60368)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 60368)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 308)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 309)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 310)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 311)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 312)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 313)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 314)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 68992)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 68992)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 68992)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 68992)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 352)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 353)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 354)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 355)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 356)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 357)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 358)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 77616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 77616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 77616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 77616)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 396)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 397)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 398)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 399)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 400)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 401)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 402)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 86240)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 86240)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 86240)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 86240)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 440)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 441)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 442)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 443)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 444)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 445)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 446)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 392) + (((((int)threadIdx.x) * 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 4) % 14)) + 94864)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 1) % 14)) + 94864)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 2) % 14)) + 94864)];\n  pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 392) + ((((((int)threadIdx.x) * 4) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 4) + 3) % 14)) + 94864)];\n  input1_shared[((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 484)];\n  input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 485)];\n  if (((((((int)threadIdx.x) * 7) + 2) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 966) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 486)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 3) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 965) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 487)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 4) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 964) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 488)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 5) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 963) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 489)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 7) + 6) / 44) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) < 962) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 7)) + 490)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 14)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 44) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 29)] * input1_shared[((((int)threadIdx.z) * 44) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 42)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 43)] * input1_shared[((((int)threadIdx.z) * 44) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 56)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 57)] * input1_shared[((((int)threadIdx.z) * 44) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 70)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 71)] * input1_shared[((((int)threadIdx.z) * 44) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 84)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 85)] * input1_shared[((((int)threadIdx.z) * 44) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 98)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 99)] * input1_shared[((((int)threadIdx.z) * 44) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 44) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 126)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 127)] * input1_shared[((((int)threadIdx.z) * 44) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 140)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 141)] * input1_shared[((((int)threadIdx.z) * 44) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 154)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 155)] * input1_shared[((((int)threadIdx.z) * 44) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 168)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 44) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 183)] * input1_shared[((((int)threadIdx.z) * 44) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 196)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 197)] * input1_shared[((((int)threadIdx.z) * 44) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 211)] * input1_shared[((((int)threadIdx.z) * 44) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 44) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 44) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 252)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 253)] * input1_shared[((((int)threadIdx.z) * 44) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 266)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 267)] * input1_shared[((((int)threadIdx.z) * 44) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 280)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 281)] * input1_shared[((((int)threadIdx.z) * 44) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 294)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 295)] * input1_shared[((((int)threadIdx.z) * 44) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 308)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 309)] * input1_shared[((((int)threadIdx.z) * 44) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 322)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 323)] * input1_shared[((((int)threadIdx.z) * 44) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 336)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 337)] * input1_shared[((((int)threadIdx.z) * 44) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 350)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 44) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 365)] * input1_shared[((((int)threadIdx.z) * 44) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 379)] * input1_shared[((((int)threadIdx.z) * 44) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 392)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 393)] * input1_shared[((((int)threadIdx.z) * 44) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 406)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 407)] * input1_shared[((((int)threadIdx.z) * 44) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 420)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 421)] * input1_shared[((((int)threadIdx.z) * 44) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 434)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 435)] * input1_shared[((((int)threadIdx.z) * 44) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 44) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 462)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 463)] * input1_shared[((((int)threadIdx.z) * 44) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 476)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 477)] * input1_shared[((((int)threadIdx.z) * 44) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 490)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 491)] * input1_shared[((((int)threadIdx.z) * 44) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 504)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 505)] * input1_shared[((((int)threadIdx.z) * 44) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 518)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 519)] * input1_shared[((((int)threadIdx.z) * 44) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 532)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 44) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 547)] * input1_shared[((((int)threadIdx.z) * 44) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 560)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 561)] * input1_shared[((((int)threadIdx.z) * 44) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 574)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 575)] * input1_shared[((((int)threadIdx.z) * 44) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 44) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 602)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 603)] * input1_shared[((((int)threadIdx.z) * 44) + 43)]));\n  compute[((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + (((int)threadIdx.x) * 2))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + (((int)threadIdx.x) * 2)) + 1)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 14, 4], "blockDim": [7, 1, 22]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_528_7_7_w88_528_1_1_o1_88_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 528, 7, 7], "filter_shape": [88, 528, 1, 1], "output_shape": [1, 88, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_528_7_7_w88_528_1_1_o1_88_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[704];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 6; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22))] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + (((((int)threadIdx.x) * 22) / 7) * 49)) + (((int)blockIdx.y) * 7)) + ((((int)threadIdx.x) * 22) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 1)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 1) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 1) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 2)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 2) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 2) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 3)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 3) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 3) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 4)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 4) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 4) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 5)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 5) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 5) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 6)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 6) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 6) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 7)] = input0[((((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + (((((int)threadIdx.x) * 22) / 7) * 49)) + (((int)blockIdx.y) * 7)) + ((((int)threadIdx.x) * 22) % 7)) + 49)];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 8)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 8) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 1) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 9)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 9) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 2) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 10)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 10) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 3) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 11)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 11) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 4) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 12)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 12) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 5) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 13)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 13) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 6) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 14)] = input0[((((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + (((((int)threadIdx.x) * 22) / 7) * 49)) + (((int)blockIdx.y) * 7)) + ((((int)threadIdx.x) * 22) % 7)) + 98)];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 15)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 15) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 1) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 16)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 16) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 2) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 17)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 17) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 3) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 18)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 18) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 4) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 19)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 19) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 5) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 20)] = input0[(((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + ((((((int)threadIdx.x) * 22) + 20) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 22) + 6) % 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 154) + (((int)threadIdx.x) * 22)) + 21)] = input0[((((((rc_outer * 4312) + (((int)threadIdx.z) * 1078)) + (((((int)threadIdx.x) * 22) / 7) * 49)) + (((int)blockIdx.y) * 7)) + ((((int)threadIdx.x) * 22) % 7)) + 147)];\n    input1_shared[((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26))] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + (((((int)threadIdx.x) * 26) / 88) * 528)) + (rc_outer * 88)) + ((((int)threadIdx.x) * 26) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 1)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 1) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 1) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 2)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 2) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 2) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 3)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 3) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 3) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 4)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 4) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 4) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 5)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 5) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 5) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 6)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 6) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 6) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 7)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 7) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 7) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 8)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 8) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 8) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 9)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 9) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 9) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 10)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 10) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 10) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 11)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 11) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 11) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 12)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 12) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 12) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 13)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 13) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 13) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 14)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 14) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 14) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 15)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 15) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 15) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 16)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 16) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 16) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 17)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 17) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 17) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 18)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 18) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 18) % 88))];\n    input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 19)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 19) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 19) % 88))];\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 26) + 20) / 88)) < 8) {\n      if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 684) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 20)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 20) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 20) % 88))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 26) + 21) / 88)) < 8) {\n      if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 683) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 21)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 21) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 21) % 88))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 26) + 22) / 88)) < 8) {\n      if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 682) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 22)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 22) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 22) % 88))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 26) + 23) / 88)) < 8) {\n      if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 681) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 23)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 23) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 23) % 88))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 26) + 24) / 88)) < 8) {\n      if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 680) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 24)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 24) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 24) % 88))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 26) + 25) / 88)) < 8) {\n      if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 679) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 25)] = input1[(((((((int)blockIdx.z) * 4224) + (((int)threadIdx.z) * 1056)) + ((((((int)threadIdx.x) * 26) + 25) / 88) * 528)) + (rc_outer * 88)) + (((((int)threadIdx.x) * 26) + 25) % 88))];\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 88)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 88) + 352)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 88) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 88) + 353)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 88) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 88) + 354)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 88) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 88) + 355)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 88) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 88) + 356)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 88) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 88) + 357)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 88) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 88) + 358)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 88) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 88) + 359)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 88) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 88) + 360)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 88) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 88) + 361)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 88) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 88) + 362)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 88) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 88) + 363)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 88) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 88) + 364)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 88) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 88) + 365)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 88) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 88) + 366)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 88) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 88) + 367)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 88) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 88) + 368)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 88) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 88) + 369)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 88) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 88) + 370)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 88) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 88) + 371)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 88) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 88) + 372)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 88) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 88) + 373)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 88) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 88) + 374)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 88) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 88) + 375)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 88) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 88) + 376)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 88) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 88) + 377)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 88) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 88) + 378)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 88) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 88) + 379)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 88) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 88) + 380)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 203)] * input1_shared[((((int)threadIdx.z) * 88) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 203)] * input1_shared[((((int)threadIdx.z) * 88) + 381)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 88) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 88) + 382)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 217)] * input1_shared[((((int)threadIdx.z) * 88) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 217)] * input1_shared[((((int)threadIdx.z) * 88) + 383)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 88) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 88) + 384)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 231)] * input1_shared[((((int)threadIdx.z) * 88) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 231)] * input1_shared[((((int)threadIdx.z) * 88) + 385)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 88) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 88) + 386)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * input1_shared[((((int)threadIdx.z) * 88) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * input1_shared[((((int)threadIdx.z) * 88) + 387)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 88) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 88) + 388)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 259)] * input1_shared[((((int)threadIdx.z) * 88) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 259)] * input1_shared[((((int)threadIdx.z) * 88) + 389)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 88) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 88) + 390)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 273)] * input1_shared[((((int)threadIdx.z) * 88) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 273)] * input1_shared[((((int)threadIdx.z) * 88) + 391)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 88) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 88) + 392)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 287)] * input1_shared[((((int)threadIdx.z) * 88) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 287)] * input1_shared[((((int)threadIdx.z) * 88) + 393)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 88) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 88) + 394)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 301)] * input1_shared[((((int)threadIdx.z) * 88) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 301)] * input1_shared[((((int)threadIdx.z) * 88) + 395)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 88) + 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 88) + 396)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 315)] * input1_shared[((((int)threadIdx.z) * 88) + 45)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 315)] * input1_shared[((((int)threadIdx.z) * 88) + 397)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 88) + 46)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 88) + 398)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 329)] * input1_shared[((((int)threadIdx.z) * 88) + 47)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 329)] * input1_shared[((((int)threadIdx.z) * 88) + 399)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 88) + 48)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 88) + 400)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * input1_shared[((((int)threadIdx.z) * 88) + 49)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * input1_shared[((((int)threadIdx.z) * 88) + 401)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 88) + 50)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 88) + 402)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 357)] * input1_shared[((((int)threadIdx.z) * 88) + 51)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 357)] * input1_shared[((((int)threadIdx.z) * 88) + 403)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 88) + 52)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 88) + 404)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 371)] * input1_shared[((((int)threadIdx.z) * 88) + 53)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 371)] * input1_shared[((((int)threadIdx.z) * 88) + 405)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 88) + 54)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 88) + 406)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 385)] * input1_shared[((((int)threadIdx.z) * 88) + 55)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 385)] * input1_shared[((((int)threadIdx.z) * 88) + 407)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 88) + 56)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 88) + 408)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 399)] * input1_shared[((((int)threadIdx.z) * 88) + 57)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 399)] * input1_shared[((((int)threadIdx.z) * 88) + 409)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 88) + 58)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 88) + 410)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 413)] * input1_shared[((((int)threadIdx.z) * 88) + 59)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 413)] * input1_shared[((((int)threadIdx.z) * 88) + 411)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 88) + 60)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 88) + 412)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 427)] * input1_shared[((((int)threadIdx.z) * 88) + 61)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 427)] * input1_shared[((((int)threadIdx.z) * 88) + 413)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 88) + 62)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 88) + 414)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * input1_shared[((((int)threadIdx.z) * 88) + 63)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * input1_shared[((((int)threadIdx.z) * 88) + 415)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 88) + 64)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 88) + 416)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 455)] * input1_shared[((((int)threadIdx.z) * 88) + 65)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 455)] * input1_shared[((((int)threadIdx.z) * 88) + 417)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 88) + 66)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 88) + 418)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 469)] * input1_shared[((((int)threadIdx.z) * 88) + 67)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 469)] * input1_shared[((((int)threadIdx.z) * 88) + 419)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 88) + 68)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 88) + 420)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 483)] * input1_shared[((((int)threadIdx.z) * 88) + 69)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 483)] * input1_shared[((((int)threadIdx.z) * 88) + 421)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 88) + 70)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 88) + 422)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 497)] * input1_shared[((((int)threadIdx.z) * 88) + 71)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 497)] * input1_shared[((((int)threadIdx.z) * 88) + 423)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 88) + 72)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 88) + 424)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 511)] * input1_shared[((((int)threadIdx.z) * 88) + 73)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 511)] * input1_shared[((((int)threadIdx.z) * 88) + 425)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 88) + 74)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 88) + 426)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 525)] * input1_shared[((((int)threadIdx.z) * 88) + 75)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 525)] * input1_shared[((((int)threadIdx.z) * 88) + 427)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 88) + 76)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 88) + 428)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * input1_shared[((((int)threadIdx.z) * 88) + 77)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * input1_shared[((((int)threadIdx.z) * 88) + 429)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 88) + 78)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 88) + 430)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 553)] * input1_shared[((((int)threadIdx.z) * 88) + 79)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 553)] * input1_shared[((((int)threadIdx.z) * 88) + 431)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 88) + 80)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 88) + 432)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 567)] * input1_shared[((((int)threadIdx.z) * 88) + 81)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 567)] * input1_shared[((((int)threadIdx.z) * 88) + 433)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 88) + 82)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 88) + 434)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 581)] * input1_shared[((((int)threadIdx.z) * 88) + 83)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 581)] * input1_shared[((((int)threadIdx.z) * 88) + 435)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 88) + 84)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 88) + 436)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 595)] * input1_shared[((((int)threadIdx.z) * 88) + 85)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 595)] * input1_shared[((((int)threadIdx.z) * 88) + 437)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 88) + 86)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 88) + 438)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 609)] * input1_shared[((((int)threadIdx.z) * 88) + 87)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 609)] * input1_shared[((((int)threadIdx.z) * 88) + 439)]));\n  }\n  compute[((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x)) + 196)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 7, 11], "blockDim": [7, 1, 4]}]