[{"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_1024_8_8_w256_1024_1_1_o4_256_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 1024, 8, 8], "filter_shape": [256, 1024, 1, 1], "output_shape": [4, 256, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_1024_8_8_w256_1024_1_1_o4_256_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1024];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input0[(((((((((int)blockIdx.z) >> 3) * 65536) + (rc_outer * 2048)) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4))];\n    pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input0[((((((((((int)blockIdx.z) >> 3) * 65536) + (rc_outer * 2048)) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)];\n    pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input0[((((((((((int)blockIdx.z) >> 3) * 65536) + (rc_outer * 2048)) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)];\n    pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input0[((((((((((int)blockIdx.z) >> 3) * 65536) + (rc_outer * 2048)) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[((((((((int)blockIdx.z) & 7) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 1024)) + (rc_outer * 32)) + (((int)threadIdx.x) * 4))];\n    input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((((int)blockIdx.z) & 7) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 1024)) + (rc_outer * 32)) + (((int)threadIdx.x) * 4)) + 1)];\n    input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((((int)blockIdx.z) & 7) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 1024)) + (rc_outer * 32)) + (((int)threadIdx.x) * 4)) + 2)];\n    input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((((int)blockIdx.z) & 7) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 1024)) + (rc_outer * 32)) + (((int)threadIdx.x) * 4)) + 3)];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 8)] * input1_shared[(((int)threadIdx.z) * 32)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 72)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 72)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 104)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 104)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 136)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 136)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 200)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 200)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 232)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 232)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 264)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 264)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 296)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 296)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 328)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 328)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 360)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 360)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 424)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 424)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 456)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 456)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 488)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 488)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 520)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 520)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 552)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 552)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 584)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 584)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 616)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 616)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 648)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 648)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 680)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 680)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 712)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 712)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 744)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 744)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 776)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 776)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 808)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 808)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 840)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 840)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 872)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 872)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 904)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 904)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 936)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 936)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 968)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 968)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 1000)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 1000)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  }\n  compute[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 1024)] = max(compute1[2], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 8)] = max(compute1[1], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 1032)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [1, 2, 32], "blockDim": [8, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_3_32_32_w64_3_3_3_o4_64_32_32_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 3, 32, 32], "filter_shape": [64, 3, 3, 3], "output_shape": [4, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_3_32_32_w64_3_3_3_o4_64_32_32_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[16];\n  __shared__ float pad_temp_shared[128];\n  __shared__ float input1_shared[96];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 4; ++ff_init) {\n    #pragma unroll\n    for (int yy_init = 0; yy_init < 2; ++yy_init) {\n      compute1[((ff_init * 2) + yy_init)] = 0.000000e+00f;\n      compute1[(((ff_init * 2) + yy_init) + 8)] = 0.000000e+00f;\n    }\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {\n    #pragma unroll\n    for (int rx_outer = 0; rx_outer < 3; ++rx_outer) {\n      __syncthreads();\n      pad_temp_shared[((((int)threadIdx.z) * 16) + ((int)threadIdx.x))] = (((((1 <= ((((int)blockIdx.y) * 2) + (((((int)threadIdx.z) * 16) + ((int)threadIdx.x)) >> 5))) && (((((int)blockIdx.y) * 2) + (((((int)threadIdx.z) * 16) + ((int)threadIdx.x)) >> 5)) < 33)) && (1 <= (rx_outer + (((((int)threadIdx.z) * 16) + ((int)threadIdx.x)) & 31)))) && ((rx_outer + (((((int)threadIdx.z) * 16) + ((int)threadIdx.x)) & 31)) < 33)) ? input0[((((((((((int)blockIdx.z) >> 1) * 3072) + (rc_outer * 1024)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.z) * 16)) + rx_outer) + ((int)threadIdx.x)) - 33)] : 0.000000e+00f);\n      if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 32) {\n        if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 96) {\n          if (((int)threadIdx.x) < 12) {\n            input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.x))] = input1[(((((((((int)blockIdx.z) & 1) * 864) + (((int)threadIdx.z) * 108)) + ((((int)threadIdx.x) / 3) * 27)) + (rc_outer * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer)];\n          }\n        }\n      }\n      __syncthreads();\n      #pragma unroll\n      for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n        #pragma unroll\n        for (int ff = 0; ff < 4; ++ff) {\n          #pragma unroll\n          for (int yy = 0; yy < 2; ++yy) {\n            compute1[((ff * 2) + yy)] = (compute1[((ff * 2) + yy)] + (pad_temp_shared[(((yy * 32) + (ry_inner * 32)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 12) + (ff * 3)) + ry_inner)]));\n            compute1[(((ff * 2) + yy) + 8)] = (compute1[(((ff * 2) + yy) + 8)] + (pad_temp_shared[((((yy * 32) + (ry_inner * 32)) + ((int)threadIdx.x)) + 16)] * input1_shared[(((((int)threadIdx.z) * 12) + (ff * 3)) + ry_inner)]));\n          }\n        }\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 4; ++i1_inner_inner_inner) {\n    #pragma unroll\n    for (int i2_inner_inner_inner = 0; i2_inner_inner_inner < 2; ++i2_inner_inner_inner) {\n      compute[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + ((int)threadIdx.x))] = max(compute1[((i1_inner_inner_inner * 2) + i2_inner_inner_inner)], 0.000000e+00f);\n      compute[(((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + ((int)threadIdx.x)) + 16)] = max(compute1[(((i1_inner_inner_inner * 2) + i2_inner_inner_inner) + 8)], 0.000000e+00f);\n    }\n  }\n}\n\n", "gridDim": [1, 16, 8], "blockDim": [16, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_64_16_16_w64_64_3_3_o4_64_16_16_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 64, 16, 16], "filter_shape": [64, 64, 3, 3], "output_shape": [4, 64, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_64_16_16_w64_64_3_3_o4_64_16_16_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[768];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    #pragma unroll\n    for (int rx_outer = 0; rx_outer < 3; ++rx_outer) {\n      __syncthreads();\n      #pragma unroll\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= ((((int)blockIdx.y) * 2) + (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) & 3))) && (((((int)blockIdx.y) * 2) + (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) & 3)) < 17)) && (1 <= (rx_outer + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15)))) && ((rx_outer + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15)) < 17)) ? input0[(((((((((((int)blockIdx.z) >> 1) * 16384) + (rc_outer * 2048)) + ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) >> 2) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) & 3) * 16)) + rx_outer) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15)) - 17)] : 0.000000e+00f);\n      }\n      #pragma unroll\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n        input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((((int)blockIdx.z) & 1) * 18432) + (((int)threadIdx.z) * 1152)) + ((((int)threadIdx.x) >> 3) * 576)) + (rc_outer * 72)) + ((((int)threadIdx.x) & 7) * 9)) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 * 3)) + rx_outer)];\n      }\n      __syncthreads();\n      #pragma unroll\n      for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n        #pragma unroll\n        for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n          compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 64) + (ry_inner * 16)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 24) + (rc_inner * 3)) + ry_inner)]));\n          compute1[2] = (compute1[2] + (pad_temp_shared[(((rc_inner * 64) + (ry_inner * 16)) + ((int)threadIdx.x))] * input1_shared[((((((int)threadIdx.z) * 24) + (rc_inner * 3)) + ry_inner) + 384)]));\n          compute1[1] = (compute1[1] + (pad_temp_shared[((((rc_inner * 64) + (ry_inner * 16)) + ((int)threadIdx.x)) + 16)] * input1_shared[(((((int)threadIdx.z) * 24) + (rc_inner * 3)) + ry_inner)]));\n          compute1[3] = (compute1[3] + (pad_temp_shared[((((rc_inner * 64) + (ry_inner * 16)) + ((int)threadIdx.x)) + 16)] * input1_shared[((((((int)threadIdx.z) * 24) + (rc_inner * 3)) + ry_inner) + 384)]));\n        }\n      }\n    }\n  }\n  compute[((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4096)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 16)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4112)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [1, 8, 8], "blockDim": [16, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_64_32_32_w64_64_1_1_o4_64_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 64, 32, 32], "filter_shape": [64, 64, 1, 1], "output_shape": [4, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_64_32_32_w64_64_1_1_o4_64_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[16];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[128];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 4; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n    compute1[(ff_init + 8)] = 0.000000e+00f;\n    compute1[(ff_init + 4)] = 0.000000e+00f;\n    compute1[(ff_init + 12)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((((((int)blockIdx.z) >> 1) * 65536) + (rc_outer * 4096)) + ((((int)threadIdx.z) >> 1) * 1024)) + (((int)blockIdx.y) * 64)) + ((((int)threadIdx.z) & 1) * 32)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    input1_shared[((((int)threadIdx.z) * 16) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) & 1) * 2048) + (((int)threadIdx.z) * 256)) + ((((int)threadIdx.x) >> 2) * 64)) + (rc_outer * 4)) + (((int)threadIdx.x) & 3))];\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {\n      #pragma unroll\n      for (int ff = 0; ff < 4; ++ff) {\n        compute1[ff] = (compute1[ff] + (pad_temp_shared[((rc_inner * 64) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 16) + (ff * 4)) + rc_inner)]));\n        compute1[(ff + 8)] = (compute1[(ff + 8)] + (pad_temp_shared[(((rc_inner * 64) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 16) + (ff * 4)) + rc_inner)]));\n        compute1[(ff + 4)] = (compute1[(ff + 4)] + (pad_temp_shared[(((rc_inner * 64) + ((int)threadIdx.x)) + 16)] * input1_shared[(((((int)threadIdx.z) * 16) + (ff * 4)) + rc_inner)]));\n        compute1[(ff + 12)] = (compute1[(ff + 12)] + (pad_temp_shared[(((rc_inner * 64) + ((int)threadIdx.x)) + 48)] * input1_shared[(((((int)threadIdx.z) * 16) + (ff * 4)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 4; ++i1_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + ((int)threadIdx.x)) + 32)] = max(compute1[(i1_inner_inner_inner + 8)], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + ((int)threadIdx.x)) + 16)] = max(compute1[(i1_inner_inner_inner + 4)], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + ((int)threadIdx.x)) + 48)] = max(compute1[(i1_inner_inner_inner + 12)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 16, 8], "blockDim": [16, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_256_8_8_w64_256_1_1_o4_64_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 256, 8, 8], "filter_shape": [64, 256, 1, 1], "output_shape": [4, 64, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_256_8_8_w64_256_1_1_o4_64_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 2048)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 2049)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 32)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 33)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 4096)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 4097)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 64)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 65)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 6144)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 6145)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 96)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 97)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 8192)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 8193)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 128)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 129)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 10240)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 10241)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 160)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 161)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 12288)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 12289)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 192)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 193)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 14336)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)blockIdx.z) >> 2) * 16384) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 14337)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 224)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 3) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 225)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [1, 4, 16], "blockDim": [8, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_128_16_16_w64_128_1_1_o4_64_8_8_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 128, 16, 16], "filter_shape": [64, 128, 1, 1], "output_shape": [4, 64, 8, 8], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_128_16_16_w64_128_1_1_o4_64_8_8_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[240];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[(((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2))];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2))];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 1)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 4096)];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 4097)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 16)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 17)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 8192)];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 8193)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 32)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 33)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 12288)];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 12289)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 48)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 49)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 16384)];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 16385)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 64)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 65)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 20480)];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 20481)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 80)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 81)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 24576)];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 24577)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 96)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 97)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2))] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 28672)];\n  if (((((((int)threadIdx.x) * 2) + 1) / 15) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) < 239) {\n      if (((int)threadIdx.x) < 7) {\n        pad_temp_shared[(((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) >> 2) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 28673)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 112)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) & 3) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.x) * 2)) + 113)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 15)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 30)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 45)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 60)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 75)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 90)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 150)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 210)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [1, 8, 16], "blockDim": [8, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_128_16_16_w64_128_1_1_o4_64_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 128, 16, 16], "filter_shape": [64, 128, 1, 1], "output_shape": [4, 64, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_128_16_16_w64_128_1_1_o4_64_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7))];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2))];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 1)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 4096)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 4096)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 16)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 17)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 8192)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 8192)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 32)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 33)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 12288)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 12288)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 48)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 49)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 16384)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 16384)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 64)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 65)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 20480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 20480)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 80)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 81)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 24576)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 24576)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 96)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 97)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 28672)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)blockIdx.z) >> 1) * 32768) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 28672)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 112)];\n  input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 113)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 4096)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 32)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 4128)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [2, 4, 8], "blockDim": [8, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_64_32_32_w64_64_3_3_o4_64_32_32_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 64, 32, 32], "filter_shape": [64, 64, 3, 3], "output_shape": [4, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_64_32_32_w64_64_3_3_o4_64_32_32_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[768];\n  __shared__ float input1_shared[768];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n    compute1[(ff_init + 2)] = 0.000000e+00f;\n    compute1[(ff_init + 4)] = 0.000000e+00f;\n    compute1[(ff_init + 6)] = 0.000000e+00f;\n  }\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    #pragma unroll\n    for (int rx_outer = 0; rx_outer < 3; ++rx_outer) {\n      __syncthreads();\n      #pragma unroll\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) % 6))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) % 6)) < 33)) && (1 <= (((((int)blockIdx.x) * 16) + rx_outer) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15)))) && ((((((int)blockIdx.x) * 16) + rx_outer) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15)) < 33)) ? input0[((((((((((((int)blockIdx.z) >> 1) * 65536) + (rc_outer * 8192)) + ((((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) / 6) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) % 6) * 32)) + (((int)blockIdx.x) * 16)) + rx_outer) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15)) - 33)] : 0.000000e+00f);\n      }\n      #pragma unroll\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n        input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((((int)blockIdx.z) & 1) * 18432) + (((int)threadIdx.z) * 1152)) + ((((int)threadIdx.x) >> 3) * 576)) + (rc_outer * 72)) + ((((int)threadIdx.x) & 7) * 9)) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 * 3)) + rx_outer)];\n      }\n      __syncthreads();\n      #pragma unroll\n      for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n        #pragma unroll\n        for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n          #pragma unroll\n          for (int ff = 0; ff < 2; ++ff) {\n            compute1[ff] = (compute1[ff] + (pad_temp_shared[(((rc_inner * 96) + (ry_inner * 16)) + ((int)threadIdx.x))] * input1_shared[((((((int)threadIdx.z) * 48) + (ff * 24)) + (rc_inner * 3)) + ry_inner)]));\n            compute1[(ff + 2)] = (compute1[(ff + 2)] + (pad_temp_shared[((((rc_inner * 96) + (ry_inner * 16)) + ((int)threadIdx.x)) + 16)] * input1_shared[((((((int)threadIdx.z) * 48) + (ff * 24)) + (rc_inner * 3)) + ry_inner)]));\n            compute1[(ff + 4)] = (compute1[(ff + 4)] + (pad_temp_shared[((((rc_inner * 96) + (ry_inner * 16)) + ((int)threadIdx.x)) + 32)] * input1_shared[((((((int)threadIdx.z) * 48) + (ff * 24)) + (rc_inner * 3)) + ry_inner)]));\n            compute1[(ff + 6)] = (compute1[(ff + 6)] + (pad_temp_shared[((((rc_inner * 96) + (ry_inner * 16)) + ((int)threadIdx.x)) + 48)] * input1_shared[((((((int)threadIdx.z) * 48) + (ff * 24)) + (rc_inner * 3)) + ry_inner)]));\n          }\n        }\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32)] = max(compute1[(i1_inner_inner_inner + 2)], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 64)] = max(compute1[(i1_inner_inner_inner + 4)], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 96)] = max(compute1[(i1_inner_inner_inner + 6)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [2, 8, 8], "blockDim": [16, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_1024_32_32_w64_1024_1_1_o4_64_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 1024, 32, 32], "filter_shape": [64, 1024, 1, 1], "output_shape": [4, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_1024_32_32_w64_1024_1_1_o4_64_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2))] = input0[(((((((int)blockIdx.z) * 1048576) + (rc_outer * 16384)) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2))];\n    pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)blockIdx.z) * 1048576) + (rc_outer * 16384)) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)];\n    input1_shared[((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4))] = input1[((((((int)threadIdx.z) * 4096) + ((((int)threadIdx.x) >> 2) * 1024)) + (rc_outer * 16)) + ((((int)threadIdx.x) & 3) * 4))];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 1)] = input1[((((((int)threadIdx.z) * 4096) + ((((((int)threadIdx.x) * 4) + 1) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 4) + 1) & 15))];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 2)] = input1[((((((int)threadIdx.z) * 4096) + ((((((int)threadIdx.x) * 4) + 2) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 4) + 2) & 15))];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 3)] = input1[((((((int)threadIdx.z) * 4096) + ((((((int)threadIdx.x) * 4) + 3) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 4) + 3) & 15))];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 512)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 768)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 16) + 512)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 16) + 768)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 513)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 769)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 513)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 769)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 514)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 770)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 514)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 770)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 515)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 771)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 515)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 771)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 516)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 772)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 516)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 772)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 517)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 773)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 517)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 773)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 518)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 774)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 518)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 774)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 519)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 775)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 519)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 775)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 520)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 256)] * input1_shared[((((int)threadIdx.z) * 16) + 776)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 257)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 257)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 257)] * input1_shared[((((int)threadIdx.z) * 16) + 520)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 257)] * input1_shared[((((int)threadIdx.z) * 16) + 776)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 521)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 288)] * input1_shared[((((int)threadIdx.z) * 16) + 777)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 289)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 289)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 289)] * input1_shared[((((int)threadIdx.z) * 16) + 521)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 289)] * input1_shared[((((int)threadIdx.z) * 16) + 777)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 522)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 320)] * input1_shared[((((int)threadIdx.z) * 16) + 778)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 321)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 321)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 321)] * input1_shared[((((int)threadIdx.z) * 16) + 522)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 321)] * input1_shared[((((int)threadIdx.z) * 16) + 778)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 523)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 16) + 779)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 16) + 523)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 16) + 779)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 524)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 384)] * input1_shared[((((int)threadIdx.z) * 16) + 780)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 385)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 385)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 385)] * input1_shared[((((int)threadIdx.z) * 16) + 524)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 385)] * input1_shared[((((int)threadIdx.z) * 16) + 780)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 525)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 781)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 417)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 417)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 417)] * input1_shared[((((int)threadIdx.z) * 16) + 525)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 417)] * input1_shared[((((int)threadIdx.z) * 16) + 781)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 526)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 782)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 16) + 526)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 449)] * input1_shared[((((int)threadIdx.z) * 16) + 782)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 527)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 480)] * input1_shared[((((int)threadIdx.z) * 16) + 783)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 16) + 527)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 16) + 783)]));\n  }\n  compute[((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 16384)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 32768)] = max(compute1[4], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 49152)] = max(compute1[6], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 16385)] = max(compute1[3], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 32769)] = max(compute1[5], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 49153)] = max(compute1[7], 0.000000e+00f);\n}\n\n", "gridDim": [1, 32, 4], "blockDim": [16, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_64_32_32_w64_64_1_1_o4_64_16_16_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 64, 32, 32], "filter_shape": [64, 64, 1, 1], "output_shape": [4, 64, 16, 16], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_64_32_32_w64_64_1_1_o4_64_16_16_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[496];\n  __shared__ float input1_shared[1024];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 16) + ((int)threadIdx.x)) < 496) {\n      pad_temp_shared[((((int)threadIdx.z) * 16) + ((int)threadIdx.x))] = input0[(((((((int)blockIdx.z) * 65536) + (rc_outer * 16384)) + ((((((int)threadIdx.z) * 16) + ((int)threadIdx.x)) / 31) * 1024)) + (((int)blockIdx.y) * 64)) + (((((int)threadIdx.z) * 16) + ((int)threadIdx.x)) % 31))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input1[((((((int)threadIdx.z) * 128) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4) * 64)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15))];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      #pragma unroll\n      for (int ff = 0; ff < 2; ++ff) {\n        compute1[ff] = (compute1[ff] + (pad_temp_shared[((rc_inner * 31) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 32) + (ff * 16)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (i1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 16, 4], "blockDim": [16, 1, 32]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_64_8_8_w64_64_3_3_o4_64_8_8_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 64, 8, 8], "filter_shape": [64, 64, 3, 3], "output_shape": [4, 64, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_64_8_8_w64_64_3_3_o4_64_8_8_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[384];\n  __shared__ float input1_shared[768];\n  #pragma unroll\n  for (int xx_init = 0; xx_init < 2; ++xx_init) {\n    compute1[xx_init] = 0.000000e+00f;\n  }\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    #pragma unroll\n    for (int ry_outer = 0; ry_outer < 3; ++ry_outer) {\n      __syncthreads();\n      #pragma unroll\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        pad_temp_shared[((((((int)threadIdx.z) * 24) + (((int)threadIdx.y) * 6)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= (((((int)blockIdx.y) * 4) + ((int)threadIdx.y)) + ry_outer)) && ((((((int)blockIdx.y) * 4) + ((int)threadIdx.y)) + ry_outer) < 9)) && (1 <= (((((int)blockIdx.x) * 4) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))) && ((((((int)blockIdx.x) * 4) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 9)) ? input0[(((((((((((((int)blockIdx.z) >> 2) * 4096) + (rc_outer * 1024)) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ry_outer * 8)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) - 9)] : 0.000000e+00f);\n      }\n      #pragma unroll\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n        input1_shared[((((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 12)) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((((((int)blockIdx.z) & 3) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.y) * 36)) + (((int)threadIdx.x) * 18)) + ((ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 / 3) * 9)) + (ry_outer * 3)) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 % 3))];\n      }\n      __syncthreads();\n      #pragma unroll\n      for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n        #pragma unroll\n        for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n          #pragma unroll\n          for (int xx = 0; xx < 2; ++xx) {\n            compute1[xx] = (compute1[xx] + (pad_temp_shared[(((((rc_inner * 24) + (((int)threadIdx.y) * 6)) + (((int)threadIdx.x) * 2)) + xx) + rx_inner)] * input1_shared[(((((int)threadIdx.z) * 48) + (rc_inner * 3)) + rx_inner)]));\n          }\n        }\n      }\n    }\n  }\n  #pragma unroll\n  for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n    compute[(((((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[i3_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [2, 2, 16], "blockDim": [2, 4, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i4_1024_16_16_w128_1024_1_1_o4_128_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [4, 1024, 16, 16], "filter_shape": [128, 1024, 1, 1], "output_shape": [4, 128, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i4_1024_16_16_w128_1024_1_1_o4_128_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input0[(((((((((int)blockIdx.z) >> 2) * 262144) + (rc_outer * 4096)) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4))];\n    pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input0[((((((((((int)blockIdx.z) >> 2) * 262144) + (rc_outer * 4096)) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)];\n    pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input0[((((((((((int)blockIdx.z) >> 2) * 262144) + (rc_outer * 4096)) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)];\n    pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input0[((((((((((int)blockIdx.z) >> 2) * 262144) + (rc_outer * 4096)) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((((int)blockIdx.z) & 3) * 32768) + (((int)threadIdx.z) * 4096)) + (((int)threadIdx.y) * 2048)) + ((((int)threadIdx.x) >> 2) * 1024)) + (rc_outer * 16)) + ((((int)threadIdx.x) & 3) * 4))];\n    input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((((int)blockIdx.z) & 3) * 32768) + (((int)threadIdx.z) * 4096)) + (((int)threadIdx.y) * 2048)) + ((((((int)threadIdx.x) * 4) + 1) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 4) + 1) & 15))];\n    input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((((int)blockIdx.z) & 3) * 32768) + (((int)threadIdx.z) * 4096)) + (((int)threadIdx.y) * 2048)) + ((((((int)threadIdx.x) * 4) + 2) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 4) + 2) & 15))];\n    input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((((int)blockIdx.z) & 3) * 32768) + (((int)threadIdx.z) * 4096)) + (((int)threadIdx.y) * 2048)) + ((((((int)threadIdx.x) * 4) + 3) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 4) + 3) & 15))];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 256)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 8)] * input1_shared[(((int)threadIdx.z) * 32)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 32) + 256)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 272)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 32) + 272)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 257)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 32) + 257)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 273)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 32) + 273)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 258)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 72)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 72)] * input1_shared[((((int)threadIdx.z) * 32) + 258)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 274)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 72)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 72)] * input1_shared[((((int)threadIdx.z) * 32) + 274)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 259)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 104)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 104)] * input1_shared[((((int)threadIdx.z) * 32) + 259)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 275)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 104)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 104)] * input1_shared[((((int)threadIdx.z) * 32) + 275)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 260)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 136)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 136)] * input1_shared[((((int)threadIdx.z) * 32) + 260)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 276)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 136)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 136)] * input1_shared[((((int)threadIdx.z) * 32) + 276)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 261)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 32) + 261)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 277)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 168)] * input1_shared[((((int)threadIdx.z) * 32) + 277)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 262)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 200)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 200)] * input1_shared[((((int)threadIdx.z) * 32) + 262)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 278)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 200)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 200)] * input1_shared[((((int)threadIdx.z) * 32) + 278)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 263)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 232)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 232)] * input1_shared[((((int)threadIdx.z) * 32) + 263)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 279)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 232)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 232)] * input1_shared[((((int)threadIdx.z) * 32) + 279)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 264)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 264)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 264)] * input1_shared[((((int)threadIdx.z) * 32) + 264)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 280)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 264)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 264)] * input1_shared[((((int)threadIdx.z) * 32) + 280)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 265)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 296)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 296)] * input1_shared[((((int)threadIdx.z) * 32) + 265)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 281)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 296)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 296)] * input1_shared[((((int)threadIdx.z) * 32) + 281)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 266)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 328)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 328)] * input1_shared[((((int)threadIdx.z) * 32) + 266)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 282)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 328)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 328)] * input1_shared[((((int)threadIdx.z) * 32) + 282)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 267)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 360)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 360)] * input1_shared[((((int)threadIdx.z) * 32) + 267)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 283)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 360)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 360)] * input1_shared[((((int)threadIdx.z) * 32) + 283)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 268)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 32) + 268)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 284)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 392)] * input1_shared[((((int)threadIdx.z) * 32) + 284)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 269)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 424)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 424)] * input1_shared[((((int)threadIdx.z) * 32) + 269)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 285)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 424)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 424)] * input1_shared[((((int)threadIdx.z) * 32) + 285)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 270)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 456)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 456)] * input1_shared[((((int)threadIdx.z) * 32) + 270)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 286)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 456)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 456)] * input1_shared[((((int)threadIdx.z) * 32) + 286)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 271)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 488)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 488)] * input1_shared[((((int)threadIdx.z) * 32) + 271)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 287)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 488)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 488)] * input1_shared[((((int)threadIdx.z) * 32) + 287)]));\n  }\n  compute[(((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 4096)] = max(compute1[4], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 8)] = max(compute1[2], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 4104)] = max(compute1[6], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 256)] = max(compute1[1], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 4352)] = max(compute1[5], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 264)] = max(compute1[3], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 4360)] = max(compute1[7], 0.000000e+00f);\n}\n\n", "gridDim": [1, 8, 16], "blockDim": [8, 2, 8]}]