[{"tvm_func_name": "topi_convolution_op_float_i1_1024_14_14_w32_1024_1_1_o1_32_7_7_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [32, 1024, 1, 1], "output_shape": [1, 32, 7, 7], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_1024_14_14_w32_1024_1_1_o1_32_7_7_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[56];\n  __shared__ float pad_temp_shared[676];\n  __shared__ float input1_shared[128];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[28] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[32] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[36] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[40] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[44] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[48] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[52] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[29] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[33] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[37] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[41] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[45] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[49] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[53] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[30] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[34] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[38] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[42] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[46] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[50] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[54] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[31] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[35] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[39] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[43] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[47] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[51] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  compute_local[55] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25))] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + (((((int)threadIdx.x) * 25) / 13) * 14)) + ((((int)threadIdx.x) * 25) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 1)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 1) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 2)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 2) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 3)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 3) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 4)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 4) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 5)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 5) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 5) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 6)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 6) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 6) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 7)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 7) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 7) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 8)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 8) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 8) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 9)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 9) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 9) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 10)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 10) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 10) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 11)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 11) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 11) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 12)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 12) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 12) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 13)] = input0[(((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + (((((int)threadIdx.x) * 25) / 13) * 14)) + ((((int)threadIdx.x) * 25) % 13)) + 14)];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 14)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 14) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 15)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 15) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 16)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 16) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 17)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 17) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 18)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 18) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 5) % 13))];\n    if (((((((int)threadIdx.x) * 25) + 19) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 19) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 657) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 19)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 19) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 6) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 20) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 20) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 656) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 20)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 20) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 7) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 21) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 21) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 655) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 21)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 21) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 8) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 22) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 22) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 654) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 22)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 22) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 9) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 23) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 23) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 653) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 23)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 23) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 10) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 24) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 24) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 652) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 24)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 24) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 11) % 13))];\n          }\n        }\n      }\n    }\n    input1_shared[((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5))] = input1[((((((int)threadIdx.z) * 8192) + (((((int)threadIdx.x) * 5) / 4) * 1024)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3))];\n    input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)threadIdx.z) * 8192) + ((((((int)threadIdx.x) * 5) + 1) >> 2) * 1024)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 1) & 3))];\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 126) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)threadIdx.z) * 8192) + ((((((int)threadIdx.x) * 5) + 2) >> 2) * 1024)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 2) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 125) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)threadIdx.z) * 8192) + ((((((int)threadIdx.x) * 5) + 3) >> 2) * 1024)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 3) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 4)) < 31) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 124) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 4)] = input1[(((((((int)threadIdx.z) * 8192) + (((((int)threadIdx.x) * 5) / 4) * 1024)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3)) + 1024)];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n  }\n  compute[((((int)threadIdx.z) * 196) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 784)] = compute_local[28];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 7)] = compute_local[4];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 791)] = compute_local[32];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 14)] = compute_local[8];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 798)] = compute_local[36];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 21)] = compute_local[12];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 805)] = compute_local[40];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 28)] = compute_local[16];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 812)] = compute_local[44];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 35)] = compute_local[20];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 819)] = compute_local[48];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 42)] = compute_local[24];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 826)] = compute_local[52];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 49)] = compute_local[1];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 833)] = compute_local[29];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 56)] = compute_local[5];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 840)] = compute_local[33];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 63)] = compute_local[9];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 847)] = compute_local[37];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 70)] = compute_local[13];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 854)] = compute_local[41];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 77)] = compute_local[17];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 861)] = compute_local[45];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 84)] = compute_local[21];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 868)] = compute_local[49];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 91)] = compute_local[25];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 875)] = compute_local[53];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 98)] = compute_local[2];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 882)] = compute_local[30];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 105)] = compute_local[6];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 889)] = compute_local[34];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 112)] = compute_local[10];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 896)] = compute_local[38];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 119)] = compute_local[14];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 903)] = compute_local[42];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 126)] = compute_local[18];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 910)] = compute_local[46];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 133)] = compute_local[22];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 917)] = compute_local[50];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 140)] = compute_local[26];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 924)] = compute_local[54];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 147)] = compute_local[3];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 931)] = compute_local[31];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 154)] = compute_local[7];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 938)] = compute_local[35];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 161)] = compute_local[11];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 945)] = compute_local[39];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 168)] = compute_local[15];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 952)] = compute_local[43];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 175)] = compute_local[19];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 959)] = compute_local[47];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 182)] = compute_local[23];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 966)] = compute_local[51];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 189)] = compute_local[27];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 973)] = compute_local[55];\n}\n\n", "gridDim": [1, 1, 1], "blockDim": [7, 1, 4]}, {"tvm_func_name": "topi_convolution_op_float_i1_512_28_28_w8_512_1_1_o1_8_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [8, 512, 1, 1], "output_shape": [1, 8, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_512_28_28_w8_512_1_1_o1_8_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[7];\n  __shared__ float pad_temp_shared[392];\n  __shared__ float input1_shared[32];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 392) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4))] = input0[((((((rc_outer * 3136) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) / 98) * 784)) + (((int)blockIdx.y) * 196)) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) % 98) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) % 14))];\n      }\n    }\n    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 391) {\n      if (((int)threadIdx.x) < 12) {\n        pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1)] = input0[((((((rc_outer * 3136) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1) / 98) * 784)) + (((int)blockIdx.y) * 196)) + ((((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1) % 98) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1) % 14))];\n      }\n    }\n    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 390) {\n      if (((int)threadIdx.x) < 12) {\n        pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2)] = input0[((((((rc_outer * 3136) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2) / 98) * 784)) + (((int)blockIdx.y) * 196)) + ((((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2) % 98) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2) % 14))];\n      }\n    }\n    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 389) {\n      if (((int)threadIdx.x) < 12) {\n        pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3)] = input0[((((((rc_outer * 3136) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3) / 98) * 784)) + (((int)blockIdx.y) * 196)) + ((((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3) % 98) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3) % 14))];\n      }\n    }\n    if (((((int)threadIdx.x) >> 2) + ((int)threadIdx.z)) < 8) {\n      if (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 32) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[((((int)threadIdx.z) * 4) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 512) + (rc_outer * 4)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  }\n  compute[((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 28)] = compute_local[1];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 56)] = compute_local[2];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 84)] = compute_local[3];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 112)] = compute_local[4];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 140)] = compute_local[5];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 168)] = compute_local[6];\n}\n\n", "gridDim": [2, 4, 1], "blockDim": [14, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_512_28_28_w1024_512_1_1_o1_1024_14_14_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [1024, 512, 1, 1], "output_shape": [1, 1024, 14, 14], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_512_28_28_w1024_512_1_1_o1_1024_14_14_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[28];\n  __shared__ float pad_temp_shared[1404];\n  __shared__ float input1_shared[128];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 13; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 1404) {\n        if (((((int)threadIdx.x) * 13) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 176) {\n          pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 3136) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 351) * 784)) + (((int)blockIdx.y) * 392)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 351) / 27) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 27))];\n        }\n      }\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2)) < 32) {\n        if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 16) {\n            input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2) * 512)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 3))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 351) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[7] = (compute_local[7] + (pad_temp_shared[((rc_inner * 351) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[14] = (compute_local[14] + (pad_temp_shared[((rc_inner * 351) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[21] = (compute_local[21] + (pad_temp_shared[((rc_inner * 351) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 54)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[8] = (compute_local[8] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 54)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[15] = (compute_local[15] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 54)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[22] = (compute_local[22] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 54)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[2] = (compute_local[2] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 108)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[9] = (compute_local[9] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 108)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[16] = (compute_local[16] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 108)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[23] = (compute_local[23] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 108)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[3] = (compute_local[3] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 162)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[10] = (compute_local[10] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 162)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[17] = (compute_local[17] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 162)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[24] = (compute_local[24] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 162)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[4] = (compute_local[4] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 216)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[11] = (compute_local[11] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 216)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[18] = (compute_local[18] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 216)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[25] = (compute_local[25] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 216)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[5] = (compute_local[5] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 270)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[12] = (compute_local[12] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 270)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[19] = (compute_local[19] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 270)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[26] = (compute_local[26] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 270)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[6] = (compute_local[6] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 324)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[13] = (compute_local[13] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 324)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[20] = (compute_local[20] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 324)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[27] = (compute_local[27] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 324)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1568)] = compute_local[7];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3136)] = compute_local[14];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4704)] = compute_local[21];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1582)] = compute_local[8];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3150)] = compute_local[15];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4718)] = compute_local[22];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 28)] = compute_local[2];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1596)] = compute_local[9];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3164)] = compute_local[16];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4732)] = compute_local[23];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 42)] = compute_local[3];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1610)] = compute_local[10];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3178)] = compute_local[17];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4746)] = compute_local[24];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 56)] = compute_local[4];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1624)] = compute_local[11];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3192)] = compute_local[18];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4760)] = compute_local[25];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 70)] = compute_local[5];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1638)] = compute_local[12];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3206)] = compute_local[19];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4774)] = compute_local[26];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 84)] = compute_local[6];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1652)] = compute_local[13];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3220)] = compute_local[20];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4788)] = compute_local[27];\n}\n\n", "gridDim": [1, 2, 32], "blockDim": [14, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_512_28_28_w16_512_1_1_o1_16_14_14_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [16, 512, 1, 1], "output_shape": [1, 16, 14, 14], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_512_28_28_w16_512_1_1_o1_16_14_14_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[14];\n  __shared__ float pad_temp_shared[1404];\n  __shared__ float input1_shared[64];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 13; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 1404) {\n        if (((((int)threadIdx.x) * 13) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 176) {\n          pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 3136) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 351) * 784)) + (((int)blockIdx.y) * 392)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 351) / 27) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 27))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 16) {\n      if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 64) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 1024) + ((((int)threadIdx.x) >> 2) * 512)) + (rc_outer * 4)) + (((int)threadIdx.x) & 3))];\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 351) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[7] = (compute_local[7] + (pad_temp_shared[((rc_inner * 351) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 54)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[8] = (compute_local[8] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 54)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[2] = (compute_local[2] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 108)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[9] = (compute_local[9] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 108)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[3] = (compute_local[3] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 162)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[10] = (compute_local[10] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 162)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[4] = (compute_local[4] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 216)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[11] = (compute_local[11] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 216)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[5] = (compute_local[5] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 270)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[12] = (compute_local[12] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 270)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[6] = (compute_local[6] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 324)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[13] = (compute_local[13] + (pad_temp_shared[(((rc_inner * 351) + (((int)threadIdx.x) * 2)) + 324)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n    }\n  }\n  compute[(((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1568)] = compute_local[7];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1582)] = compute_local[8];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 28)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1596)] = compute_local[9];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 42)] = compute_local[3];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1610)] = compute_local[10];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 56)] = compute_local[4];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1624)] = compute_local[11];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 70)] = compute_local[5];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1638)] = compute_local[12];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 84)] = compute_local[6];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1652)] = compute_local[13];\n}\n\n", "gridDim": [1, 2, 1], "blockDim": [14, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_3_230_230_w64_3_7_7_o1_64_112_112_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 3, 230, 230], "filter_shape": [64, 3, 7, 7], "output_shape": [1, 64, 112, 112], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_3_230_230_w64_3_7_7_o1_64_112_112_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[16];\n  __shared__ float pad_temp_shared[1155];\n  __shared__ float input1_shared[96];\n  for (int yy_c_init = 0; yy_c_init < 2; ++yy_c_init) {\n    compute_local[yy_c_init] = 0.000000e+00f;\n    compute_local[(yy_c_init + 4)] = 0.000000e+00f;\n    compute_local[(yy_c_init + 8)] = 0.000000e+00f;\n    compute_local[(yy_c_init + 12)] = 0.000000e+00f;\n    compute_local[(yy_c_init + 2)] = 0.000000e+00f;\n    compute_local[(yy_c_init + 6)] = 0.000000e+00f;\n    compute_local[(yy_c_init + 10)] = 0.000000e+00f;\n    compute_local[(yy_c_init + 14)] = 0.000000e+00f;\n  }\n  for (int ry_outer = 0; ry_outer < 7; ++ry_outer) {\n    for (int rx_outer = 0; rx_outer < 7; ++rx_outer) {\n      __syncthreads();\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        if ((((((int)threadIdx.z) * 145) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 1155) {\n          if (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 145) {\n            pad_temp_shared[(((((int)threadIdx.z) * 145) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((((((((((int)threadIdx.z) * 145) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 385) * 52900) + (((int)blockIdx.y) * 1840)) + ((((((((int)threadIdx.z) * 145) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 385) / 55) * 230)) + (ry_outer * 230)) + (((int)blockIdx.x) * 56)) + rx_outer) + ((((((int)threadIdx.z) * 145) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 55))];\n          }\n        }\n      }\n      if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 32) {\n        if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 96) {\n          if (((int)threadIdx.x) < 12) {\n            input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.x) * 49)) + (ry_outer * 7)) + rx_outer)];\n          }\n        }\n      }\n      __syncthreads();\n      for (int rc_inner = 0; rc_inner < 3; ++rc_inner) {\n        for (int yy_c = 0; yy_c < 2; ++yy_c) {\n          compute_local[yy_c] = (compute_local[yy_c] + (pad_temp_shared[(((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 3) + rc_inner)]));\n          compute_local[(yy_c + 4)] = (compute_local[(yy_c + 4)] + (pad_temp_shared[(((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 3) + rc_inner) + 24)]));\n          compute_local[(yy_c + 8)] = (compute_local[(yy_c + 8)] + (pad_temp_shared[(((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 3) + rc_inner) + 48)]));\n          compute_local[(yy_c + 12)] = (compute_local[(yy_c + 12)] + (pad_temp_shared[(((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 3) + rc_inner) + 72)]));\n          compute_local[(yy_c + 2)] = (compute_local[(yy_c + 2)] + (pad_temp_shared[((((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2)) + 220)] * input1_shared[((((int)threadIdx.z) * 3) + rc_inner)]));\n          compute_local[(yy_c + 6)] = (compute_local[(yy_c + 6)] + (pad_temp_shared[((((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2)) + 220)] * input1_shared[(((((int)threadIdx.z) * 3) + rc_inner) + 24)]));\n          compute_local[(yy_c + 10)] = (compute_local[(yy_c + 10)] + (pad_temp_shared[((((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2)) + 220)] * input1_shared[(((((int)threadIdx.z) * 3) + rc_inner) + 48)]));\n          compute_local[(yy_c + 14)] = (compute_local[(yy_c + 14)] + (pad_temp_shared[((((rc_inner * 385) + (yy_c * 110)) + (((int)threadIdx.x) * 2)) + 220)] * input1_shared[(((((int)threadIdx.z) * 3) + rc_inner) + 72)]));\n        }\n      }\n    }\n  }\n  for (int yy_inner_inner_inner = 0; yy_inner_inner_inner < 2; ++yy_inner_inner_inner) {\n    compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x))] = compute_local[yy_inner_inner_inner];\n    compute[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 100352)] = compute_local[(yy_inner_inner_inner + 4)];\n    compute[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 200704)] = compute_local[(yy_inner_inner_inner + 8)];\n    compute[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 301056)] = compute_local[(yy_inner_inner_inner + 12)];\n    compute[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 224)] = compute_local[(yy_inner_inner_inner + 2)];\n    compute[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 100576)] = compute_local[(yy_inner_inner_inner + 6)];\n    compute[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 200928)] = compute_local[(yy_inner_inner_inner + 10)];\n    compute[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 12544)) + (((int)blockIdx.y) * 448)) + (yy_inner_inner_inner * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 301280)] = compute_local[(yy_inner_inner_inner + 14)];\n  }\n}\n\n", "gridDim": [4, 28, 2], "blockDim": [28, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_1024_14_14_w1024_1024_1_1_o1_1024_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [1024, 1024, 1, 1], "output_shape": [1, 1024, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_1024_14_14_w1024_1024_1_1_o1_1024_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[28];\n  __shared__ float pad_temp_shared[392];\n  __shared__ float input1_shared[128];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 392) {\n        if (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 49) {\n          pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((rc_outer * 784) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 98) * 196)) + (((int)blockIdx.y) * 98)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 98))];\n        }\n      }\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2)) < 32) {\n        if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 16) {\n            input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 2) * 1024)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 3))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 98) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[7] = (compute_local[7] + (pad_temp_shared[((rc_inner * 98) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[14] = (compute_local[14] + (pad_temp_shared[((rc_inner * 98) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[21] = (compute_local[21] + (pad_temp_shared[((rc_inner * 98) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 14)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[8] = (compute_local[8] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 14)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[15] = (compute_local[15] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 14)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[22] = (compute_local[22] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 14)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[2] = (compute_local[2] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 28)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[9] = (compute_local[9] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 28)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[16] = (compute_local[16] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 28)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[23] = (compute_local[23] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 28)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[3] = (compute_local[3] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 42)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[10] = (compute_local[10] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 42)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[17] = (compute_local[17] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 42)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[24] = (compute_local[24] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 42)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[4] = (compute_local[4] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[11] = (compute_local[11] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 56)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[18] = (compute_local[18] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 56)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[25] = (compute_local[25] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 56)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[5] = (compute_local[5] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 70)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[12] = (compute_local[12] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 70)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[19] = (compute_local[19] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 70)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[26] = (compute_local[26] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 70)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n      compute_local[6] = (compute_local[6] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[13] = (compute_local[13] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 84)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[20] = (compute_local[20] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 84)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 64)]));\n      compute_local[27] = (compute_local[27] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 84)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 96)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1568)] = compute_local[7];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3136)] = compute_local[14];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4704)] = compute_local[21];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1582)] = compute_local[8];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3150)] = compute_local[15];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4718)] = compute_local[22];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 28)] = compute_local[2];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1596)] = compute_local[9];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3164)] = compute_local[16];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4732)] = compute_local[23];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 42)] = compute_local[3];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1610)] = compute_local[10];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3178)] = compute_local[17];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4746)] = compute_local[24];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 56)] = compute_local[4];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1624)] = compute_local[11];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3192)] = compute_local[18];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4760)] = compute_local[25];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 70)] = compute_local[5];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1638)] = compute_local[12];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3206)] = compute_local[19];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4774)] = compute_local[26];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 84)] = compute_local[6];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1652)] = compute_local[13];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 3220)] = compute_local[20];\n  compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 4788)] = compute_local[27];\n}\n\n", "gridDim": [1, 2, 32], "blockDim": [14, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_256_56_56_w4_256_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [4, 256, 1, 1], "output_shape": [1, 4, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_256_56_56_w4_256_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[4];\n  __shared__ float pad_temp_shared[448];\n  __shared__ float input1_shared[32];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8))] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((int)threadIdx.x) / 7) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) % 7) * 8) / 28) * 56)) + (((int)blockIdx.x) * 28)) + ((((int)threadIdx.x) * 8) % 28))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + 1)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 8) + 1) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + (((((((int)threadIdx.x) * 8) + 1) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.x) * 8) + 1) % 28))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + 2)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 8) + 2) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + (((((((int)threadIdx.x) * 8) + 2) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.x) * 8) + 2) % 28))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + 3)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 8) + 3) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + (((((((int)threadIdx.x) * 8) + 3) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.x) * 8) + 3) % 28))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + 4)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 8) + 4) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + (((((((int)threadIdx.x) * 8) + 4) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.x) * 8) + 4) % 28))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + 5)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 8) + 5) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + (((((((int)threadIdx.x) * 8) + 5) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.x) * 8) + 5) % 28))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + 6)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 8) + 6) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + (((((((int)threadIdx.x) * 8) + 6) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.x) * 8) + 6) % 28))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 8)) + 7)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 8) + 7) / 56) * 3136)) + (((int)blockIdx.y) * 112)) + (((((((int)threadIdx.x) * 8) + 7) % 56) / 28) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.x) * 8) + 7) % 28))];\n    if (((((int)threadIdx.x) >> 3) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 32) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 256) + (rc_outer * 8)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  }\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 56)] = compute_local[2];\n  compute[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n  compute[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 70)] = compute_local[3];\n}\n\n", "gridDim": [2, 28, 1], "blockDim": [14, 1, 4]}, {"tvm_func_name": "topi_convolution_op_float_i1_256_56_56_w512_256_1_1_o1_512_28_28_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [512, 256, 1, 1], "output_shape": [1, 512, 28, 28], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_256_56_56_w512_256_1_1_o1_512_28_28_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[28];\n  __shared__ float pad_temp_shared[1404];\n  __shared__ float input1_shared[256];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) < 1404) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7))] = input0[((((((rc_outer * 12544) + ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + (((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) < 1403) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 1)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 1) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 1) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 1) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) < 1402) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 2)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 2) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 2) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 2) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) < 1401) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 3)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 3) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 3) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 3) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) < 1400) {\n      if (((int)threadIdx.x) < 12) {\n        pad_temp_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 4)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 4) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 4) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 4) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) < 1399) {\n      if (((int)threadIdx.x) < 12) {\n        pad_temp_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 5)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 5) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 5) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 5) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) < 1398) {\n      if (((int)threadIdx.x) < 12) {\n        pad_temp_shared[(((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 6)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 6) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 6) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 88) + (((int)threadIdx.x) * 7)) + 6) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 1)) < 64) {\n      if (((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) < 256) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((int)threadIdx.x) >> 1) * 256)) + (rc_outer * 4)) + ((((int)threadIdx.x) & 1) * 2))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 2) + 1) >> 2)) < 64) {\n      if (((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) < 255) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 2) + 1) >> 2) * 256)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3))];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 459)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 459)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 459)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 459)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 513)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 513)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 513)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 513)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 567)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 567)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 567)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 567)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 621)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 621)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 621)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 621)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 675)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 675)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 675)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 675)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 756)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 756)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 756)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 756)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 810)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 810)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 810)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 810)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 864)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 864)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 864)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 864)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 918)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 918)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 918)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 918)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 972)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 972)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 972)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 972)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1026)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1026)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1026)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1026)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1107)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1107)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1107)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1107)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1161)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1161)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1161)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1161)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1215)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1215)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1215)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1215)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1269)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1269)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1269)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1269)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1323)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1323)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1323)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1323)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1377)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1377)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1377)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1377)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n  }\n  compute[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12544)] = compute_local[7];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25088)] = compute_local[14];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37632)] = compute_local[21];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 28)] = compute_local[1];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12572)] = compute_local[8];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25116)] = compute_local[15];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37660)] = compute_local[22];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 56)] = compute_local[2];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12600)] = compute_local[9];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25144)] = compute_local[16];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37688)] = compute_local[23];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 84)] = compute_local[3];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12628)] = compute_local[10];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25172)] = compute_local[17];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37716)] = compute_local[24];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 112)] = compute_local[4];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12656)] = compute_local[11];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25200)] = compute_local[18];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37744)] = compute_local[25];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 140)] = compute_local[5];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12684)] = compute_local[12];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25228)] = compute_local[19];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37772)] = compute_local[26];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 168)] = compute_local[6];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12712)] = compute_local[13];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25256)] = compute_local[20];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37800)] = compute_local[27];\n}\n\n", "gridDim": [2, 4, 8], "blockDim": [14, 1, 16]}, {"tvm_func_name": "topi_convolution_op_float_i1_32_7_7_w32_32_3_3_o1_32_7_7_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 32, 7, 7], "filter_shape": [32, 32, 3, 3], "output_shape": [1, 32, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_32_7_7_w32_32_3_3_o1_32_7_7_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[4];\n  __shared__ float pad_temp_shared[54];\n  __shared__ float input1_shared[576];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) < 54) {\n      pad_temp_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.x))] = (((((1 <= (((((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) % 27) / 9) + ((int)blockIdx.y))) && ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) % 27) / 9) + ((int)blockIdx.y)) < 8)) && (1 <= (((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) % 9))) && ((((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) % 9) < 8)) ? input0[((((((rc_outer * 98) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) / 27) * 49)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) % 27) / 9) * 7)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) % 9)) - 8)] : 0.000000e+00f);\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 11; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18)) < 32) {\n        if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 9)) < 64) {\n          if (((((int)threadIdx.z) * 24) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 3)) < 192) {\n            if ((((((int)threadIdx.z) * 72) + (((int)threadIdx.x) * 11)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 576) {\n              if (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 72) {\n                input1_shared[(((((int)threadIdx.z) * 72) + (((int)threadIdx.x) * 11)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input1[((((((int)threadIdx.z) * 1152) + ((((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18) * 288)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 18))];\n              }\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {\n      for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n        for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n          compute_local[0] = (compute_local[0] + (pad_temp_shared[((((rc_inner * 27) + (ry_inner * 9)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner)]));\n          compute_local[1] = (compute_local[1] + (pad_temp_shared[((((rc_inner * 27) + (ry_inner * 9)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[(((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 144)]));\n          compute_local[2] = (compute_local[2] + (pad_temp_shared[((((rc_inner * 27) + (ry_inner * 9)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[(((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 288)]));\n          compute_local[3] = (compute_local[3] + (pad_temp_shared[((((rc_inner * 27) + (ry_inner * 9)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[(((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 432)]));\n        }\n      }\n    }\n  }\n  compute[(((((int)threadIdx.z) * 49) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 49) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x)) + 392)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 49) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x)) + 784)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 49) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x)) + 1176)] = compute_local[3];\n}\n\n", "gridDim": [1, 7, 1], "blockDim": [7, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_1024_14_14_w16_1024_1_1_o1_16_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [16, 1024, 1, 1], "output_shape": [1, 16, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_1024_14_14_w16_1024_1_1_o1_16_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[14];\n  __shared__ float pad_temp_shared[392];\n  __shared__ float input1_shared[64];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 392) {\n        if (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 49) {\n          pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((rc_outer * 784) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 98) * 196)) + (((int)blockIdx.y) * 98)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 98))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 16) {\n      if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 64) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 2048) + ((((int)threadIdx.x) >> 2) * 1024)) + (rc_outer * 4)) + (((int)threadIdx.x) & 3))];\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 98) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[7] = (compute_local[7] + (pad_temp_shared[((rc_inner * 98) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 14)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[8] = (compute_local[8] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 14)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[2] = (compute_local[2] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 28)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[9] = (compute_local[9] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 28)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[3] = (compute_local[3] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 42)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[10] = (compute_local[10] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 42)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[4] = (compute_local[4] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[11] = (compute_local[11] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 56)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[5] = (compute_local[5] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 70)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[12] = (compute_local[12] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 70)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n      compute_local[6] = (compute_local[6] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n      compute_local[13] = (compute_local[13] + (pad_temp_shared[(((rc_inner * 98) + ((int)threadIdx.x)) + 84)] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 32)]));\n    }\n  }\n  compute[(((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1568)] = compute_local[7];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1582)] = compute_local[8];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 28)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1596)] = compute_local[9];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 42)] = compute_local[3];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1610)] = compute_local[10];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 56)] = compute_local[4];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1624)] = compute_local[11];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 70)] = compute_local[5];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1638)] = compute_local[12];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 84)] = compute_local[6];\n  compute[((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 98)) + ((int)threadIdx.x)) + 1652)] = compute_local[13];\n}\n\n", "gridDim": [1, 2, 1], "blockDim": [14, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_4_56_56_w4_4_3_3_o1_4_56_56_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 4, 56, 56], "filter_shape": [4, 4, 3, 3], "output_shape": [1, 4, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_4_56_56_w4_4_3_3_o1_4_56_56_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[8];\n  __shared__ float pad_temp_shared[58];\n  __shared__ float input1_shared[12];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) - 57)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((1 <= ((int)blockIdx.y)) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) - 56)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((1 <= ((int)blockIdx.y)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) - 55)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3))];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = ((1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) - 1)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = ((((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) ? input0[(((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3))] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 1)];\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 3)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((((int)blockIdx.y) < 55) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 55)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((((int)blockIdx.y) < 55) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 56)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((((int)blockIdx.y) < 55) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 57)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 6)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3079)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((1 <= ((int)blockIdx.y)) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3080)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((1 <= ((int)blockIdx.y)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3081)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 9)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = ((1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3135)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = ((((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3136)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3137)];\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 12)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((((int)blockIdx.y) < 55) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3191)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((((int)blockIdx.y) < 55) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3192)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((((int)blockIdx.y) < 55) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 3193)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 15)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6215)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((1 <= ((int)blockIdx.y)) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6216)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((1 <= ((int)blockIdx.y)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6217)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 18)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = ((1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6271)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = ((((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6272)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6273)];\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 21)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((((int)blockIdx.y) < 55) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6327)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((((int)blockIdx.y) < 55) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6328)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((((int)blockIdx.y) < 55) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 6329)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 24)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9351)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((1 <= ((int)blockIdx.y)) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9352)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((1 <= ((int)blockIdx.y)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9353)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 27)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = ((1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9407)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = ((((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9408)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9409)];\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 30)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 58) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3))] = (((((int)blockIdx.y) < 55) && (1 <= ((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)))) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9463)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 57) {\n    if (((int)threadIdx.x) < 10) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 1)] = (((((int)blockIdx.y) < 55) && (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56)) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9464)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) < 56) {\n    if (((int)threadIdx.x) < 9) {\n      pad_temp_shared[(((((int)threadIdx.z) * 29) + (((int)threadIdx.x) * 3)) + 2)] = ((((int)blockIdx.y) < 55) ? input0[((((((int)blockIdx.y) * 56) + (((int)threadIdx.z) * 29)) + (((int)threadIdx.x) * 3)) + 9465)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 4) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 12) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 72) + ((((int)threadIdx.x) / 3) * 36)) + (((int)threadIdx.x) % 3)) + 33)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 29)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 43)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 30)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 44)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute[(((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 14)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 28)] = compute_local[4];\n  compute[((((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 42)] = compute_local[6];\n  compute[((((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 3136)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 3150)] = compute_local[3];\n  compute[((((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 3164)] = compute_local[5];\n  compute[((((((int)threadIdx.z) * 6272) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 3178)] = compute_local[7];\n}\n\n", "gridDim": [1, 56, 1], "blockDim": [14, 1, 2]}, {"tvm_func_name": "topi_convolution_op_float_i1_8_28_28_w8_8_3_3_o1_8_28_28_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 8, 28, 28], "filter_shape": [8, 8, 3, 3], "output_shape": [1, 8, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_8_28_28_w8_8_3_3_o1_8_28_28_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[4];\n  __shared__ float pad_temp_shared[30];\n  __shared__ float input1_shared[24];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) - 29)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3))];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) - 1)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 3)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 27)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 6)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 755)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 9)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 783)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 12)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 811)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 15)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 1539)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 18)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 1567)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 21)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 1595)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 24)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 2323)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 27)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 2351)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 30)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 2379)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 33)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 3107)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 36)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 3135)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 39)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 3163)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 42)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 3891)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 45)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 3919)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 48)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 3947)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 51)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 4675)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 54)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 4703)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 57)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 4731)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 60)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 5459)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 63)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 5487)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 66)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 30) {\n    if (((int)threadIdx.x) < 8) {\n      pad_temp_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 27) && (1 <= ((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 29)) ? input0[((((((int)blockIdx.y) * 28) + (((int)threadIdx.z) * 8)) + ((int)threadIdx.x)) + 5515)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 3)) < 8) {\n    if (((((int)threadIdx.z) * 6) + ((int)threadIdx.x)) < 24) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[((((int)threadIdx.z) * 6) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 144) + ((((int)threadIdx.x) / 3) * 72)) + (((int)threadIdx.x) % 3)) + 69)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 15)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute[(((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 784)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 1568) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 798)] = compute_local[3];\n}\n\n", "gridDim": [1, 28, 1], "blockDim": [14, 1, 4]}, {"tvm_func_name": "topi_convolution_op_float_i1_512_28_28_w512_512_1_1_o1_512_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [512, 512, 1, 1], "output_shape": [1, 512, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_512_28_28_w512_512_1_1_o1_512_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[28];\n  __shared__ float pad_temp_shared[392];\n  __shared__ float input1_shared[256];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) < 392) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2))] = input0[((((((rc_outer * 3136) + ((((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) / 98) * 784)) + (((int)blockIdx.y) * 196)) + (((((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) % 98) / 14) * 28)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) % 14))];\n      }\n    }\n    if (((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) < 391) {\n      if (((int)threadIdx.x) < 12) {\n        pad_temp_shared[(((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((rc_outer * 3136) + (((((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) + 1) / 98) * 784)) + (((int)blockIdx.y) * 196)) + ((((((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) + 1) % 98) / 14) * 28)) + (((int)blockIdx.x) * 14)) + ((((((int)threadIdx.z) * 25) + (((int)threadIdx.x) * 2)) + 1) % 14))];\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 1)) < 64) {\n      if (((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) < 256) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((int)threadIdx.x) >> 1) * 512)) + (rc_outer * 4)) + ((((int)threadIdx.x) & 1) * 2))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 2) + 1) >> 2)) < 64) {\n      if (((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) < 255) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 2) + 1) >> 2) * 512)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3))];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 4) + 128)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 4) + 192)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 4) + 129)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 4) + 193)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 130)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 194)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 4) + 131)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 4) + 195)]));\n  }\n  compute[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12544)] = compute_local[7];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25088)] = compute_local[14];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37632)] = compute_local[21];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 28)] = compute_local[1];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12572)] = compute_local[8];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25116)] = compute_local[15];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37660)] = compute_local[22];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 56)] = compute_local[2];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12600)] = compute_local[9];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25144)] = compute_local[16];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37688)] = compute_local[23];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 84)] = compute_local[3];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12628)] = compute_local[10];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25172)] = compute_local[17];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37716)] = compute_local[24];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 112)] = compute_local[4];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12656)] = compute_local[11];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25200)] = compute_local[18];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37744)] = compute_local[25];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 140)] = compute_local[5];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12684)] = compute_local[12];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25228)] = compute_local[19];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37772)] = compute_local[26];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 168)] = compute_local[6];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 12712)] = compute_local[13];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 25256)] = compute_local[20];\n  compute[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 37800)] = compute_local[27];\n}\n\n", "gridDim": [2, 4, 8], "blockDim": [14, 1, 16]}, {"tvm_func_name": "topi_convolution_op_float_i1_256_56_56_w8_256_1_1_o1_8_28_28_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [8, 256, 1, 1], "output_shape": [1, 8, 28, 28], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_256_56_56_w8_256_1_1_o1_8_28_28_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[7];\n  __shared__ float pad_temp_shared[1404];\n  __shared__ float input1_shared[32];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13))] = input0[((((((rc_outer * 12544) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) % 27))];\n    pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 1)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 1) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 1) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 1) % 27))];\n    pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 2)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 2) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 2) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 2) % 27))];\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1401) {\n      pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 3)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 3) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 3) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 3) % 27))];\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1400) {\n      pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 4)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 4) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 4) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 4) % 27))];\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1399) {\n      pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 5)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 5) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 5) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 5) % 27))];\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1398) {\n      pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 6)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 6) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 6) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 6) % 27))];\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1397) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 7)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 7) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 7) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 7) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1396) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 8)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 8) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 8) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 8) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1395) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 9)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 9) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 9) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 9) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1394) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 10)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 10) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 10) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 10) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1393) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 11)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 11) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 11) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 11) % 27))];\n      }\n    }\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) < 1392) {\n      if (((int)threadIdx.x) < 13) {\n        pad_temp_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 12)] = input0[((((((rc_outer * 12544) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 12) / 351) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 12) % 351) / 27) * 56)) + (((int)blockIdx.x) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + 12) % 27))];\n      }\n    }\n    if (((((int)threadIdx.x) >> 2) + ((int)threadIdx.z)) < 8) {\n      if (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 32) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[((((int)threadIdx.z) * 4) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 256) + (rc_outer * 4)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[(((int)threadIdx.z) * 4)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 459)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 513)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 567)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 621)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 675)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 756)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 810)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 864)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 918)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 972)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1026)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1107)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1161)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1215)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1269)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1323)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1377)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  }\n  compute[((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 28)] = compute_local[1];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 56)] = compute_local[2];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 84)] = compute_local[3];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 112)] = compute_local[4];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 140)] = compute_local[5];\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x)) + 168)] = compute_local[6];\n}\n\n", "gridDim": [2, 4, 1], "blockDim": [14, 1, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_2048_7_7_w32_2048_1_1_o1_32_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 2048, 7, 7], "filter_shape": [32, 2048, 1, 1], "output_shape": [1, 32, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_2048_7_7_w32_2048_1_1_o1_32_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[56];\n  __shared__ float pad_temp_shared[196];\n  __shared__ float input1_shared[128];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[28] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[32] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[36] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[40] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[44] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[48] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[52] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[29] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[33] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[37] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[41] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[45] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[49] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[53] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[30] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[34] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[38] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[42] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[46] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[50] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[54] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[31] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[35] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[39] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[43] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[47] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[51] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  compute_local[55] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7))] = input0[(((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 1)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 1)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 2)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 2)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 3)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 3)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 4)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 4)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 5)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 5)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 6)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 6)];\n    input1_shared[((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5))] = input1[((((((int)threadIdx.z) * 16384) + (((((int)threadIdx.x) * 5) / 4) * 2048)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3))];\n    input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)threadIdx.z) * 16384) + ((((((int)threadIdx.x) * 5) + 1) >> 2) * 2048)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 1) & 3))];\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 126) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)threadIdx.z) * 16384) + ((((((int)threadIdx.x) * 5) + 2) >> 2) * 2048)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 2) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 125) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)threadIdx.z) * 16384) + ((((((int)threadIdx.x) * 5) + 3) >> 2) * 2048)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 3) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 4)) < 31) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 124) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 4)] = input1[(((((((int)threadIdx.z) * 16384) + (((((int)threadIdx.x) * 5) / 4) * 2048)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3)) + 2048)];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n  }\n  compute[((((int)threadIdx.z) * 196) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 784)] = compute_local[28];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 7)] = compute_local[4];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 791)] = compute_local[32];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 14)] = compute_local[8];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 798)] = compute_local[36];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 21)] = compute_local[12];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 805)] = compute_local[40];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 28)] = compute_local[16];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 812)] = compute_local[44];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 35)] = compute_local[20];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 819)] = compute_local[48];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 42)] = compute_local[24];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 826)] = compute_local[52];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 49)] = compute_local[1];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 833)] = compute_local[29];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 56)] = compute_local[5];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 840)] = compute_local[33];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 63)] = compute_local[9];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 847)] = compute_local[37];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 70)] = compute_local[13];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 854)] = compute_local[41];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 77)] = compute_local[17];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 861)] = compute_local[45];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 84)] = compute_local[21];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 868)] = compute_local[49];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 91)] = compute_local[25];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 875)] = compute_local[53];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 98)] = compute_local[2];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 882)] = compute_local[30];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 105)] = compute_local[6];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 889)] = compute_local[34];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 112)] = compute_local[10];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 896)] = compute_local[38];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 119)] = compute_local[14];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 903)] = compute_local[42];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 126)] = compute_local[18];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 910)] = compute_local[46];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 133)] = compute_local[22];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 917)] = compute_local[50];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 140)] = compute_local[26];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 924)] = compute_local[54];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 147)] = compute_local[3];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 931)] = compute_local[31];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 154)] = compute_local[7];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 938)] = compute_local[35];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 161)] = compute_local[11];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 945)] = compute_local[39];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 168)] = compute_local[15];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 952)] = compute_local[43];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 175)] = compute_local[19];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 959)] = compute_local[47];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 182)] = compute_local[23];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 966)] = compute_local[51];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 189)] = compute_local[27];\n  compute[(((((int)threadIdx.z) * 196) + ((int)threadIdx.x)) + 973)] = compute_local[55];\n}\n\n", "gridDim": [1, 1, 1], "blockDim": [7, 1, 4]}, {"tvm_func_name": "topi_convolution_op_float_i1_256_56_56_w256_256_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [256, 256, 1, 1], "output_shape": [1, 256, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_256_56_56_w256_256_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[16];\n  __shared__ float pad_temp_shared[448];\n  __shared__ float input1_shared[512];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2))] = input0[((((((rc_outer * 25088) + ((((int)threadIdx.z) >> 1) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.z) & 1) * 56)) + (((int)blockIdx.x) * 28)) + (((int)threadIdx.x) * 2))];\n    pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((rc_outer * 25088) + ((((int)threadIdx.z) >> 1) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.z) & 1) * 56)) + (((int)blockIdx.x) * 28)) + (((int)threadIdx.x) * 2)) + 1)];\n    if (((((int)threadIdx.z) * 4) + ((((int)threadIdx.x) * 3) / 8)) < 64) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3)) < 512) {\n        if (((int)threadIdx.x) < 11) {\n          input1_shared[((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((((int)threadIdx.x) * 3) / 8) * 256)) + (rc_outer * 8)) + ((((int)threadIdx.x) * 3) & 7))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 3) + 1) >> 3)) < 64) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3)) < 511) {\n        if (((int)threadIdx.x) < 11) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3)) + 1)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 3) + 1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 3) + 1) & 7))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 3) + 2) >> 3)) < 64) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3)) < 510) {\n        if (((int)threadIdx.x) < 10) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 3)) + 2)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 3) + 2) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 3) + 2) & 7))];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 8) + 128)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 8) + 256)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 8) + 384)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 8) + 128)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 8) + 256)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 8) + 384)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 8) + 128)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 8) + 256)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 8) + 384)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 8)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 8) + 128)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 8) + 256)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 8) + 384)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 129)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 257)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 385)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 8) + 129)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 8) + 257)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 8) + 385)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 8) + 129)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 8) + 257)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 8) + 385)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 8) + 129)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 8) + 257)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 8) + 385)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 130)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 258)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 386)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 8) + 130)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 8) + 258)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 8) + 386)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 8) + 130)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 8) + 258)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 8) + 386)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 8) + 130)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 8) + 258)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 8) + 386)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 8) + 131)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 8) + 259)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 8) + 387)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 8) + 131)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 8) + 259)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 8) + 387)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 8) + 131)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 8) + 259)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 8) + 387)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 8) + 131)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 8) + 259)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 8) + 387)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 8) + 132)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 8) + 260)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 8) + 388)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 8) + 132)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 8) + 260)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 8) + 388)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 8) + 132)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 8) + 260)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 8) + 388)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 8) + 132)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 8) + 260)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 8) + 388)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 8) + 133)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 8) + 261)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 8) + 389)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 8) + 133)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 8) + 261)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 8) + 389)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 8) + 133)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 8) + 261)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 8) + 389)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 8) + 133)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 8) + 261)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 8) + 389)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 8) + 134)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 8) + 262)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 8) + 390)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 8) + 134)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 8) + 262)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 8) + 390)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 8) + 134)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 8) + 262)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 8) + 390)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 8) + 134)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 8) + 262)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 8) + 390)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 8) + 135)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 8) + 263)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 8) + 391)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 8) + 135)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 8) + 263)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 8) + 391)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 8) + 135)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 8) + 263)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 8) + 391)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 8) + 135)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 8) + 263)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 8) + 391)]));\n  }\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 50176)] = compute_local[4];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 100352)] = compute_local[8];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 150528)] = compute_local[12];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 56)] = compute_local[2];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 50232)] = compute_local[6];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 100408)] = compute_local[10];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 150584)] = compute_local[14];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 50190)] = compute_local[5];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 100366)] = compute_local[9];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 150542)] = compute_local[13];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 70)] = compute_local[3];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 50246)] = compute_local[7];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 100422)] = compute_local[11];\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 150598)] = compute_local[15];\n}\n\n", "gridDim": [2, 28, 4], "blockDim": [14, 1, 16]}, {"tvm_func_name": "topi_convolution_op_float_i1_64_56_56_w256_64_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 64, 56, 56], "filter_shape": [256, 64, 1, 1], "output_shape": [1, 256, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_64_56_56_w256_64_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[32];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[512];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[28] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[30] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[29] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  compute_local[31] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((((rc_outer * 25088) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 7))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3) * 64)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 7))];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n      compute_local[4] = (compute_local[4] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n      compute_local[8] = (compute_local[8] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 128)]));\n      compute_local[12] = (compute_local[12] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 192)]));\n      compute_local[16] = (compute_local[16] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 256)]));\n      compute_local[20] = (compute_local[20] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 320)]));\n      compute_local[24] = (compute_local[24] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 384)]));\n      compute_local[28] = (compute_local[28] + (pad_temp_shared[(((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 448)]));\n      compute_local[2] = (compute_local[2] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n      compute_local[6] = (compute_local[6] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n      compute_local[10] = (compute_local[10] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 128)]));\n      compute_local[14] = (compute_local[14] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 192)]));\n      compute_local[18] = (compute_local[18] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 256)]));\n      compute_local[22] = (compute_local[22] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 320)]));\n      compute_local[26] = (compute_local[26] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 384)]));\n      compute_local[30] = (compute_local[30] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 448)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n      compute_local[5] = (compute_local[5] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n      compute_local[9] = (compute_local[9] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 128)]));\n      compute_local[13] = (compute_local[13] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 192)]));\n      compute_local[17] = (compute_local[17] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 256)]));\n      compute_local[21] = (compute_local[21] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 320)]));\n      compute_local[25] = (compute_local[25] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 384)]));\n      compute_local[29] = (compute_local[29] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 448)]));\n      compute_local[3] = (compute_local[3] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n      compute_local[7] = (compute_local[7] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n      compute_local[11] = (compute_local[11] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 128)]));\n      compute_local[15] = (compute_local[15] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 192)]));\n      compute_local[19] = (compute_local[19] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 256)]));\n      compute_local[23] = (compute_local[23] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 320)]));\n      compute_local[27] = (compute_local[27] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 384)]));\n      compute_local[31] = (compute_local[31] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 448)]));\n    }\n  }\n  compute[((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 25088)] = compute_local[4];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 50176)] = compute_local[8];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 75264)] = compute_local[12];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 100352)] = compute_local[16];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 125440)] = compute_local[20];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 150528)] = compute_local[24];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 175616)] = compute_local[28];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 224)] = compute_local[2];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 25312)] = compute_local[6];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 50400)] = compute_local[10];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 75488)] = compute_local[14];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 100576)] = compute_local[18];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 125664)] = compute_local[22];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 150752)] = compute_local[26];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 175840)] = compute_local[30];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 4)] = compute_local[1];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 25092)] = compute_local[5];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 50180)] = compute_local[9];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 75268)] = compute_local[13];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 100356)] = compute_local[17];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 125444)] = compute_local[21];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 150532)] = compute_local[25];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 175620)] = compute_local[29];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 228)] = compute_local[3];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 25316)] = compute_local[7];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 50404)] = compute_local[11];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 75492)] = compute_local[15];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 100580)] = compute_local[19];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 125668)] = compute_local[23];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 150756)] = compute_local[27];\n  compute[(((((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 175844)] = compute_local[31];\n}\n\n", "gridDim": [7, 7, 4], "blockDim": [4, 4, 8]}, {"tvm_func_name": "topi_convolution_op_float_i1_16_14_14_w16_16_3_3_o1_16_14_14_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 16, 14, 14], "filter_shape": [16, 16, 3, 3], "output_shape": [1, 16, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_16_14_14_w16_16_3_3_o1_16_14_14_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[4];\n  __shared__ float pad_temp_shared[16];\n  __shared__ float input1_shared[48];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 4) {\n        pad_temp_shared[((((int)threadIdx.z) * 4) + ((int)threadIdx.x))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 4) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 15)) ? input0[(((((rc_outer * 196) + (((int)blockIdx.y) * 14)) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) - 15)] : 0.000000e+00f);\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 48) {\n        if (((int)threadIdx.x) < 12) {\n          input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 576) + ((((int)threadIdx.x) / 3) * 144)) + (rc_outer * 9)) + (((int)threadIdx.x) % 3))];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n    __syncthreads();\n    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 4) {\n        pad_temp_shared[((((int)threadIdx.z) * 4) + ((int)threadIdx.x))] = (((1 <= ((((int)threadIdx.z) * 4) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 15)) ? input0[(((((rc_outer * 196) + (((int)blockIdx.y) * 14)) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) - 1)] : 0.000000e+00f);\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 48) {\n        if (((int)threadIdx.x) < 12) {\n          input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.x))] = input1[(((((((int)threadIdx.z) * 576) + ((((int)threadIdx.x) / 3) * 144)) + (rc_outer * 9)) + (((int)threadIdx.x) % 3)) + 3)];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n    __syncthreads();\n    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 4) {\n        pad_temp_shared[((((int)threadIdx.z) * 4) + ((int)threadIdx.x))] = ((((((int)blockIdx.y) < 13) && (1 <= ((((int)threadIdx.z) * 4) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 4) + ((int)threadIdx.x)) < 15)) ? input0[(((((rc_outer * 196) + (((int)blockIdx.y) * 14)) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 13)] : 0.000000e+00f);\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 16) {\n      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 48) {\n        if (((int)threadIdx.x) < 12) {\n          input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.x))] = input1[(((((((int)threadIdx.z) * 576) + ((((int)threadIdx.x) / 3) * 144)) + (rc_outer * 9)) + (((int)threadIdx.x) % 3)) + 6)];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 6)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 2)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  }\n  compute[(((((int)threadIdx.z) * 392) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 392) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x)) + 1568)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 392) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x)) + 196)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 392) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x)) + 1764)] = compute_local[3];\n}\n\n", "gridDim": [1, 14, 1], "blockDim": [14, 1, 4]}, {"tvm_func_name": "topi_convolution_op_float_i1_2048_7_7_w2048_2048_1_1_o1_2048_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 2048, 7, 7], "filter_shape": [2048, 2048, 1, 1], "output_shape": [1, 2048, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_2048_7_7_w2048_2048_1_1_o1_2048_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[56];\n  __shared__ float pad_temp_shared[196];\n  __shared__ float input1_shared[128];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[28] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[32] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[36] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[40] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[44] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[48] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[52] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[29] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[33] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[37] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[41] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[45] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[49] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[53] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[30] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[34] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[38] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[42] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[46] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[50] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[54] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[31] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[35] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[39] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[43] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[47] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[51] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  compute_local[55] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7))] = input0[(((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7))];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 1)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 1)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 2)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 2)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 3)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 3)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 4)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 4)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 5)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 5)];\n    pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 7)) + 6)] = input0[((((rc_outer * 196) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.x) * 7)) + 6)];\n    input1_shared[((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5))] = input1[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + (((((int)threadIdx.x) * 5) / 4) * 2048)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3))];\n    input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 1)] = input1[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + ((((((int)threadIdx.x) * 5) + 1) >> 2) * 2048)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 1) & 3))];\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 126) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 2)] = input1[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + ((((((int)threadIdx.x) * 5) + 2) >> 2) * 2048)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 2) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 125) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 3)] = input1[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + ((((((int)threadIdx.x) * 5) + 3) >> 2) * 2048)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 3) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 4)) < 31) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 124) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + (((((int)threadIdx.x) * 5) / 4) * 2048)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3)) + 2048)];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n  }\n  compute[(((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 784)] = compute_local[28];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 7)] = compute_local[4];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 791)] = compute_local[32];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 14)] = compute_local[8];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 798)] = compute_local[36];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 21)] = compute_local[12];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 805)] = compute_local[40];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 28)] = compute_local[16];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 812)] = compute_local[44];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 35)] = compute_local[20];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 819)] = compute_local[48];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 42)] = compute_local[24];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 826)] = compute_local[52];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 49)] = compute_local[1];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 833)] = compute_local[29];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 56)] = compute_local[5];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 840)] = compute_local[33];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 63)] = compute_local[9];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 847)] = compute_local[37];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 70)] = compute_local[13];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 854)] = compute_local[41];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 77)] = compute_local[17];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 861)] = compute_local[45];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 84)] = compute_local[21];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 868)] = compute_local[49];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 91)] = compute_local[25];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 875)] = compute_local[53];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 98)] = compute_local[2];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 882)] = compute_local[30];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 105)] = compute_local[6];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 889)] = compute_local[34];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 112)] = compute_local[10];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 896)] = compute_local[38];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 119)] = compute_local[14];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 903)] = compute_local[42];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 126)] = compute_local[18];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 910)] = compute_local[46];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 133)] = compute_local[22];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 917)] = compute_local[50];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 140)] = compute_local[26];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 924)] = compute_local[54];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 147)] = compute_local[3];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 931)] = compute_local[31];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 154)] = compute_local[7];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 938)] = compute_local[35];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 161)] = compute_local[11];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 945)] = compute_local[39];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 168)] = compute_local[15];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 952)] = compute_local[43];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 175)] = compute_local[19];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 959)] = compute_local[47];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 182)] = compute_local[23];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 966)] = compute_local[51];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 189)] = compute_local[27];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 973)] = compute_local[55];\n}\n\n", "gridDim": [1, 1, 64], "blockDim": [7, 1, 4]}, {"tvm_func_name": "topi_convolution_op_float_i1_1024_14_14_w2048_1024_1_1_o1_2048_7_7_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [2048, 1024, 1, 1], "output_shape": [1, 2048, 7, 7], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_1024_14_14_w2048_1024_1_1_o1_2048_7_7_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[56];\n  __shared__ float pad_temp_shared[676];\n  __shared__ float input1_shared[128];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[28] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[32] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[36] = 0.000000e+00f;\n  compute_local[12] = 0.000000e+00f;\n  compute_local[40] = 0.000000e+00f;\n  compute_local[16] = 0.000000e+00f;\n  compute_local[44] = 0.000000e+00f;\n  compute_local[20] = 0.000000e+00f;\n  compute_local[48] = 0.000000e+00f;\n  compute_local[24] = 0.000000e+00f;\n  compute_local[52] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[29] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[33] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[37] = 0.000000e+00f;\n  compute_local[13] = 0.000000e+00f;\n  compute_local[41] = 0.000000e+00f;\n  compute_local[17] = 0.000000e+00f;\n  compute_local[45] = 0.000000e+00f;\n  compute_local[21] = 0.000000e+00f;\n  compute_local[49] = 0.000000e+00f;\n  compute_local[25] = 0.000000e+00f;\n  compute_local[53] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[30] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[34] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  compute_local[38] = 0.000000e+00f;\n  compute_local[14] = 0.000000e+00f;\n  compute_local[42] = 0.000000e+00f;\n  compute_local[18] = 0.000000e+00f;\n  compute_local[46] = 0.000000e+00f;\n  compute_local[22] = 0.000000e+00f;\n  compute_local[50] = 0.000000e+00f;\n  compute_local[26] = 0.000000e+00f;\n  compute_local[54] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[31] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[35] = 0.000000e+00f;\n  compute_local[11] = 0.000000e+00f;\n  compute_local[39] = 0.000000e+00f;\n  compute_local[15] = 0.000000e+00f;\n  compute_local[43] = 0.000000e+00f;\n  compute_local[19] = 0.000000e+00f;\n  compute_local[47] = 0.000000e+00f;\n  compute_local[23] = 0.000000e+00f;\n  compute_local[51] = 0.000000e+00f;\n  compute_local[27] = 0.000000e+00f;\n  compute_local[55] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25))] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + (((((int)threadIdx.x) * 25) / 13) * 14)) + ((((int)threadIdx.x) * 25) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 1)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 1) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 2)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 2) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 3)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 3) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 4)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 4) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 5)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 5) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 5) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 6)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 6) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 6) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 7)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 7) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 7) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 8)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 8) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 8) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 9)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 9) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 9) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 10)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 10) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 10) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 11)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 11) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 11) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 12)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 12) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 12) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 13)] = input0[(((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + (((((int)threadIdx.x) * 25) / 13) * 14)) + ((((int)threadIdx.x) * 25) % 13)) + 14)];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 14)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 14) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 15)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 15) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 16)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 16) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 17)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 17) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 18)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 18) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 5) % 13))];\n    if (((((((int)threadIdx.x) * 25) + 19) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 19) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 657) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 19)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 19) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 6) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 20) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 20) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 656) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 20)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 20) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 7) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 21) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 21) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 655) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 21)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 21) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 8) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 22) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 22) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 654) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 22)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 22) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 9) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 23) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 23) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 653) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 23)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 23) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 10) % 13))];\n          }\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 25) + 24) / 169) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 13) + (((((int)threadIdx.x) * 25) + 24) / 13)) < 52) {\n        if (((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) < 652) {\n          if (((int)threadIdx.x) < 6) {\n            pad_temp_shared[(((((int)threadIdx.z) * 169) + (((int)threadIdx.x) * 25)) + 24)] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 196)) + ((((((int)threadIdx.x) * 25) + 24) / 13) * 14)) + (((((int)threadIdx.x) * 25) + 11) % 13))];\n          }\n        }\n      }\n    }\n    input1_shared[((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5))] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 8192)) + (((((int)threadIdx.x) * 5) / 4) * 1024)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3))];\n    input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 1)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 8192)) + ((((((int)threadIdx.x) * 5) + 1) >> 2) * 1024)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 1) & 3))];\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 126) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 2)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 8192)) + ((((((int)threadIdx.x) * 5) + 2) >> 2) * 1024)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 2) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 2)) < 32) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 125) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 3)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 8192)) + ((((((int)threadIdx.x) * 5) + 3) >> 2) * 1024)) + (rc_outer * 4)) + (((((int)threadIdx.x) * 5) + 3) & 3))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 4)) < 31) {\n      if (((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) < 124) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 8192)) + (((((int)threadIdx.x) * 5) / 4) * 1024)) + (rc_outer * 4)) + ((((int)threadIdx.x) * 5) & 3)) + 1024)];\n        }\n      }\n    }\n    __syncthreads();\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 64)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 68)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 72)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 16) + 76)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 65)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 69)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 73)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 16) + 77)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 66)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 70)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 74)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 16) + 78)]));\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[28] = (compute_local[28] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[32] = (compute_local[32] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[36] = (compute_local[36] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[12] = (compute_local[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[40] = (compute_local[40] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[16] = (compute_local[16] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[44] = (compute_local[44] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[20] = (compute_local[20] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[48] = (compute_local[48] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[24] = (compute_local[24] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute_local[52] = (compute_local[52] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 67)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[29] = (compute_local[29] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[33] = (compute_local[33] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[37] = (compute_local[37] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[13] = (compute_local[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[41] = (compute_local[41] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[17] = (compute_local[17] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[45] = (compute_local[45] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[21] = (compute_local[21] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[49] = (compute_local[49] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[25] = (compute_local[25] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute_local[53] = (compute_local[53] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 71)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[30] = (compute_local[30] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[34] = (compute_local[34] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[38] = (compute_local[38] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[14] = (compute_local[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[42] = (compute_local[42] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[18] = (compute_local[18] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[46] = (compute_local[46] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[22] = (compute_local[22] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[50] = (compute_local[50] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[26] = (compute_local[26] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute_local[54] = (compute_local[54] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 75)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[31] = (compute_local[31] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[35] = (compute_local[35] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[11] = (compute_local[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[39] = (compute_local[39] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[15] = (compute_local[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[43] = (compute_local[43] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[19] = (compute_local[19] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[47] = (compute_local[47] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[23] = (compute_local[23] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[51] = (compute_local[51] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n    compute_local[27] = (compute_local[27] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute_local[55] = (compute_local[55] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 16) + 79)]));\n  }\n  compute[(((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 784)] = compute_local[28];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 7)] = compute_local[4];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 791)] = compute_local[32];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 14)] = compute_local[8];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 798)] = compute_local[36];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 21)] = compute_local[12];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 805)] = compute_local[40];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 28)] = compute_local[16];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 812)] = compute_local[44];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 35)] = compute_local[20];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 819)] = compute_local[48];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 42)] = compute_local[24];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 826)] = compute_local[52];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 49)] = compute_local[1];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 833)] = compute_local[29];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 56)] = compute_local[5];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 840)] = compute_local[33];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 63)] = compute_local[9];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 847)] = compute_local[37];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 70)] = compute_local[13];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 854)] = compute_local[41];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 77)] = compute_local[17];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 861)] = compute_local[45];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 84)] = compute_local[21];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 868)] = compute_local[49];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 91)] = compute_local[25];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 875)] = compute_local[53];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 98)] = compute_local[2];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 882)] = compute_local[30];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 105)] = compute_local[6];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 889)] = compute_local[34];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 112)] = compute_local[10];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 896)] = compute_local[38];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 119)] = compute_local[14];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 903)] = compute_local[42];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 126)] = compute_local[18];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 910)] = compute_local[46];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 133)] = compute_local[22];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 917)] = compute_local[50];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 140)] = compute_local[26];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 924)] = compute_local[54];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 147)] = compute_local[3];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 931)] = compute_local[31];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 154)] = compute_local[7];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 938)] = compute_local[35];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 161)] = compute_local[11];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 945)] = compute_local[39];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 168)] = compute_local[15];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 952)] = compute_local[43];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 175)] = compute_local[19];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 959)] = compute_local[47];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 182)] = compute_local[23];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 966)] = compute_local[51];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 189)] = compute_local[27];\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + ((int)threadIdx.x)) + 973)] = compute_local[55];\n}\n\n", "gridDim": [1, 1, 64], "blockDim": [7, 1, 4]}, {"tvm_func_name": "topi_convolution_op_float_i1_64_56_56_w4_64_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 64, 56, 56], "filter_shape": [4, 64, 1, 1], "output_shape": [1, 4, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void topi_convolution_op_float_i1_64_56_56_w4_64_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[4];\n  __shared__ float pad_temp_shared[448];\n  __shared__ float input1_shared[16];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112))];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112))];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3))];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 12544)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 12544)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 12544)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 12544)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 4)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 25088)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 25088)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 25088)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 25088)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 8)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 37632)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 37632)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 37632)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 37632)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 12)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 50176)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 50176)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 50176)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 50176)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 16)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 62720)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 62720)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 62720)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 62720)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 20)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 75264)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 75264)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 75264)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 75264)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 24)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 87808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 87808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 87808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 87808)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 28)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 100352)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 32)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 112896)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 112896)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 112896)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 112896)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 36)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 125440)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 125440)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 125440)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 125440)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 40)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 137984)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 137984)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 137984)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 137984)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 44)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 150528)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 150528)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 150528)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 150528)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 48)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 163072)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 163072)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 163072)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 163072)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 52)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 175616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 175616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 175616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 175616)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 56)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4))] = input0[(((((((int)threadIdx.z) * 6272) + ((((int)threadIdx.x) / 28) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) % 28) * 4)) + 188160)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 1) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 1) % 112)) + 188160)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 2) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 2) % 112)) + 188160)];\n  pad_temp_shared[(((((int)threadIdx.z) * 224) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((((int)threadIdx.z) * 6272) + ((((((int)threadIdx.x) * 4) + 3) / 112) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.x) * 4) + 3) % 112)) + 188160)];\n  if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 4) {\n    if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 16) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 60)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 4) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 4) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 4) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 4) + 11)]));\n  compute[(((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 6272)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 6328)] = compute_local[3];\n}\n\n", "gridDim": [1, 28, 1], "blockDim": [56, 1, 2]}]