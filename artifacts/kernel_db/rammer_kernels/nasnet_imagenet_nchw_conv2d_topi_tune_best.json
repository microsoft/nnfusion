[{"tvm_func_name": "tuned_fused_convolution_op_float_i1_88_14_14_w88_88_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 88, 14, 14], "filter_shape": [88, 88, 1, 1], "output_shape": [1, 88, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_88_14_14_w88_88_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[242];\n  compute_local[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 56) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 4312) + (((int)threadIdx.z) * 392)) + (((int)threadIdx.y) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    if (((((((int)threadIdx.y) * 11) + ((int)threadIdx.x)) / 22) + ((int)threadIdx.z)) < 11) {\n      if ((((((int)threadIdx.z) * 22) + (((int)threadIdx.y) * 11)) + ((int)threadIdx.x)) < 242) {\n        if (((((int)threadIdx.y) * 11) + ((int)threadIdx.x)) < 22) {\n          if (((int)threadIdx.x) < 11) {\n            input1_shared[(((((int)threadIdx.z) * 22) + (((int)threadIdx.y) * 11)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 968) + (((int)threadIdx.z) * 88)) + (rc_outer * 22)) + (((int)threadIdx.y) * 11)) + ((int)threadIdx.x))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 22; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[(((rc_inner * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 22) + rc_inner)]));\n    }\n  }\n  compute[(((((((int)blockIdx.z) * 2156) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 7, 8], "blockDim": [14, 2, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_3_224_224_w32_3_3_3_o1_32_111_111_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 3, 224, 224], "filter_shape": [32, 3, 3, 3], "output_shape": [1, 32, 111, 111], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_3_224_224_w32_3_3_3_o1_32_111_111_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[16];\n  __shared__ float pad_temp_shared[223];\n  __shared__ float input1_shared[48];\n  #pragma unroll\n  for (int ff_c_init = 0; ff_c_init < 2; ++ff_c_init) {\n    compute_local[ff_c_init] = 0.000000e+00f;\n    compute_local[(ff_c_init + 2)] = 0.000000e+00f;\n    compute_local[(ff_c_init + 4)] = 0.000000e+00f;\n    compute_local[(ff_c_init + 6)] = 0.000000e+00f;\n    compute_local[(ff_c_init + 8)] = 0.000000e+00f;\n    compute_local[(ff_c_init + 10)] = 0.000000e+00f;\n    compute_local[(ff_c_init + 12)] = 0.000000e+00f;\n    compute_local[(ff_c_init + 14)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {\n    #pragma unroll\n    for (int ry_outer = 0; ry_outer < 3; ++ry_outer) {\n      __syncthreads();\n      #pragma unroll\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 223) {\n          pad_temp_shared[((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 50176) + (((int)blockIdx.y) * 448)) + (ry_outer * 224)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n        }\n      }\n      if (((int)threadIdx.x) < 48) {\n        input1_shared[((int)threadIdx.x)] = input1[(((((((int)blockIdx.z) * 432) + ((((int)threadIdx.x) / 3) * 27)) + (rc_outer * 9)) + (ry_outer * 3)) + (((int)threadIdx.x) % 3))];\n      }\n      __syncthreads();\n      #pragma unroll\n      for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n        #pragma unroll\n        for (int ff_c = 0; ff_c < 2; ++ff_c) {\n          compute_local[ff_c] = (compute_local[ff_c] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[((ff_c * 3) + rx_inner)]));\n          compute_local[(ff_c + 2)] = (compute_local[(ff_c + 2)] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[(((ff_c * 3) + rx_inner) + 6)]));\n          compute_local[(ff_c + 4)] = (compute_local[(ff_c + 4)] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[(((ff_c * 3) + rx_inner) + 12)]));\n          compute_local[(ff_c + 6)] = (compute_local[(ff_c + 6)] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[(((ff_c * 3) + rx_inner) + 18)]));\n          compute_local[(ff_c + 8)] = (compute_local[(ff_c + 8)] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[(((ff_c * 3) + rx_inner) + 24)]));\n          compute_local[(ff_c + 10)] = (compute_local[(ff_c + 10)] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[(((ff_c * 3) + rx_inner) + 30)]));\n          compute_local[(ff_c + 12)] = (compute_local[(ff_c + 12)] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[(((ff_c * 3) + rx_inner) + 36)]));\n          compute_local[(ff_c + 14)] = (compute_local[(ff_c + 14)] + (pad_temp_shared[((((int)threadIdx.x) * 2) + rx_inner)] * input1_shared[(((ff_c * 3) + rx_inner) + 42)]));\n        }\n      }\n    }\n  }\n  #pragma unroll\n  for (int ff_inner_inner_inner = 0; ff_inner_inner_inner < 2; ++ff_inner_inner_inner) {\n    compute[((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x))] = compute_local[ff_inner_inner_inner];\n    compute[(((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x)) + 24642)] = compute_local[(ff_inner_inner_inner + 2)];\n    compute[(((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x)) + 49284)] = compute_local[(ff_inner_inner_inner + 4)];\n    compute[(((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x)) + 73926)] = compute_local[(ff_inner_inner_inner + 6)];\n    compute[(((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x)) + 98568)] = compute_local[(ff_inner_inner_inner + 8)];\n    compute[(((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x)) + 123210)] = compute_local[(ff_inner_inner_inner + 10)];\n    compute[(((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x)) + 147852)] = compute_local[(ff_inner_inner_inner + 12)];\n    compute[(((((((int)blockIdx.z) * 197136) + (ff_inner_inner_inner * 12321)) + (((int)blockIdx.y) * 111)) + ((int)threadIdx.x)) + 172494)] = compute_local[(ff_inner_inner_inner + 14)];\n  }\n}\n\n", "gridDim": [1, 111, 2], "blockDim": [111, 1, 1]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_44_28_28_w44_44_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 44, 28, 28], "filter_shape": [44, 44, 1, 1], "output_shape": [1, 44, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_44_28_28_w44_44_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[2];\n  __shared__ float pad_temp_shared[308];\n  __shared__ float input1_shared[242];\n  for (int ff_c_init = 0; ff_c_init < 2; ++ff_c_init) {\n    compute_local[ff_c_init] = 0.000000e+00f;\n  }\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 28) + ((int)threadIdx.x))] = input0[((((rc_outer * 8624) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))];\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 11)) < 22) {\n      if (((((int)threadIdx.z) * 22) + ((int)threadIdx.x)) < 242) {\n        if (((int)threadIdx.x) < 22) {\n          input1_shared[((((int)threadIdx.z) * 22) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 968) + (((int)threadIdx.z) * 88)) + ((((int)threadIdx.x) / 11) * 44)) + (rc_outer * 11)) + (((int)threadIdx.x) % 11))];\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 11; ++rc_inner) {\n      for (int ff_c = 0; ff_c < 2; ++ff_c) {\n        compute_local[ff_c] = (compute_local[ff_c] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 22) + (ff_c * 11)) + rc_inner)]));\n      }\n    }\n  }\n  for (int ff_inner_inner_inner = 0; ff_inner_inner_inner < 2; ++ff_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 1568)) + (ff_inner_inner_inner * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[ff_inner_inner_inner];\n  }\n}\n\n", "gridDim": [1, 28, 2], "blockDim": [28, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_32_111_111_w11_32_1_1_o1_11_111_111_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 32, 111, 111], "filter_shape": [11, 32, 1, 1], "output_shape": [1, 11, 111, 111], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_32_111_111_w11_32_1_1_o1_11_111_111_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[11];\n  __shared__ float pad_temp_shared[222];\n  __shared__ float input1_shared[22];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  compute_local[7] = 0.000000e+00f;\n  compute_local[8] = 0.000000e+00f;\n  compute_local[9] = 0.000000e+00f;\n  compute_local[10] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37))];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37))];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1))];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 24642)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 24642)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 2)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 49284)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 49284)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 4)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 73926)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 73926)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 6)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 98568)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 98568)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 8)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 123210)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 123210)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 10)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 147852)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 147852)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 12)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 172494)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 172494)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 14)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 197136)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 197136)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 16)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 221778)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 221778)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 18)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 246420)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 246420)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 20)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 271062)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 271062)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 22)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 295704)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 295704)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 24)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 320346)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 320346)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 26)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 344988)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 344988)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 28)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2))] = input0[(((((((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + ((((int)threadIdx.x) * 2) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + ((((int)threadIdx.x) * 2) % 37)) + 369630)];\n  pad_temp_shared[(((((int)threadIdx.y) * 74) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) / 3) * 12321) + (((int)blockIdx.y) * 333)) + ((((((int)threadIdx.y) * 2) + (((((int)threadIdx.x) * 2) + 1) / 37)) % 3) * 111)) + (((int)blockIdx.x) * 37)) + (((((int)threadIdx.x) * 2) + 1) % 37)) + 369630)];\n  if (((((int)threadIdx.y) * 4) + (((int)threadIdx.x) >> 1)) < 11) {\n    if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 22) {\n      if (((int)threadIdx.x) < 8) {\n        input1_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.y) * 128) + ((((int)threadIdx.x) >> 1) * 32)) + (((int)threadIdx.x) & 1)) + 30)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[0]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[2]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[4]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[6]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[8]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[10]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[12]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[14]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[16]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[18]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[((((int)threadIdx.y) * 37) + ((int)threadIdx.x))] * input1_shared[20]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[1]));\n  compute_local[1] = (compute_local[1] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[3]));\n  compute_local[2] = (compute_local[2] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[5]));\n  compute_local[3] = (compute_local[3] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[7]));\n  compute_local[4] = (compute_local[4] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[9]));\n  compute_local[5] = (compute_local[5] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[11]));\n  compute_local[6] = (compute_local[6] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[13]));\n  compute_local[7] = (compute_local[7] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[15]));\n  compute_local[8] = (compute_local[8] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[17]));\n  compute_local[9] = (compute_local[9] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[19]));\n  compute_local[10] = (compute_local[10] + (pad_temp_shared[(((((int)threadIdx.y) * 37) + ((int)threadIdx.x)) + 111)] * input1_shared[21]));\n  compute[((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 12321)] = compute_local[1];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 24642)] = compute_local[2];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 36963)] = compute_local[3];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 49284)] = compute_local[4];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 61605)] = compute_local[5];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 73926)] = compute_local[6];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 86247)] = compute_local[7];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 98568)] = compute_local[8];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 110889)] = compute_local[9];\n  compute[(((((((int)blockIdx.y) * 333) + (((int)threadIdx.y) * 111)) + (((int)blockIdx.x) * 37)) + ((int)threadIdx.x)) + 123210)] = compute_local[10];\n}\n\n", "gridDim": [3, 37, 1], "blockDim": [37, 3, 1]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_1056_7_7_w176_1056_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 1056, 7, 7], "filter_shape": [176, 1056, 1, 1], "output_shape": [1, 176, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_1056_7_7_w176_1056_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[112];\n  __shared__ float input1_shared[256];\n  compute_local[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 66; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.x))] = input0[((((rc_outer * 784) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))];\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if (((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4) + ((int)threadIdx.z)) < 16) {\n        if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 256) {\n          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 16) {\n            input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input1[(((((((int)blockIdx.z) * 16896) + (((int)threadIdx.z) * 1056)) + (rc_outer * 16)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 7) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 7, 11], "blockDim": [7, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_264_28_28_w88_264_1_1_o1_88_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 264, 28, 28], "filter_shape": [88, 264, 1, 1], "output_shape": [1, 88, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_264_28_28_w88_264_1_1_o1_88_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[2];\n  __shared__ float pad_temp_shared[924];\n  __shared__ float input1_shared[726];\n  #pragma unroll\n  for (int ff_c_init = 0; ff_c_init < 2; ++ff_c_init) {\n    compute_local[ff_c_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 25872) + (((int)threadIdx.z) * 2352)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 33)) < 22) {\n        if ((((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 726) {\n          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 66) {\n            input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 33) * 264)) + (rc_outer * 33)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 33))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 33; ++rc_inner) {\n      #pragma unroll\n      for (int ff_c = 0; ff_c < 2; ++ff_c) {\n        compute_local[ff_c] = (compute_local[ff_c] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 66) + (ff_c * 33)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int ff_inner_inner_inner = 0; ff_inner_inner_inner < 2; ++ff_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 1568)) + (ff_inner_inner_inner * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[ff_inner_inner_inner];\n  }\n}\n\n", "gridDim": [1, 28, 4], "blockDim": [28, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_44_56_56_w22_44_1_1_o1_22_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 44, 56, 56], "filter_shape": [22, 44, 1, 1], "output_shape": [1, 22, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_44_56_56_w22_44_1_1_o1_22_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[4];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[242];\n  #pragma unroll\n  for (int ff_c_init = 0; ff_c_init < 2; ++ff_c_init) {\n    compute_local[ff_c_init] = 0.000000e+00f;\n    compute_local[(ff_c_init + 2)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 34496) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 11)) < 22) {\n      if (((((int)threadIdx.z) * 22) + ((int)threadIdx.x)) < 242) {\n        if (((int)threadIdx.x) < 22) {\n          input1_shared[((((int)threadIdx.z) * 22) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 88) + ((((int)threadIdx.x) / 11) * 44)) + (rc_outer * 11)) + (((int)threadIdx.x) % 11))];\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 11; ++rc_inner) {\n      #pragma unroll\n      for (int ff_c = 0; ff_c < 2; ++ff_c) {\n        compute_local[ff_c] = (compute_local[ff_c] + (pad_temp_shared[((rc_inner * 56) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 22) + (ff_c * 11)) + rc_inner)]));\n        compute_local[(ff_c + 2)] = (compute_local[(ff_c + 2)] + (pad_temp_shared[(((rc_inner * 56) + ((int)threadIdx.x)) + 28)] * input1_shared[(((((int)threadIdx.z) * 22) + (ff_c * 11)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int ff_inner_inner_inner = 0; ff_inner_inner_inner < 2; ++ff_inner_inner_inner) {\n    compute[((((((int)threadIdx.z) * 6272) + (ff_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x))] = compute_local[ff_inner_inner_inner];\n    compute[(((((((int)threadIdx.z) * 6272) + (ff_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 28)] = compute_local[(ff_inner_inner_inner + 2)];\n  }\n}\n\n", "gridDim": [1, 56, 1], "blockDim": [28, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_11_56_56_w11_11_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 11, 56, 56], "filter_shape": [11, 11, 1, 1], "output_shape": [1, 11, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_11_56_56_w11_11_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[7];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[121];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  compute_local[2] = 0.000000e+00f;\n  compute_local[3] = 0.000000e+00f;\n  compute_local[4] = 0.000000e+00f;\n  compute_local[5] = 0.000000e+00f;\n  compute_local[6] = 0.000000e+00f;\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n    pad_temp_shared[(((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n    if (((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 11) + ((int)threadIdx.z)) < 11) {\n      if ((((((int)threadIdx.z) * 11) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 121) {\n        if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 11) {\n          input1_shared[(((((int)threadIdx.z) * 11) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((int)threadIdx.z) * 11) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  #pragma unroll\n  for (int rc_inner = 0; rc_inner < 11; ++rc_inner) {\n    compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 56) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n    compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 56) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n    compute_local[2] = (compute_local[2] + (pad_temp_shared[(((rc_inner * 56) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n    compute_local[3] = (compute_local[3] + (pad_temp_shared[(((rc_inner * 56) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n    compute_local[4] = (compute_local[4] + (pad_temp_shared[(((rc_inner * 56) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n    compute_local[5] = (compute_local[5] + (pad_temp_shared[(((rc_inner * 56) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n    compute_local[6] = (compute_local[6] + (pad_temp_shared[(((rc_inner * 56) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n  }\n  compute[(((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 8)] = compute_local[1];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 16)] = compute_local[2];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 24)] = compute_local[3];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 32)] = compute_local[4];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 40)] = compute_local[5];\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 48)] = compute_local[6];\n}\n\n", "gridDim": [1, 56, 1], "blockDim": [8, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_264_14_14_w44_264_1_1_o1_44_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 264, 14, 14], "filter_shape": [44, 264, 1, 1], "output_shape": [1, 44, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_264_14_14_w44_264_1_1_o1_44_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[924];\n  __shared__ float input1_shared[726];\n  compute_local[0] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6))] = input0[((((((int)threadIdx.z) * 1176) + (((((int)threadIdx.x) * 6) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 6) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 1)] = input0[((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 1) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 2)] = input0[((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 2) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 3)] = input0[((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 3) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 4)] = input0[((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 4) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 5)] = input0[((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 5) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 5) % 14))];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[(((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5))];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 725) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 1)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 724) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 2)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 723) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 3)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 722) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 4)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6))] = input0[(((((((int)threadIdx.z) * 1176) + (((((int)threadIdx.x) * 6) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 6) % 14)) + 12936)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 1)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 1) % 14)) + 12936)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 2)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 2) % 14)) + 12936)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 3)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 3) % 14)) + 12936)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 4)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 4) % 14)) + 12936)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 5)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 5) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 5) % 14)) + 12936)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 66)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 725) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 67)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 724) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 68)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 723) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 69)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 722) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 70)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6))] = input0[(((((((int)threadIdx.z) * 1176) + (((((int)threadIdx.x) * 6) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 6) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 1)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 1) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 2)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 2) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 3)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 3) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 4)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 4) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 5)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 5) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 5) % 14)) + 25872)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 132)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 725) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 133)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 724) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 134)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 723) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 135)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 722) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 136)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6))] = input0[(((((((int)threadIdx.z) * 1176) + (((((int)threadIdx.x) * 6) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 6) % 14)) + 38808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 1)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 1) % 14)) + 38808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 2)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 2) % 14)) + 38808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 3)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 3) % 14)) + 38808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 4)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 4) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 4) % 14)) + 38808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 84) + (((int)threadIdx.x) * 6)) + 5)] = input0[(((((((int)threadIdx.z) * 1176) + ((((((int)threadIdx.x) * 6) + 5) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 6) + 5) % 14)) + 38808)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 198)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 725) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 199)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 724) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 200)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 723) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 201)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 11) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 722) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 2904) + (((int)threadIdx.z) * 264)) + (((int)threadIdx.x) * 5)) + 202)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  compute[((((((int)blockIdx.z) * 2156) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 14, 4], "blockDim": [14, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_32_56_56_w11_32_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 32, 56, 56], "filter_shape": [11, 32, 1, 1], "output_shape": [1, 11, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_32_56_56_w11_32_1_1_o1_11_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[2];\n  __shared__ float pad_temp_shared[128];\n  __shared__ float input1_shared[88];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if ((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 128) {\n        if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 12) {\n          pad_temp_shared[(((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 25088) + (((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + ((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 7))];\n        }\n      }\n    }\n    input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 32) + (rc_outer * 8)) + ((int)threadIdx.x))];\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 16) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 16) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n    }\n  }\n  compute[((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 56)] = compute_local[1];\n}\n\n", "gridDim": [7, 28, 1], "blockDim": [8, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_264_28_28_w44_264_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 264, 28, 28], "filter_shape": [44, 264, 1, 1], "output_shape": [1, 44, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_264_28_28_w44_264_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[2];\n  __shared__ float pad_temp_shared[1848];\n  __shared__ float input1_shared[1452];\n  #pragma unroll\n  for (int ff_c_init = 0; ff_c_init < 2; ++ff_c_init) {\n    compute_local[ff_c_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 168) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 51744) + (((int)threadIdx.z) * 4704)) + ((((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 66)) < 22) {\n        if ((((((int)threadIdx.z) * 132) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 1452) {\n          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 132) {\n            input1_shared[(((((int)threadIdx.z) * 132) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 66) * 264)) + (rc_outer * 66)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 66))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 66; ++rc_inner) {\n      #pragma unroll\n      for (int ff_c = 0; ff_c < 2; ++ff_c) {\n        compute_local[ff_c] = (compute_local[ff_c] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 132) + (ff_c * 66)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int ff_inner_inner_inner = 0; ff_inner_inner_inner < 2; ++ff_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 1568)) + (ff_inner_inner_inner * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[ff_inner_inner_inner];\n  }\n}\n\n", "gridDim": [1, 28, 2], "blockDim": [28, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_528_14_14_w88_528_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 528, 14, 14], "filter_shape": [88, 528, 1, 1], "output_shape": [1, 88, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_528_14_14_w88_528_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[924];\n  __shared__ float input1_shared[1452];\n  compute_local[0] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14))];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14))];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[(((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5))];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 1)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 2)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 3)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 4)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[(((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14)) + 12936)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14)) + 12936)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14)) + 12936)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 66)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 67)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 68)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 69)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 70)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[(((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14)) + 25872)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14)) + 25872)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 132)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 133)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 134)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 135)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 136)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[(((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14)) + 38808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14)) + 38808)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14)) + 38808)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 198)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 199)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 200)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 201)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 202)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[(((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14)) + 51744)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14)) + 51744)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14)) + 51744)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 264)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 265)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 266)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 267)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 268)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[(((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14)) + 64680)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14)) + 64680)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14)) + 64680)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 330)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 331)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 332)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 333)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 334)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[(((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14)) + 77616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14)) + 77616)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14)) + 77616)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 396)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 397)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 398)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 399)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 400)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3))] = input0[(((((((int)threadIdx.z) * 588) + (((((int)threadIdx.x) * 3) / 14) * 196)) + (((int)blockIdx.y) * 14)) + ((((int)threadIdx.x) * 3) % 14)) + 90552)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 1)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 1) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 1) % 14)) + 90552)];\n  pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + 2)] = input0[(((((((int)threadIdx.z) * 588) + ((((((int)threadIdx.x) * 3) + 2) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 3) + 2) % 14)) + 90552)];\n  input1_shared[((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5))] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 462)];\n  if (((((((int)threadIdx.x) * 5) + 1) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1451) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 1)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 463)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 2) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1450) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 2)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 464)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 3) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1449) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 3)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 465)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 5) + 4) / 66) + ((int)threadIdx.z)) < 22) {\n    if (((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) < 1448) {\n      if (((int)threadIdx.x) < 13) {\n        input1_shared[(((((int)threadIdx.z) * 66) + (((int)threadIdx.x) * 5)) + 4)] = input1[((((((int)blockIdx.z) * 11616) + (((int)threadIdx.z) * 528)) + (((int)threadIdx.x) * 5)) + 466)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 66) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 66) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 66) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 66) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 66) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 66) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 66) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 66) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 66) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 66) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 66) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 66) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 66) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 66) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 66) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 66) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 66) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 66) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 66) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 66) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 66) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 66) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 66) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 66) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 66) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 66) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 66) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 66) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 66) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 66) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 66) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 66) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 66) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 66) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 66) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 66) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 66) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 66) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 66) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 66) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 66) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 66) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 66) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 66) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 66) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 66) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 66) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 66) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 66) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 66) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 66) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 66) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 66) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 66) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 66) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 66) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 66) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 66) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 66) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 66) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 66) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 66) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 66) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 66) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 66) + 65)]));\n  compute[((((((int)blockIdx.z) * 4312) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 14, 4], "blockDim": [14, 1, 22]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_352_14_14_w88_352_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 352, 14, 14], "filter_shape": [88, 352, 1, 1], "output_shape": [1, 88, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_352_14_14_w88_352_1_1_o1_88_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[224];\n  __shared__ float input1_shared[128];\n  compute_local[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 22; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 3136) + (((int)threadIdx.z) * 392)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14) * 196)) + (((int)blockIdx.y) * 14)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 14))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) + ((int)threadIdx.z)) < 8) {\n        if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 16) {\n            input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 352)) + (rc_outer * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 14) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 14, 11], "blockDim": [14, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_528_14_14_w176_528_1_1_o1_176_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 528, 14, 14], "filter_shape": [176, 528, 1, 1], "output_shape": [1, 176, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_528_14_14_w176_528_1_1_o1_176_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[2];\n  __shared__ float pad_temp_shared[672];\n  __shared__ float input1_shared[384];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 22; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 4704) + ((((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14)) >> 1) * 196)) + (((int)blockIdx.y) * 28)) + ((((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14)) & 1) * 14)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 14))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 24) + ((int)threadIdx.z)) < 16) {\n        if ((((((int)threadIdx.z) * 24) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 384) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 24) {\n            input1_shared[(((((int)threadIdx.z) * 24) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 8448) + (((int)threadIdx.z) * 528)) + (rc_outer * 24)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 24; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 24) + rc_inner)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 28) + ((int)threadIdx.x)) + 14)] * input1_shared[((((int)threadIdx.z) * 24) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n}\n\n", "gridDim": [1, 7, 11], "blockDim": [14, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_44_28_28_w22_44_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 44, 28, 28], "filter_shape": [22, 44, 1, 1], "output_shape": [1, 22, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_44_28_28_w22_44_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[242];\n  compute_local[0] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 2; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 17248) + (((int)threadIdx.z) * 1568)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n    }\n    if (((((int)threadIdx.x) / 22) + ((int)threadIdx.z)) < 11) {\n      if (((((int)threadIdx.z) * 22) + ((int)threadIdx.x)) < 242) {\n        if (((int)threadIdx.x) < 22) {\n          input1_shared[((((int)threadIdx.z) * 22) + ((int)threadIdx.x))] = input1[((((((int)blockIdx.z) * 484) + (((int)threadIdx.z) * 44)) + (rc_outer * 22)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 22; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 22) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 8624) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 28, 2], "blockDim": [28, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_176_7_7_w176_176_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 176, 7, 7], "filter_shape": [176, 176, 1, 1], "output_shape": [1, 176, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_176_7_7_w176_176_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[1232];\n  __shared__ float input1_shared[2816];\n  compute_local[0] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11))] = input0[((((((int)threadIdx.z) * 539) + (((((int)threadIdx.x) * 11) / 7) * 49)) + (((int)blockIdx.y) * 7)) + ((((int)threadIdx.x) * 11) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 1)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 1) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 1) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 2)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 2) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 2) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 3)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 3) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 3) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 4)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 4) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 4) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 5)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 5) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 5) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 6)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 6) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 6) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 7)] = input0[(((((((int)threadIdx.z) * 539) + (((((int)threadIdx.x) * 11) / 7) * 49)) + (((int)blockIdx.y) * 7)) + ((((int)threadIdx.x) * 11) % 7)) + 49)];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 8)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 8) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 1) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 9)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 9) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 2) % 7))];\n  pad_temp_shared[(((((int)threadIdx.z) * 77) + (((int)threadIdx.x) * 11)) + 10)] = input0[((((((int)threadIdx.z) * 539) + ((((((int)threadIdx.x) * 11) + 10) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 11) + 3) % 7))];\n  input1_shared[((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26))] = input1[(((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26))];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 1)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 1)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 2)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 2)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 3)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 3)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 4)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 4)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 5)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 5)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 6)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 6)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 7)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 7)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 8)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 8)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 9)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 9)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 10)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 10)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 11)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 11)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 12)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 12)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 13)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 13)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 14)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 14)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 15)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 15)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 16)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 16)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 17)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 17)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 18)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 18)];\n  input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 19)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 19)];\n  if (((((((int)threadIdx.x) * 26) + 20) / 176) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 2796) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 20)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 20)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 26) + 21) / 176) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 2795) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 21)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 21)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 26) + 22) / 176) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 2794) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 22)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 22)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 26) + 23) / 176) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 2793) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 23)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 23)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 26) + 24) / 176) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 2792) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 24)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 24)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 26) + 25) / 176) + ((int)threadIdx.z)) < 16) {\n    if (((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) < 2791) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 26)) + 25)] = input1[((((((int)blockIdx.z) * 2816) + (((int)threadIdx.z) * 176)) + (((int)threadIdx.x) * 26)) + 25)];\n      }\n    }\n  }\n  __syncthreads();\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 176)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 7)] * input1_shared[((((int)threadIdx.z) * 176) + 1)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 14)] * input1_shared[((((int)threadIdx.z) * 176) + 2)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 21)] * input1_shared[((((int)threadIdx.z) * 176) + 3)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 176) + 4)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 35)] * input1_shared[((((int)threadIdx.z) * 176) + 5)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 42)] * input1_shared[((((int)threadIdx.z) * 176) + 6)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 49)] * input1_shared[((((int)threadIdx.z) * 176) + 7)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 176) + 8)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 63)] * input1_shared[((((int)threadIdx.z) * 176) + 9)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 70)] * input1_shared[((((int)threadIdx.z) * 176) + 10)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 77)] * input1_shared[((((int)threadIdx.z) * 176) + 11)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 176) + 12)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 91)] * input1_shared[((((int)threadIdx.z) * 176) + 13)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 98)] * input1_shared[((((int)threadIdx.z) * 176) + 14)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 105)] * input1_shared[((((int)threadIdx.z) * 176) + 15)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 176) + 16)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 119)] * input1_shared[((((int)threadIdx.z) * 176) + 17)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 126)] * input1_shared[((((int)threadIdx.z) * 176) + 18)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 133)] * input1_shared[((((int)threadIdx.z) * 176) + 19)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 176) + 20)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 147)] * input1_shared[((((int)threadIdx.z) * 176) + 21)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 154)] * input1_shared[((((int)threadIdx.z) * 176) + 22)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 161)] * input1_shared[((((int)threadIdx.z) * 176) + 23)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 176) + 24)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 175)] * input1_shared[((((int)threadIdx.z) * 176) + 25)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 182)] * input1_shared[((((int)threadIdx.z) * 176) + 26)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 189)] * input1_shared[((((int)threadIdx.z) * 176) + 27)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 176) + 28)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 203)] * input1_shared[((((int)threadIdx.z) * 176) + 29)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 210)] * input1_shared[((((int)threadIdx.z) * 176) + 30)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 217)] * input1_shared[((((int)threadIdx.z) * 176) + 31)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 176) + 32)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 231)] * input1_shared[((((int)threadIdx.z) * 176) + 33)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 238)] * input1_shared[((((int)threadIdx.z) * 176) + 34)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 245)] * input1_shared[((((int)threadIdx.z) * 176) + 35)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 176) + 36)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 259)] * input1_shared[((((int)threadIdx.z) * 176) + 37)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 266)] * input1_shared[((((int)threadIdx.z) * 176) + 38)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 273)] * input1_shared[((((int)threadIdx.z) * 176) + 39)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 176) + 40)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 287)] * input1_shared[((((int)threadIdx.z) * 176) + 41)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 294)] * input1_shared[((((int)threadIdx.z) * 176) + 42)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 301)] * input1_shared[((((int)threadIdx.z) * 176) + 43)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 176) + 44)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 315)] * input1_shared[((((int)threadIdx.z) * 176) + 45)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 322)] * input1_shared[((((int)threadIdx.z) * 176) + 46)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 329)] * input1_shared[((((int)threadIdx.z) * 176) + 47)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 176) + 48)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 343)] * input1_shared[((((int)threadIdx.z) * 176) + 49)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 350)] * input1_shared[((((int)threadIdx.z) * 176) + 50)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 357)] * input1_shared[((((int)threadIdx.z) * 176) + 51)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 176) + 52)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 371)] * input1_shared[((((int)threadIdx.z) * 176) + 53)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 378)] * input1_shared[((((int)threadIdx.z) * 176) + 54)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 385)] * input1_shared[((((int)threadIdx.z) * 176) + 55)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 176) + 56)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 399)] * input1_shared[((((int)threadIdx.z) * 176) + 57)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 406)] * input1_shared[((((int)threadIdx.z) * 176) + 58)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 413)] * input1_shared[((((int)threadIdx.z) * 176) + 59)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 176) + 60)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 427)] * input1_shared[((((int)threadIdx.z) * 176) + 61)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 434)] * input1_shared[((((int)threadIdx.z) * 176) + 62)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 441)] * input1_shared[((((int)threadIdx.z) * 176) + 63)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 176) + 64)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 455)] * input1_shared[((((int)threadIdx.z) * 176) + 65)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 462)] * input1_shared[((((int)threadIdx.z) * 176) + 66)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 469)] * input1_shared[((((int)threadIdx.z) * 176) + 67)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 176) + 68)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 483)] * input1_shared[((((int)threadIdx.z) * 176) + 69)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 490)] * input1_shared[((((int)threadIdx.z) * 176) + 70)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 497)] * input1_shared[((((int)threadIdx.z) * 176) + 71)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 176) + 72)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 511)] * input1_shared[((((int)threadIdx.z) * 176) + 73)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 518)] * input1_shared[((((int)threadIdx.z) * 176) + 74)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 525)] * input1_shared[((((int)threadIdx.z) * 176) + 75)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 176) + 76)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 539)] * input1_shared[((((int)threadIdx.z) * 176) + 77)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 546)] * input1_shared[((((int)threadIdx.z) * 176) + 78)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 553)] * input1_shared[((((int)threadIdx.z) * 176) + 79)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 176) + 80)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 567)] * input1_shared[((((int)threadIdx.z) * 176) + 81)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 574)] * input1_shared[((((int)threadIdx.z) * 176) + 82)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 581)] * input1_shared[((((int)threadIdx.z) * 176) + 83)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 176) + 84)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 595)] * input1_shared[((((int)threadIdx.z) * 176) + 85)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 602)] * input1_shared[((((int)threadIdx.z) * 176) + 86)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 609)] * input1_shared[((((int)threadIdx.z) * 176) + 87)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 176) + 88)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 623)] * input1_shared[((((int)threadIdx.z) * 176) + 89)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 630)] * input1_shared[((((int)threadIdx.z) * 176) + 90)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 637)] * input1_shared[((((int)threadIdx.z) * 176) + 91)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 176) + 92)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 651)] * input1_shared[((((int)threadIdx.z) * 176) + 93)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 658)] * input1_shared[((((int)threadIdx.z) * 176) + 94)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 665)] * input1_shared[((((int)threadIdx.z) * 176) + 95)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 176) + 96)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 679)] * input1_shared[((((int)threadIdx.z) * 176) + 97)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 686)] * input1_shared[((((int)threadIdx.z) * 176) + 98)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 693)] * input1_shared[((((int)threadIdx.z) * 176) + 99)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 176) + 100)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 707)] * input1_shared[((((int)threadIdx.z) * 176) + 101)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 714)] * input1_shared[((((int)threadIdx.z) * 176) + 102)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 721)] * input1_shared[((((int)threadIdx.z) * 176) + 103)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 176) + 104)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 735)] * input1_shared[((((int)threadIdx.z) * 176) + 105)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 742)] * input1_shared[((((int)threadIdx.z) * 176) + 106)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 749)] * input1_shared[((((int)threadIdx.z) * 176) + 107)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 176) + 108)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 763)] * input1_shared[((((int)threadIdx.z) * 176) + 109)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 770)] * input1_shared[((((int)threadIdx.z) * 176) + 110)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 777)] * input1_shared[((((int)threadIdx.z) * 176) + 111)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 176) + 112)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 791)] * input1_shared[((((int)threadIdx.z) * 176) + 113)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 798)] * input1_shared[((((int)threadIdx.z) * 176) + 114)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 805)] * input1_shared[((((int)threadIdx.z) * 176) + 115)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 176) + 116)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 819)] * input1_shared[((((int)threadIdx.z) * 176) + 117)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 826)] * input1_shared[((((int)threadIdx.z) * 176) + 118)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 833)] * input1_shared[((((int)threadIdx.z) * 176) + 119)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 176) + 120)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 847)] * input1_shared[((((int)threadIdx.z) * 176) + 121)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 854)] * input1_shared[((((int)threadIdx.z) * 176) + 122)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 861)] * input1_shared[((((int)threadIdx.z) * 176) + 123)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 176) + 124)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 875)] * input1_shared[((((int)threadIdx.z) * 176) + 125)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 882)] * input1_shared[((((int)threadIdx.z) * 176) + 126)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 889)] * input1_shared[((((int)threadIdx.z) * 176) + 127)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 176) + 128)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 903)] * input1_shared[((((int)threadIdx.z) * 176) + 129)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 910)] * input1_shared[((((int)threadIdx.z) * 176) + 130)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 917)] * input1_shared[((((int)threadIdx.z) * 176) + 131)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 924)] * input1_shared[((((int)threadIdx.z) * 176) + 132)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 931)] * input1_shared[((((int)threadIdx.z) * 176) + 133)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 938)] * input1_shared[((((int)threadIdx.z) * 176) + 134)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 945)] * input1_shared[((((int)threadIdx.z) * 176) + 135)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 952)] * input1_shared[((((int)threadIdx.z) * 176) + 136)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 959)] * input1_shared[((((int)threadIdx.z) * 176) + 137)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 966)] * input1_shared[((((int)threadIdx.z) * 176) + 138)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 973)] * input1_shared[((((int)threadIdx.z) * 176) + 139)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 980)] * input1_shared[((((int)threadIdx.z) * 176) + 140)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 987)] * input1_shared[((((int)threadIdx.z) * 176) + 141)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 994)] * input1_shared[((((int)threadIdx.z) * 176) + 142)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1001)] * input1_shared[((((int)threadIdx.z) * 176) + 143)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 176) + 144)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1015)] * input1_shared[((((int)threadIdx.z) * 176) + 145)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1022)] * input1_shared[((((int)threadIdx.z) * 176) + 146)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1029)] * input1_shared[((((int)threadIdx.z) * 176) + 147)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1036)] * input1_shared[((((int)threadIdx.z) * 176) + 148)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1043)] * input1_shared[((((int)threadIdx.z) * 176) + 149)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1050)] * input1_shared[((((int)threadIdx.z) * 176) + 150)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1057)] * input1_shared[((((int)threadIdx.z) * 176) + 151)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1064)] * input1_shared[((((int)threadIdx.z) * 176) + 152)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1071)] * input1_shared[((((int)threadIdx.z) * 176) + 153)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1078)] * input1_shared[((((int)threadIdx.z) * 176) + 154)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1085)] * input1_shared[((((int)threadIdx.z) * 176) + 155)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1092)] * input1_shared[((((int)threadIdx.z) * 176) + 156)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1099)] * input1_shared[((((int)threadIdx.z) * 176) + 157)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1106)] * input1_shared[((((int)threadIdx.z) * 176) + 158)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1113)] * input1_shared[((((int)threadIdx.z) * 176) + 159)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1120)] * input1_shared[((((int)threadIdx.z) * 176) + 160)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1127)] * input1_shared[((((int)threadIdx.z) * 176) + 161)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1134)] * input1_shared[((((int)threadIdx.z) * 176) + 162)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1141)] * input1_shared[((((int)threadIdx.z) * 176) + 163)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1148)] * input1_shared[((((int)threadIdx.z) * 176) + 164)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1155)] * input1_shared[((((int)threadIdx.z) * 176) + 165)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1162)] * input1_shared[((((int)threadIdx.z) * 176) + 166)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1169)] * input1_shared[((((int)threadIdx.z) * 176) + 167)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1176)] * input1_shared[((((int)threadIdx.z) * 176) + 168)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1183)] * input1_shared[((((int)threadIdx.z) * 176) + 169)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1190)] * input1_shared[((((int)threadIdx.z) * 176) + 170)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1197)] * input1_shared[((((int)threadIdx.z) * 176) + 171)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1204)] * input1_shared[((((int)threadIdx.z) * 176) + 172)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1211)] * input1_shared[((((int)threadIdx.z) * 176) + 173)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1218)] * input1_shared[((((int)threadIdx.z) * 176) + 174)]));\n  compute_local[0] = (compute_local[0] + (pad_temp_shared[(((int)threadIdx.x) + 1225)] * input1_shared[((((int)threadIdx.z) * 176) + 175)]));\n  compute[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 7, 11], "blockDim": [7, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_528_7_7_w88_528_1_1_o1_88_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 528, 7, 7], "filter_shape": [88, 528, 1, 1], "output_shape": [1, 88, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_528_7_7_w88_528_1_1_o1_88_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[154];\n  __shared__ float input1_shared[242];\n  compute_local[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 24; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 14) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 1078) + (((int)threadIdx.z) * 98)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 7))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 22) + ((int)threadIdx.z)) < 11) {\n        if ((((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 242) {\n          if (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 22) {\n            input1_shared[(((((int)threadIdx.z) * 22) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 5808) + (((int)threadIdx.z) * 528)) + (rc_outer * 22)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 22; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 7) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 22) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 539) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 7, 8], "blockDim": [7, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_88_28_28_w44_88_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 88, 28, 28], "filter_shape": [44, 88, 1, 1], "output_shape": [1, 44, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_88_28_28_w44_88_1_1_o1_44_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[2];\n  __shared__ float pad_temp_shared[616];\n  __shared__ float input1_shared[484];\n  for (int ff_c_init = 0; ff_c_init < 2; ++ff_c_init) {\n    compute_local[ff_c_init] = 0.000000e+00f;\n  }\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 17248) + (((int)threadIdx.z) * 1568)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 784)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 22)) < 22) {\n        if ((((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 484) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 44) {\n            input1_shared[(((((int)threadIdx.z) * 44) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 1936) + (((int)threadIdx.z) * 176)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 22) * 88)) + (rc_outer * 22)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 22))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 22; ++rc_inner) {\n      for (int ff_c = 0; ff_c < 2; ++ff_c) {\n        compute_local[ff_c] = (compute_local[ff_c] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 44) + (ff_c * 22)) + rc_inner)]));\n      }\n    }\n  }\n  for (int ff_inner_inner_inner = 0; ff_inner_inner_inner < 2; ++ff_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 17248) + (((int)threadIdx.z) * 1568)) + (ff_inner_inner_inner * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[ff_inner_inner_inner];\n  }\n}\n\n", "gridDim": [1, 28, 2], "blockDim": [28, 1, 11]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_704_7_7_w176_704_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 704, 7, 7], "filter_shape": [176, 704, 1, 1], "output_shape": [1, 176, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_704_7_7_w176_704_1_1_o1_176_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[1];\n  __shared__ float pad_temp_shared[224];\n  __shared__ float input1_shared[512];\n  compute_local[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 22; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 14) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 1568) + (((int)threadIdx.z) * 98)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 7) * 49)) + (((int)blockIdx.y) * 7)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 7))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 5) + ((int)threadIdx.z)) < 16) {\n        if ((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 512) {\n          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 32) {\n            input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 11264) + (((int)threadIdx.z) * 704)) + (rc_outer * 32)) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 32; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 7) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = compute_local[0];\n}\n\n", "gridDim": [1, 7, 11], "blockDim": [7, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_op_float_i1_22_28_28_w22_22_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Convolution", "parameters": {"input_shape": [1, 22, 28, 28], "filter_shape": [22, 22, 1, 1], "output_shape": [1, 22, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_op_float_i1_22_28_28_w22_22_1_1_o1_22_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute_local[2];\n  __shared__ float pad_temp_shared[308];\n  __shared__ float input1_shared[121];\n  compute_local[0] = 0.000000e+00f;\n  compute_local[1] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 2; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 8624) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    if (((((int)threadIdx.x) / 11) + ((int)threadIdx.z)) < 11) {\n      if (((((int)threadIdx.z) * 11) + ((int)threadIdx.x)) < 121) {\n        if (((int)threadIdx.x) < 11) {\n          input1_shared[((((int)threadIdx.z) * 11) + ((int)threadIdx.x))] = input1[((((((int)blockIdx.z) * 242) + (((int)threadIdx.z) * 22)) + (rc_outer * 11)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 11; ++rc_inner) {\n      compute_local[0] = (compute_local[0] + (pad_temp_shared[((rc_inner * 28) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n      compute_local[1] = (compute_local[1] + (pad_temp_shared[(((rc_inner * 28) + ((int)threadIdx.x)) + 14)] * input1_shared[((((int)threadIdx.z) * 11) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 8624) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = compute_local[0];\n  compute[(((((((int)blockIdx.z) * 8624) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14)] = compute_local[1];\n}\n\n", "gridDim": [1, 28, 2], "blockDim": [14, 1, 11]}]