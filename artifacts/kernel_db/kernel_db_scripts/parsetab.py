
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ID INTEGER FLOAT STRING CHAR WS COMMENT1 COMMENT2 POUND DPOUND TYPE GLOBAL FOR SHARED IF VOID SYNC QUALIFIER ELSEfunction : signature '{' shared_buffer statements '}'signature : GLOBAL VOID ID '(' parameters ')'parameters : parameter\n                  | parameters ',' parameter\n    parameter : type ID\n                 | type QUALIFIER ID\n                 | QUALIFIER type ID\n    type : TYPE \n            | TYPE '*'\n    shared_buffer : shared\n                     | shared_buffer shared\n                     | normal\n    shared : SHARED TYPE ID '[' INTEGER ']' ';' statements : statement\n                  | statements statement\n    statement : sync\n                 | for_loop_static\n                 | normal\n    for_loop_static : FOR '(' assign compare increase ')' '{' statements '}'\n       assign   : TYPE ID '=' INTEGER ';'\n       compare  : ID '<' INTEGER ';'\n       increase : '+' '+' ID\n                | ID '+' '+'\n    sync : SYNC '(' ')' ';' normal : ';'\n               | '{' normal '}'\n    "
    
_lr_action_items = {'GLOBAL':([0,],[3,]),'$end':([1,25,],[0,-1,]),'{':([2,4,6,7,8,9,11,14,15,16,17,18,19,24,26,39,45,59,64,65,70,71,],[4,6,6,6,-10,-12,-25,6,-11,-14,-16,-17,-18,-26,-15,-2,-24,65,-13,6,6,-19,]),'VOID':([3,],[5,]),'SHARED':([4,7,8,9,11,15,24,64,],[10,10,-10,-12,-25,-11,-26,-13,]),';':([4,6,7,8,9,11,14,15,16,17,18,19,24,26,35,45,58,62,63,64,65,70,71,],[11,11,11,-10,-12,-25,11,-11,-14,-16,-17,-18,-26,-15,45,-24,64,68,69,-13,11,11,-19,]),'ID':([5,22,32,34,36,37,42,43,44,46,60,68,69,],[12,29,41,-8,47,48,51,52,-9,55,66,-21,-20,]),'SYNC':([7,8,9,11,14,15,16,17,18,19,24,26,45,64,65,70,71,],[20,-10,-12,-25,20,-11,-14,-16,-17,-18,-26,-15,-24,-13,20,20,-19,]),'FOR':([7,8,9,11,14,15,16,17,18,19,24,26,45,64,65,70,71,],[21,-10,-12,-25,21,-11,-14,-16,-17,-18,-26,-15,-24,-13,21,21,-19,]),'TYPE':([10,23,28,33,40,],[22,34,37,34,34,]),'}':([11,13,14,16,17,18,19,24,26,45,70,71,],[-25,24,25,-14,-16,-17,-18,-26,-15,-24,71,-19,]),'(':([12,20,21,],[23,27,28,]),'QUALIFIER':([23,32,34,40,44,],[33,42,-8,33,-9,]),')':([27,30,31,41,50,51,52,53,66,67,],[35,39,-3,-5,-4,-6,-7,59,-22,-23,]),'[':([29,],[38,]),',':([30,31,41,50,51,52,],[40,-3,-5,-4,-6,-7,]),'*':([34,],[44,]),'INTEGER':([38,56,57,],[49,62,63,]),'+':([46,54,55,61,68,],[54,60,61,67,-21,]),'<':([47,],[56,]),'=':([48,],[57,]),']':([49,],[58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[1,]),'signature':([0,],[2,]),'shared_buffer':([4,],[7,]),'shared':([4,7,],[8,15,]),'normal':([4,6,7,14,65,70,],[9,13,19,19,19,19,]),'statements':([7,65,],[14,70,]),'statement':([7,14,65,70,],[16,26,16,26,]),'sync':([7,14,65,70,],[17,17,17,17,]),'for_loop_static':([7,14,65,70,],[18,18,18,18,]),'parameters':([23,],[30,]),'parameter':([23,40,],[31,50,]),'type':([23,33,40,],[32,43,32,]),'assign':([28,],[36,]),'compare':([36,],[46,]),'increase':([46,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> function","S'",1,None,None,None),
  ('function -> signature { shared_buffer statements }','function',5,'p_functon','cuparse.py',141),
  ('signature -> GLOBAL VOID ID ( parameters )','signature',6,'p_signature','cuparse.py',147),
  ('parameters -> parameter','parameters',1,'p_parameters','cuparse.py',152),
  ('parameters -> parameters , parameter','parameters',3,'p_parameters','cuparse.py',153),
  ('parameter -> type ID','parameter',2,'p_parameter','cuparse.py',158),
  ('parameter -> type QUALIFIER ID','parameter',3,'p_parameter','cuparse.py',159),
  ('parameter -> QUALIFIER type ID','parameter',3,'p_parameter','cuparse.py',160),
  ('type -> TYPE','type',1,'p_type','cuparse.py',170),
  ('type -> TYPE *','type',2,'p_type','cuparse.py',171),
  ('shared_buffer -> shared','shared_buffer',1,'p_shared_buffer','cuparse.py',177),
  ('shared_buffer -> shared_buffer shared','shared_buffer',2,'p_shared_buffer','cuparse.py',178),
  ('shared_buffer -> normal','shared_buffer',1,'p_shared_buffer','cuparse.py',179),
  ('shared -> SHARED TYPE ID [ INTEGER ] ;','shared',7,'p_shared','cuparse.py',184),
  ('statements -> statement','statements',1,'p_statements','cuparse.py',192),
  ('statements -> statements statement','statements',2,'p_statements','cuparse.py',193),
  ('statement -> sync','statement',1,'p_statement','cuparse.py',199),
  ('statement -> for_loop_static','statement',1,'p_statement','cuparse.py',200),
  ('statement -> normal','statement',1,'p_statement','cuparse.py',201),
  ('for_loop_static -> FOR ( assign compare increase ) { statements }','for_loop_static',9,'p_for_loop_static','cuparse.py',207),
  ('assign -> TYPE ID = INTEGER ;','assign',5,'p_for_loop_static','cuparse.py',208),
  ('compare -> ID < INTEGER ;','compare',4,'p_for_loop_static','cuparse.py',209),
  ('increase -> + + ID','increase',3,'p_for_loop_static','cuparse.py',210),
  ('increase -> ID + +','increase',3,'p_for_loop_static','cuparse.py',211),
  ('sync -> SYNC ( ) ;','sync',4,'p_sync','cuparse.py',224),
  ('normal -> ;','normal',1,'p_normal','cuparse.py',229),
  ('normal -> { normal }','normal',3,'p_normal','cuparse.py',230),
]
