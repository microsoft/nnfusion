[{"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_3_32_32_w64_3_3_3_o1_64_32_32_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 3, 32, 32], "filter_shape": [64, 3, 3, 3], "output_shape": [1, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_3_32_32_w64_3_3_3_o1_64_32_32_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[192];\n  __shared__ float input1_shared[48];\n  compute1[0] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = (((1 <= (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31)) && (1 <= ((int)blockIdx.x))) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) - 33)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = ((1 <= (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31)) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) - 32)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[(((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9))];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = ((1 <= (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31)) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) - 32)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = ((1 <= (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31)) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) - 31)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 1)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = ((1 <= (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31)) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) - 31)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = (((1 <= (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31)) && (((int)blockIdx.x) < 15)) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) - 30)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 2)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = ((1 <= ((int)blockIdx.x)) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) - 1)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = input0[(((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2))];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 3)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = input0[(((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2))];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 1)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 4)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 1)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = ((((int)blockIdx.x) < 15) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 2)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 5)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = ((((((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31) < 31) && (1 <= ((int)blockIdx.x))) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 31)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = (((((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31) < 31) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 32)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 6)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = (((((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31) < 31) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 32)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = (((((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31) < 31) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 33)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 7)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  __syncthreads();\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 192) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2))] = (((((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31) < 31) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 33)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) < 96) {\n    if (((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) < 191) {\n      if (((int)threadIdx.y) < 24) {\n        pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 2)) + 1)] = ((((((((int)threadIdx.z) * 24) + ((int)threadIdx.y)) & 31) < 31) && (((int)blockIdx.x) < 15)) ? input0[((((((int)threadIdx.z) * 768) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 34)] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 4) + (((int)threadIdx.y) / 3)) < 16) {\n    if (((((int)threadIdx.z) * 12) + ((int)threadIdx.y)) < 48) {\n      if (((int)threadIdx.y) < 12) {\n        input1_shared[((((int)threadIdx.z) * 12) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) * 432) + (((int)threadIdx.z) * 108)) + (((int)threadIdx.y) * 9)) + 8)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 6)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 24)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.y) * 2)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 3)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 6) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 1)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 25)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 4)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 6) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 2)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 26)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 5)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.y) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 6) + 29)]));\n  compute[((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2))] = max((compute1[0] + input2[((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2))]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 8192)] = max((compute1[4] + input2[(((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2)) + 8)]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 1)] = max((compute1[1] + input2[((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2))]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 8193)] = max((compute1[5] + input2[(((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2)) + 8)]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 1024)] = max((compute1[2] + input2[(((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2)) + 1)]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 9216)] = max((compute1[6] + input2[(((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2)) + 9)]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 1025)] = max((compute1[3] + input2[(((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2)) + 1)]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 2)) + 9217)] = max((compute1[7] + input2[(((((int)blockIdx.z) * 16) + (((int)threadIdx.z) * 2)) + 9)]), 0.000000e+00f);\n}\n\n", "gridDim": [16, 1, 4], "blockDim": [1, 32, 4]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_1024_8_8_w256_1024_1_1_o1_256_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 1024, 8, 8], "filter_shape": [256, 1024, 1, 1], "output_shape": [1, 256, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_1024_8_8_w256_1024_1_1_o1_256_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 32; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 16) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + rc_inner)]));\n    }\n  }\n  compute[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [1, 4, 16], "blockDim": [8, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_128_16_16_w64_128_1_1_o1_64_8_8_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 128, 16, 16], "filter_shape": [64, 128, 1, 1], "output_shape": [1, 64, 8, 8], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_128_16_16_w64_128_1_1_o1_64_8_8_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[56];\n  __shared__ float input1_shared[16];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 2048) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 128)) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner * 16)) + (((int)blockIdx.x) * 2))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 128)) + (rc_outer * 8)) + (((int)threadIdx.y) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 7) + (((int)threadIdx.y) * 2))] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n    }\n  }\n  compute[(((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 8)) + ((int)blockIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 2) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [8, 2, 32], "blockDim": [1, 4, 2]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_64_16_16_w64_64_3_3_o1_64_16_16_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 64, 16, 16], "filter_shape": [64, 64, 3, 3], "output_shape": [1, 64, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_64_16_16_w64_64_3_3_o1_64_16_16_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[640];\n  __shared__ float input1_shared[576];\n  compute1[0] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 10; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 160) + (((int)threadIdx.y) * 80)) + (((int)threadIdx.x) * 10)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= ((((int)blockIdx.y) * 2) + (((int)threadIdx.x) & 3))) && (((((int)blockIdx.y) * 2) + (((int)threadIdx.x) & 3)) < 17)) && (1 <= ((((int)blockIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))) && (((((int)blockIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 17)) ? input0[(((((((((rc_outer * 4096) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 512)) + ((((int)threadIdx.x) >> 2) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) & 3) * 16)) + (((int)blockIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) - 17)] : 0.000000e+00f);\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.y) * 72)) + (((int)threadIdx.x) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 2304) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.y) * 72)) + (((int)threadIdx.x) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      #pragma unroll\n      for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n        #pragma unroll\n        for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n          compute1[0] = (compute1[0] + (pad_temp_shared[(((((rc_inner * 40) + (((int)threadIdx.y) * 10)) + (ry_inner * 10)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner)]));\n        }\n      }\n    }\n  }\n  compute[((((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 4) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [2, 8, 16], "blockDim": [8, 2, 4]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_64_8_8_w64_64_3_3_o1_64_8_8_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 64, 8, 8], "filter_shape": [64, 64, 3, 3], "output_shape": [1, 64, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_64_8_8_w64_64_3_3_o1_64_8_8_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[3840];\n  __shared__ float input1_shared[1152];\n  compute1[0] = 0.000000e+00f;\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 60; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n    pad_temp_shared[((((((int)threadIdx.z) * 1920) + (((int)threadIdx.y) * 240)) + (((int)threadIdx.x) * 60)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((6 <= ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) && (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 54)) && (1 <= ((((int)blockIdx.x) * 4) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner % 6)))) && (((((int)blockIdx.x) * 4) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner % 6)) < 9)) ? input0[(((((((((int)threadIdx.z) * 2048) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 64)) + ((ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner / 6) * 8)) + (((int)blockIdx.x) * 4)) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner % 6)) - 9)] : 0.000000e+00f);\n  }\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 18; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n    input1_shared[((((((int)threadIdx.z) * 576) + (((int)threadIdx.y) * 72)) + (((int)threadIdx.x) * 18)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 576)) + (((int)threadIdx.y) * 72)) + (((int)threadIdx.x) * 18)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n  }\n  __syncthreads();\n  for (int rc_inner = 0; rc_inner < 64; ++rc_inner) {\n    for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n      for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n        compute1[0] = (compute1[0] + (pad_temp_shared[(((((rc_inner * 60) + (((int)threadIdx.y) * 6)) + (ry_inner * 6)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 576) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner)]));\n      }\n    }\n  }\n  compute[(((((((int)blockIdx.z) * 128) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 2) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [2, 1, 32], "blockDim": [4, 8, 2]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_64_32_32_w64_64_1_1_o1_64_16_16_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 64, 32, 32], "filter_shape": [64, 64, 1, 1], "output_shape": [1, 64, 16, 16], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_64_32_32_w64_64_1_1_o1_64_16_16_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[180];\n  __shared__ float input1_shared[256];\n  for (int yy_init = 0; yy_init < 2; ++yy_init) {\n    compute1[yy_init] = 0.000000e+00f;\n    compute1[(yy_init + 2)] = 0.000000e+00f;\n  }\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) / 3)) < 60) {\n      if ((((((int)threadIdx.z) * 6) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x)) < 180) {\n        if (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) < 6) {\n          pad_temp_shared[(((((int)threadIdx.z) * 6) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x))] = input0[((((((rc_outer * 4096) + ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) / 3)) / 15) * 1024)) + (((int)blockIdx.y) * 512)) + ((((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) / 3)) % 15) * 32)) + (((int)blockIdx.x) * 4)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) % 3))];\n        }\n      }\n    }\n    input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 128) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) >> 2) * 64)) + (rc_outer * 4)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) & 3))];\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 4; ++rc_inner) {\n      for (int yy = 0; yy < 2; ++yy) {\n        compute1[yy] = (compute1[yy] + (pad_temp_shared[((((rc_inner * 45) + (((int)threadIdx.y) * 12)) + (yy * 6)) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 4) + rc_inner)]));\n        compute1[(yy + 2)] = (compute1[(yy + 2)] + (pad_temp_shared[((((rc_inner * 45) + (((int)threadIdx.y) * 12)) + (yy * 6)) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 4) + rc_inner) + 128)]));\n      }\n    }\n  }\n  for (int i2_inner_inner_inner = 0; i2_inner_inner_inner < 2; ++i2_inner_inner_inner) {\n    compute[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 32)) + (i2_inner_inner_inner * 16)) + (((int)blockIdx.x) * 2)) + ((int)threadIdx.x))] = max((compute1[i2_inner_inner_inner] + input2[((int)threadIdx.z)]), 0.000000e+00f);\n    compute[(((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 32)) + (i2_inner_inner_inner * 16)) + (((int)blockIdx.x) * 2)) + ((int)threadIdx.x)) + 8192)] = max((compute1[(i2_inner_inner_inner + 2)] + input2[(((int)threadIdx.z) + 32)]), 0.000000e+00f);\n  }\n}\n\n", "gridDim": [8, 2, 1], "blockDim": [2, 4, 32]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_1024_16_16_w128_1024_1_1_o1_128_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 1024, 16, 16], "filter_shape": [128, 1024, 1, 1], "output_shape": [1, 128, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_1024_16_16_w128_1024_1_1_o1_128_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[1024];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 8192)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 8193)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 32)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 16384)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 16385)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 64)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 24576)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 24577)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 96)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 32768)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 32769)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 128)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 40960)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 40961)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 160)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 49152)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 49153)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 192)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 57344)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 57345)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 224)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 65536)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 65537)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 256)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 73728)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 73729)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 288)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 81920)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 81921)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 320)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 90112)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 90113)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 352)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 98304)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 98305)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 384)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 106496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 106497)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 416)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 114688)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 114689)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 448)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 122880)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 122881)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 480)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 131072)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 131073)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 512)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 139264)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 139265)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 544)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 147456)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 147457)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 576)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 155648)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 155649)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 608)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 163840)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 163841)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 640)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 172032)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 172033)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 672)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 180224)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 180225)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 704)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 188416)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 188417)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 736)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 196608)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 196609)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 768)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 204800)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 204801)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 800)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 212992)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 212993)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 832)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 221184)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 221185)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 864)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 229376)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 229377)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 896)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 237568)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 237569)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 928)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 245760)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 245761)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 960)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 253952)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + 253953)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) + 992)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 512)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 544)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 576)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 608)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 640)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 672)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 704)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 736)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 768)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 800)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 832)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 864)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 896)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 928)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 960)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) + 992)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [1, 8, 8], "blockDim": [16, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_1024_32_32_w64_1024_1_1_o1_64_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 1024, 32, 32], "filter_shape": [64, 1024, 1, 1], "output_shape": [1, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_1024_32_32_w64_1024_1_1_o1_64_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1024];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4))] = input0[(((((rc_outer * 32768) + (((int)threadIdx.z) * 2048)) + ((((int)threadIdx.x) >> 3) * 1024)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) & 7) * 4))];\n    pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((rc_outer * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 1) >> 5) * 1024)) + (((int)blockIdx.y) * 32)) + (((((int)threadIdx.x) * 4) + 1) & 31))];\n    pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((rc_outer * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 2) >> 5) * 1024)) + (((int)blockIdx.y) * 32)) + (((((int)threadIdx.x) * 4) + 2) & 31))];\n    pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((rc_outer * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 3) >> 5) * 1024)) + (((int)blockIdx.y) * 32)) + (((((int)threadIdx.x) * 4) + 3) & 31))];\n    input1_shared[((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((int)threadIdx.x) >> 3) * 1024)) + (rc_outer * 32)) + ((((int)threadIdx.x) & 7) * 4))];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 1) >> 5) * 1024)) + (rc_outer * 32)) + (((((int)threadIdx.x) * 4) + 1) & 31))];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 2) >> 5) * 1024)) + (rc_outer * 32)) + (((((int)threadIdx.x) * 4) + 2) & 31))];\n    input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 3) >> 5) * 1024)) + (rc_outer * 32)) + (((((int)threadIdx.x) * 4) + 3) & 31))];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 64)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[(((int)threadIdx.z) * 64)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 64) + 32)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 64) + 32)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 64) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 64) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 64) + 33)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 64) + 33)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 64) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 80)] * input1_shared[((((int)threadIdx.z) * 64) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 64) + 34)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 80)] * input1_shared[((((int)threadIdx.z) * 64) + 34)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 96)] * input1_shared[((((int)threadIdx.z) * 64) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 64) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 96)] * input1_shared[((((int)threadIdx.z) * 64) + 35)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 64) + 35)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 64) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 64) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 64) + 36)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 64) + 36)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 64) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 176)] * input1_shared[((((int)threadIdx.z) * 64) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 64) + 37)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 176)] * input1_shared[((((int)threadIdx.z) * 64) + 37)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 192)] * input1_shared[((((int)threadIdx.z) * 64) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 64) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 192)] * input1_shared[((((int)threadIdx.z) * 64) + 38)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 64) + 38)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 64) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 64) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 64) + 39)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 64) + 39)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 64) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 272)] * input1_shared[((((int)threadIdx.z) * 64) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 64) + 40)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 272)] * input1_shared[((((int)threadIdx.z) * 64) + 40)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 288)] * input1_shared[((((int)threadIdx.z) * 64) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 64) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 288)] * input1_shared[((((int)threadIdx.z) * 64) + 41)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 64) + 41)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 64) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 64) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 64) + 42)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 64) + 42)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 64) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 368)] * input1_shared[((((int)threadIdx.z) * 64) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 64) + 43)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 368)] * input1_shared[((((int)threadIdx.z) * 64) + 43)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 384)] * input1_shared[((((int)threadIdx.z) * 64) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 64) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 384)] * input1_shared[((((int)threadIdx.z) * 64) + 44)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 64) + 44)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 64) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 64) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 64) + 45)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 64) + 45)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 64) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 464)] * input1_shared[((((int)threadIdx.z) * 64) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 64) + 46)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 464)] * input1_shared[((((int)threadIdx.z) * 64) + 46)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 480)] * input1_shared[((((int)threadIdx.z) * 64) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 64) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 480)] * input1_shared[((((int)threadIdx.z) * 64) + 47)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 64) + 47)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 64) + 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 64) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 64) + 48)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 64) + 48)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 64) + 17)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 64) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 64) + 49)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 64) + 49)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 576)] * input1_shared[((((int)threadIdx.z) * 64) + 18)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 64) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 576)] * input1_shared[((((int)threadIdx.z) * 64) + 50)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 64) + 50)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 64) + 19)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 64) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 64) + 51)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 64) + 51)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 64) + 20)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 656)] * input1_shared[((((int)threadIdx.z) * 64) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 64) + 52)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 656)] * input1_shared[((((int)threadIdx.z) * 64) + 52)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 64) + 21)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 64) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 64) + 53)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 64) + 53)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 64) + 22)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 64) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 64) + 54)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 64) + 54)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 64) + 23)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 752)] * input1_shared[((((int)threadIdx.z) * 64) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 64) + 55)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 752)] * input1_shared[((((int)threadIdx.z) * 64) + 55)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 768)] * input1_shared[((((int)threadIdx.z) * 64) + 24)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 64) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 768)] * input1_shared[((((int)threadIdx.z) * 64) + 56)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 64) + 56)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 64) + 25)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 64) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 64) + 57)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 64) + 57)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 64) + 26)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 848)] * input1_shared[((((int)threadIdx.z) * 64) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 64) + 58)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 848)] * input1_shared[((((int)threadIdx.z) * 64) + 58)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 864)] * input1_shared[((((int)threadIdx.z) * 64) + 27)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 64) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 864)] * input1_shared[((((int)threadIdx.z) * 64) + 59)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 64) + 59)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 64) + 28)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 64) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 64) + 60)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 64) + 60)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 64) + 29)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 944)] * input1_shared[((((int)threadIdx.z) * 64) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 64) + 61)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 944)] * input1_shared[((((int)threadIdx.z) * 64) + 61)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 960)] * input1_shared[((((int)threadIdx.z) * 64) + 30)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 64) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 960)] * input1_shared[((((int)threadIdx.z) * 64) + 62)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 64) + 62)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 64) + 31)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 64) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 64) + 63)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 64) + 63)]));\n  }\n  compute[((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2))]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 16)] = max((compute1[2] + input2[((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2))]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 1024)] = max((compute1[1] + input2[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1)]), 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 1040)] = max((compute1[3] + input2[(((((int)blockIdx.z) * 32) + (((int)threadIdx.z) * 2)) + 1)]), 0.000000e+00f);\n}\n\n", "gridDim": [1, 32, 2], "blockDim": [16, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_256_8_8_w64_256_1_1_o1_64_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 256, 8, 8], "filter_shape": [64, 256, 1, 1], "output_shape": [1, 64, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_256_8_8_w64_256_1_1_o1_64_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8))] = input0[((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4))];\n    pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 1)] = input0[(((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + 1)];\n    pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 2)] = input0[(((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + 2)];\n    pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 3)] = input0[(((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + 3)];\n    pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 4)] = input0[(((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + 8)];\n    pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 5)] = input0[(((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + 9)];\n    pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 6)] = input0[(((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + 10)];\n    pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 7)] = input0[(((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 64)) + (((int)blockIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + 11)];\n    input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8))];\n    input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 1)] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 1)];\n    input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 2)] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 2)];\n    input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 3)] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 3)];\n    input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 4)] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 4)];\n    input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 5)] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 5)];\n    input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 6)] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 6)];\n    input1_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 7)] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 256)) + (rc_outer * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 8)) + 7)];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 32)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 8)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 9)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 24)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 25)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 40)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 41)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 56)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 57)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 72)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 73)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 88)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 89)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 104)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 105)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 120)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 121)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 136)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 137)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 152)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 153)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 168)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 169)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 184)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 185)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 200)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 201)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 216)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 217)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 232)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 233)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 248)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + (((int)threadIdx.x) * 2)) + 249)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  }\n  compute[((((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + (((int)threadIdx.x) * 2))] = max((compute1[0] + input2[((((int)blockIdx.z) * 8) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + (((int)threadIdx.x) * 2)) + 1)] = max((compute1[1] + input2[((((int)blockIdx.z) * 8) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [2, 4, 8], "blockDim": [2, 2, 8]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_64_32_32_w64_64_1_1_o1_64_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 64, 32, 32], "filter_shape": [64, 64, 1, 1], "output_shape": [1, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_64_32_32_w64_64_1_1_o1_64_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[128];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((((rc_outer * 8192) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 4)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 128)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) >> 3) * 64)) + (rc_outer * 8)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) & 7))];\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n      compute1[2] = (compute1[2] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n      compute1[1] = (compute1[1] + (pad_temp_shared[((((rc_inner * 32) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 2)] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n      compute1[3] = (compute1[3] + (pad_temp_shared[((((rc_inner * 32) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 2)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n    }\n  }\n  compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 8192)] = max((compute1[2] + input2[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8)]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 2)] = max((compute1[1] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 8194)] = max((compute1[3] + input2[(((((int)blockIdx.z) * 16) + ((int)threadIdx.z)) + 8)]), 0.000000e+00f);\n}\n\n", "gridDim": [8, 4, 4], "blockDim": [2, 8, 8]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_128_16_16_w64_128_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 128, 16, 16], "filter_shape": [64, 128, 1, 1], "output_shape": [1, 64, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_128_16_16_w64_128_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((rc_outer * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))];\n    input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (rc_outer * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))];\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n    }\n  }\n  compute[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 64)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [4, 4, 4], "blockDim": [4, 4, 16]}, {"tvm_func_name": "tuned_fused_convolution_add_relu_op_float_i1_64_32_32_w64_64_3_3_o1_64_32_32_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Add_Relu", "parameters": {"input_shape": [1, 64, 32, 32], "filter_shape": [64, 64, 3, 3], "output_shape": [1, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_add_relu_op_float_i1_64_32_32_w64_64_3_3_o1_64_32_32_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute,  float* __restrict__ input2) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[1536];\n  __shared__ float input1_shared[768];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6))] = ((((1 <= ((((int)blockIdx.y) * 4) + ((((int)threadIdx.x) * 6) / 16))) && (((((int)blockIdx.y) * 4) + ((((int)threadIdx.x) * 6) / 16)) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) * 6) & 15)))) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + (((((int)threadIdx.x) * 6) / 16) * 32)) + (((int)blockIdx.x) * 16)) + ((((int)threadIdx.x) * 6) & 15)) - 33)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 1)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 1) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 1) >> 4)) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 1) & 15)))) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 1) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 1) & 15)) - 33)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 2)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 2) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 2) >> 4)) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 2) & 15)))) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 2) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 2) & 15)) - 33)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 3)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 3) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 3) >> 4)) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 3) & 15)))) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 3) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 3) & 15)) - 33)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 4)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 4) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 4) >> 4)) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 4) & 15)))) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 4) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 4) & 15)) - 33)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 5)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 5) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 5) >> 4)) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 5) & 15)))) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 5) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 5) & 15)) - 33)] : 0.000000e+00f);\n    input1_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3))] = input1[((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9))];\n    input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + 1)] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 3)];\n    input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + 2)] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 6)];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 80)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 96)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 176)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 192)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 272)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 288)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 368)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 384)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 464)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 480)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 576)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 656)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 752)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 768)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 848)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 864)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 944)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 960)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1024)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1024)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1040)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1056)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1072)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1072)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1120)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1120)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1136)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1152)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1168)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1168)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1216)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1216)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1232)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1248)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1264)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1264)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1312)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1312)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1328)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1344)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1360)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1360)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1408)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1408)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1424)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1440)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1456)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1456)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1504)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1504)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1520)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6))] = (((1 <= ((((int)blockIdx.y) * 4) + ((((int)threadIdx.x) * 6) / 16))) && (((((int)blockIdx.y) * 4) + ((((int)threadIdx.x) * 6) / 16)) < 33)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + (((((int)threadIdx.x) * 6) / 16) * 32)) + (((int)blockIdx.x) * 16)) + ((((int)threadIdx.x) * 6) & 15)) - 32)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 1)] = (((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 1) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 1) >> 4)) < 33)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 1) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 1) & 15)) - 32)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 2)] = (((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 2) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 2) >> 4)) < 33)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 2) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 2) & 15)) - 32)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 3)] = (((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 3) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 3) >> 4)) < 33)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 3) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 3) & 15)) - 32)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 4)] = (((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 4) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 4) >> 4)) < 33)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 4) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 4) & 15)) - 32)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 5)] = (((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 5) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 5) >> 4)) < 33)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 5) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 5) & 15)) - 32)] : 0.000000e+00f);\n    input1_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3))] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 1)];\n    input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + 1)] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 4)];\n    input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + 2)] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 7)];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 80)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 96)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 176)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 192)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 272)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 288)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 368)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 384)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 464)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 480)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 576)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 656)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 752)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 768)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 848)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 864)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 944)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 960)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1024)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1024)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1040)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1056)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1072)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1072)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1120)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1120)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1136)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1152)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1168)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1168)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1216)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1216)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1232)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1248)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1264)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1264)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1312)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1312)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1328)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1344)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1360)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1360)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1408)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1408)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1424)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1440)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1456)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1456)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1504)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1504)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1520)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6))] = ((((1 <= ((((int)blockIdx.y) * 4) + ((((int)threadIdx.x) * 6) / 16))) && (((((int)blockIdx.y) * 4) + ((((int)threadIdx.x) * 6) / 16)) < 33)) && (((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) * 6) & 15)) < 31)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + (((((int)threadIdx.x) * 6) / 16) * 32)) + (((int)blockIdx.x) * 16)) + ((((int)threadIdx.x) * 6) & 15)) - 31)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 1)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 1) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 1) >> 4)) < 33)) && (((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 1) & 15)) < 31)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 1) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 1) & 15)) - 31)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 2)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 2) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 2) >> 4)) < 33)) && (((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 2) & 15)) < 31)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 2) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 2) & 15)) - 31)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 3)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 3) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 3) >> 4)) < 33)) && (((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 3) & 15)) < 31)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 3) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 3) & 15)) - 31)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 4)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 4) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 4) >> 4)) < 33)) && (((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 4) & 15)) < 31)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 4) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 4) & 15)) - 31)] : 0.000000e+00f);\n    pad_temp_shared[(((((int)threadIdx.z) * 96) + (((int)threadIdx.x) * 6)) + 5)] = ((((1 <= ((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 5) >> 4))) && (((((int)blockIdx.y) * 4) + (((((int)threadIdx.x) * 6) + 5) >> 4)) < 33)) && (((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 6) + 5) & 15)) < 31)) ? input0[(((((((rc_outer * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + ((((((int)threadIdx.x) * 6) + 5) >> 4) * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 6) + 5) & 15)) - 31)] : 0.000000e+00f);\n    input1_shared[((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3))] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 2)];\n    input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + 1)] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 5)];\n    input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + 2)] = input1[(((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 576)) + (rc_outer * 144)) + (((int)threadIdx.x) * 9)) + 8)];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[(((int)threadIdx.z) * 48)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 16)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 48) + 1)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 32)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 48)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 64)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 80)] * input1_shared[((((int)threadIdx.z) * 48) + 2)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 96)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 3)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 48) + 4)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 128)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 144)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 160)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 176)] * input1_shared[((((int)threadIdx.z) * 48) + 5)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 192)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 6)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 208)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 48) + 7)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 240)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 256)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 272)] * input1_shared[((((int)threadIdx.z) * 48) + 8)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 288)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 9)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 304)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 48) + 10)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 320)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 352)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 368)] * input1_shared[((((int)threadIdx.z) * 48) + 11)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 384)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 12)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 400)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 48) + 13)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 416)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 432)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 464)] * input1_shared[((((int)threadIdx.z) * 48) + 14)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 480)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 15)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 496)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 48) + 16)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 512)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 528)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 544)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 48) + 17)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 576)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 18)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 592)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 48) + 19)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 608)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 624)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 640)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 656)] * input1_shared[((((int)threadIdx.z) * 48) + 20)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 21)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 688)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 48) + 22)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 704)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 720)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 736)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 752)] * input1_shared[((((int)threadIdx.z) * 48) + 23)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 768)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 24)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 48) + 25)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 800)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 816)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 832)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 848)] * input1_shared[((((int)threadIdx.z) * 48) + 26)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 864)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 27)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 880)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 48) + 28)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 896)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 912)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 928)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 944)] * input1_shared[((((int)threadIdx.z) * 48) + 29)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 960)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 30)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 976)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1024)] * input1_shared[((((int)threadIdx.z) * 48) + 31)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 992)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1008)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1024)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1040)] * input1_shared[((((int)threadIdx.z) * 48) + 32)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1056)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1072)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 33)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1072)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1120)] * input1_shared[((((int)threadIdx.z) * 48) + 34)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1088)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1104)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1120)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1136)] * input1_shared[((((int)threadIdx.z) * 48) + 35)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1152)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1168)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 36)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1168)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1216)] * input1_shared[((((int)threadIdx.z) * 48) + 37)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1184)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1200)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1216)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1232)] * input1_shared[((((int)threadIdx.z) * 48) + 38)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1248)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1264)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 39)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1264)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1312)] * input1_shared[((((int)threadIdx.z) * 48) + 40)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1280)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1296)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1312)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1328)] * input1_shared[((((int)threadIdx.z) * 48) + 41)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1344)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1360)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 42)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1360)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1408)] * input1_shared[((((int)threadIdx.z) * 48) + 43)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1376)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1392)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1408)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1424)] * input1_shared[((((int)threadIdx.z) * 48) + 44)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1440)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1456)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 45)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1456)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1504)] * input1_shared[((((int)threadIdx.z) * 48) + 46)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 1472)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 1488)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 1504)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 1520)] * input1_shared[((((int)threadIdx.z) * 48) + 47)]));\n  }\n  compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x))] = max((compute1[0] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32)] = max((compute1[1] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 64)] = max((compute1[2] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 96)] = max((compute1[3] + input2[((((int)blockIdx.z) * 16) + ((int)threadIdx.z))]), 0.000000e+00f);\n}\n\n", "gridDim": [2, 8, 4], "blockDim": [16, 1, 16]}]