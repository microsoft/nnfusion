[{"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_3_230_230_w64_3_7_7_o1_64_112_112_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 3, 230, 230], "filter_shape": [64, 3, 7, 7], "output_shape": [1, 64, 112, 112], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_3_230_230_w64_3_7_7_o1_64_112_112_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[16];\n  __shared__ float pad_temp_shared[1053];\n  __shared__ float input1_shared[1568];\n  compute1[0] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[8] = 0.000000e+00f;\n  compute1[12] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[9] = 0.000000e+00f;\n  compute1[13] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[10] = 0.000000e+00f;\n  compute1[14] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  compute1[11] = 0.000000e+00f;\n  compute1[15] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) < 1053) {\n      if (((int)threadIdx.x) < 53) {\n        pad_temp_shared[((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5))] = input0[(((((rc_outer * 52900) + (((int)blockIdx.y) * 920)) + ((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) / 117) * 230)) + (((int)blockIdx.x) * 112)) + (((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) % 117))];\n      }\n    }\n    if (((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) < 1052) {\n      if (((int)threadIdx.x) < 53) {\n        pad_temp_shared[(((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 1)] = input0[(((((rc_outer * 52900) + (((int)blockIdx.y) * 920)) + (((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 1) / 117) * 230)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 1) % 117))];\n      }\n    }\n    if (((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) < 1051) {\n      if (((int)threadIdx.x) < 53) {\n        pad_temp_shared[(((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 2)] = input0[(((((rc_outer * 52900) + (((int)blockIdx.y) * 920)) + (((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 2) / 117) * 230)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 2) % 117))];\n      }\n    }\n    if (((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) < 1050) {\n      if (((int)threadIdx.x) < 53) {\n        pad_temp_shared[(((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 3)] = input0[(((((rc_outer * 52900) + (((int)blockIdx.y) * 920)) + (((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 3) / 117) * 230)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 3) % 117))];\n      }\n    }\n    if (((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) < 1049) {\n      if (((int)threadIdx.x) < 52) {\n        pad_temp_shared[(((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 4)] = input0[(((((rc_outer * 52900) + (((int)blockIdx.y) * 920)) + (((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 4) / 117) * 230)) + (((int)blockIdx.x) * 112)) + ((((((int)threadIdx.z) * 264) + (((int)threadIdx.x) * 5)) + 4) % 117))];\n      }\n    }\n    input1_shared[((((int)threadIdx.z) * 392) + (((int)threadIdx.x) * 7))] = input1[(((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 1176)) + ((((int)threadIdx.x) / 7) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) % 7) * 7))];\n    input1_shared[(((((int)threadIdx.z) * 392) + (((int)threadIdx.x) * 7)) + 1)] = input1[((((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 1176)) + ((((int)threadIdx.x) / 7) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 1)];\n    input1_shared[(((((int)threadIdx.z) * 392) + (((int)threadIdx.x) * 7)) + 2)] = input1[((((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 1176)) + ((((int)threadIdx.x) / 7) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 2)];\n    input1_shared[(((((int)threadIdx.z) * 392) + (((int)threadIdx.x) * 7)) + 3)] = input1[((((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 1176)) + ((((int)threadIdx.x) / 7) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 3)];\n    input1_shared[(((((int)threadIdx.z) * 392) + (((int)threadIdx.x) * 7)) + 4)] = input1[((((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 1176)) + ((((int)threadIdx.x) / 7) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 4)];\n    input1_shared[(((((int)threadIdx.z) * 392) + (((int)threadIdx.x) * 7)) + 5)] = input1[((((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 1176)) + ((((int)threadIdx.x) / 7) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 5)];\n    input1_shared[(((((int)threadIdx.z) * 392) + (((int)threadIdx.x) * 7)) + 6)] = input1[((((((((int)blockIdx.z) * 4704) + (((int)threadIdx.z) * 1176)) + ((((int)threadIdx.x) / 7) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 6)];\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 98)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 98) + 392)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 98) + 784)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 98) + 1176)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[(((int)threadIdx.z) * 98)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 392)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 784)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 1176)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 98) + 49)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 98) + 441)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 98) + 833)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 98) + 1225)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 49)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 441)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 833)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 1225)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 1)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 393)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 785)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 1177)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 1)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 393)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 785)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 1177)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 50)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 442)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 834)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[((((int)threadIdx.z) * 98) + 1226)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 50)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 442)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 834)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 1226)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 2)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 394)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 786)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 1178)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 2)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 394)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 786)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 1178)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 51)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 443)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 835)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 2)] * input1_shared[((((int)threadIdx.z) * 98) + 1227)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 51)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 443)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 835)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 1227)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 3)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 395)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 787)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 1179)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 3)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 395)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 787)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 1179)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 52)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 444)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 836)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 3)] * input1_shared[((((int)threadIdx.z) * 98) + 1228)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 52)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 444)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 836)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 1228)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 4)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 396)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 788)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 1180)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 4)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 396)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 788)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 1180)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 53)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 445)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 837)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 4)] * input1_shared[((((int)threadIdx.z) * 98) + 1229)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 53)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 445)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 837)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 1229)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 5)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 397)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 789)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 1181)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 5)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 397)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 789)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 1181)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 54)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 446)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 838)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 5)] * input1_shared[((((int)threadIdx.z) * 98) + 1230)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 54)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 446)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 838)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 1230)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 6)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 398)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 790)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 1182)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 6)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 398)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 790)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 1182)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 55)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 447)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 839)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 6)] * input1_shared[((((int)threadIdx.z) * 98) + 1231)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 55)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 447)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 839)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 1231)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 7)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 399)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 791)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 1183)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 7)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 399)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 791)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 1183)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 56)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 448)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 840)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 98) + 1232)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 56)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 448)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 840)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 1232)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 8)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 400)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 792)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 1184)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 8)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 400)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 792)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 1184)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 57)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 449)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 841)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 118)] * input1_shared[((((int)threadIdx.z) * 98) + 1233)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 57)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 449)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 841)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 1233)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 9)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 401)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 793)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 1185)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 9)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 401)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 793)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 1185)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 58)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 450)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 842)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 119)] * input1_shared[((((int)threadIdx.z) * 98) + 1234)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 58)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 450)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 842)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 1234)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 10)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 402)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 794)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 1186)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 10)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 402)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 794)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 1186)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 59)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 451)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 843)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 120)] * input1_shared[((((int)threadIdx.z) * 98) + 1235)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 59)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 451)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 843)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 1235)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 11)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 403)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 795)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 1187)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 11)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 403)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 795)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 1187)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 60)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 452)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 844)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 121)] * input1_shared[((((int)threadIdx.z) * 98) + 1236)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 60)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 452)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 844)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 1236)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 12)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 404)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 796)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 1188)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 12)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 404)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 796)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 1188)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 61)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 453)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 845)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 122)] * input1_shared[((((int)threadIdx.z) * 98) + 1237)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 61)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 453)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 845)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 1237)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 13)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 405)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 797)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 1189)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 13)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 405)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 797)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 1189)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 62)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 454)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 846)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 123)] * input1_shared[((((int)threadIdx.z) * 98) + 1238)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 62)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 454)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 846)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 1238)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 14)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 406)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 798)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 1190)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 14)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 406)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 798)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 1190)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 63)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 455)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 847)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 98) + 1239)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 63)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 455)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 847)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 1239)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 15)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 407)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 799)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 1191)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 15)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 407)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 799)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 1191)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 64)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 456)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 848)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 235)] * input1_shared[((((int)threadIdx.z) * 98) + 1240)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 64)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 456)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 848)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 1240)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 16)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 408)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 800)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 1192)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 16)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 408)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 800)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 1192)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 65)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 457)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 849)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 236)] * input1_shared[((((int)threadIdx.z) * 98) + 1241)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 65)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 457)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 849)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 1241)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 17)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 409)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 801)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 1193)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 17)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 409)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 801)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 1193)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 66)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 458)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 850)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 237)] * input1_shared[((((int)threadIdx.z) * 98) + 1242)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 66)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 458)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 850)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 1242)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 18)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 410)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 802)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 1194)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 18)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 410)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 802)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 1194)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 67)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 459)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 851)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 238)] * input1_shared[((((int)threadIdx.z) * 98) + 1243)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 67)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 459)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 851)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 1243)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 19)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 411)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 803)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 1195)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 19)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 411)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 803)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 1195)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 68)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 460)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 852)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 239)] * input1_shared[((((int)threadIdx.z) * 98) + 1244)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 68)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 460)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 852)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 1244)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 20)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 412)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 804)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 1196)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 20)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 412)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 804)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 1196)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 69)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 461)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 853)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 98) + 1245)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 69)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 461)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 853)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 1245)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 21)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 413)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 805)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 1197)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 21)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 413)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 805)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 1197)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 70)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 462)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 854)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 98) + 1246)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 70)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 462)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 854)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 1246)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 22)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 414)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 806)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 1198)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 22)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 414)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 806)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 1198)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 71)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 463)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 855)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 352)] * input1_shared[((((int)threadIdx.z) * 98) + 1247)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 71)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 463)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 855)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 1247)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 23)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 415)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 807)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 1199)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 23)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 415)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 807)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 1199)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 72)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 464)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 856)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 353)] * input1_shared[((((int)threadIdx.z) * 98) + 1248)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 72)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 464)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 856)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 1248)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 24)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 416)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 808)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 1200)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 24)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 416)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 808)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 1200)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 73)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 465)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 857)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 354)] * input1_shared[((((int)threadIdx.z) * 98) + 1249)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 73)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 465)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 857)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 1249)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 25)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 417)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 809)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 1201)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 25)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 417)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 809)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 1201)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 74)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 466)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 858)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 355)] * input1_shared[((((int)threadIdx.z) * 98) + 1250)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 74)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 466)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 858)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 1250)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 26)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 418)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 810)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 1202)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 26)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 418)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 810)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 1202)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 75)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 467)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 859)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 356)] * input1_shared[((((int)threadIdx.z) * 98) + 1251)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 75)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 467)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 859)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 1251)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 27)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 419)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 811)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 1203)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 27)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 419)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 811)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 1203)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 76)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 468)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 860)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 357)] * input1_shared[((((int)threadIdx.z) * 98) + 1252)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 76)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 468)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 860)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 1252)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 28)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 420)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 812)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 1204)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 28)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 420)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 812)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 1204)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 77)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 469)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 861)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 98) + 1253)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 77)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 469)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 861)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 1253)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 29)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 421)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 813)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 1205)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 29)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 421)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 813)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 1205)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 78)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 470)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 862)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 469)] * input1_shared[((((int)threadIdx.z) * 98) + 1254)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 78)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 470)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 862)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 1254)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 30)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 422)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 814)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 1206)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 30)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 422)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 814)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 1206)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 79)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 471)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 863)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 470)] * input1_shared[((((int)threadIdx.z) * 98) + 1255)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 79)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 471)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 863)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 1255)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 31)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 423)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 815)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 1207)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 31)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 423)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 815)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 1207)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 80)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 472)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 864)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 471)] * input1_shared[((((int)threadIdx.z) * 98) + 1256)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 80)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 472)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 864)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 1256)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 32)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 424)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 816)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 1208)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 32)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 424)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 816)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 1208)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 81)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 473)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 865)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 472)] * input1_shared[((((int)threadIdx.z) * 98) + 1257)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 81)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 473)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 865)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 1257)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 33)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 425)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 817)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 1209)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 33)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 425)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 817)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 1209)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 82)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 474)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 866)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 473)] * input1_shared[((((int)threadIdx.z) * 98) + 1258)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 82)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 474)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 866)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 1258)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 34)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 426)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 818)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 1210)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 34)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 426)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 818)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 1210)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 83)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 475)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 867)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 474)] * input1_shared[((((int)threadIdx.z) * 98) + 1259)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 83)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 475)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 867)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 1259)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 35)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 427)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 819)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 1211)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 35)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 427)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 819)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 1211)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 84)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 476)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 868)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 98) + 1260)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 84)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 476)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 868)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 98) + 1260)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 36)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 428)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 820)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 1212)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 36)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 428)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 820)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 1212)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 85)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 477)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 869)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 586)] * input1_shared[((((int)threadIdx.z) * 98) + 1261)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 85)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 477)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 869)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 820)] * input1_shared[((((int)threadIdx.z) * 98) + 1261)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 37)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 429)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 821)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 1213)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 37)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 429)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 821)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 1213)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 86)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 478)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 870)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 587)] * input1_shared[((((int)threadIdx.z) * 98) + 1262)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 86)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 478)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 870)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 821)] * input1_shared[((((int)threadIdx.z) * 98) + 1262)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 38)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 430)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 822)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 1214)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 38)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 430)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 822)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 1214)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 87)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 479)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 871)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 588)] * input1_shared[((((int)threadIdx.z) * 98) + 1263)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 87)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 479)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 871)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 822)] * input1_shared[((((int)threadIdx.z) * 98) + 1263)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 39)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 431)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 823)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 1215)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 39)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 431)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 823)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 1215)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 88)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 480)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 872)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 589)] * input1_shared[((((int)threadIdx.z) * 98) + 1264)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 88)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 480)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 872)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 823)] * input1_shared[((((int)threadIdx.z) * 98) + 1264)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 40)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 432)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 824)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 1216)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 40)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 432)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 824)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 1216)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 89)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 481)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 873)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 590)] * input1_shared[((((int)threadIdx.z) * 98) + 1265)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 89)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 481)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 873)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 824)] * input1_shared[((((int)threadIdx.z) * 98) + 1265)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 41)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 433)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 825)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 1217)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 41)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 433)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 825)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 1217)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 90)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 482)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 874)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 591)] * input1_shared[((((int)threadIdx.z) * 98) + 1266)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 90)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 482)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 874)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 825)] * input1_shared[((((int)threadIdx.z) * 98) + 1266)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 42)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 434)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 826)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 1218)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 42)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 434)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 826)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 1218)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 91)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 483)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 875)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 98) + 1267)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 91)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 483)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 875)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 98) + 1267)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 43)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 435)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 827)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 1219)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 43)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 435)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 827)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 1219)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 92)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 484)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 876)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 703)] * input1_shared[((((int)threadIdx.z) * 98) + 1268)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 92)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 484)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 876)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 937)] * input1_shared[((((int)threadIdx.z) * 98) + 1268)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 44)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 436)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 828)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 1220)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 44)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 436)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 828)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 1220)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 93)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 485)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 877)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 704)] * input1_shared[((((int)threadIdx.z) * 98) + 1269)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 93)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 485)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 877)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 938)] * input1_shared[((((int)threadIdx.z) * 98) + 1269)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 45)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 437)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 829)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 1221)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 45)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 437)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 829)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 1221)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 94)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 486)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 878)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 705)] * input1_shared[((((int)threadIdx.z) * 98) + 1270)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 94)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 486)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 878)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 939)] * input1_shared[((((int)threadIdx.z) * 98) + 1270)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 46)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 438)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 830)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 1222)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 46)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 438)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 830)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 1222)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 95)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 487)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 879)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 706)] * input1_shared[((((int)threadIdx.z) * 98) + 1271)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 95)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 487)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 879)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 940)] * input1_shared[((((int)threadIdx.z) * 98) + 1271)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 47)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 439)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 831)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 1223)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 47)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 439)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 831)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 1223)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 96)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 488)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 880)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 707)] * input1_shared[((((int)threadIdx.z) * 98) + 1272)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 96)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 488)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 880)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 941)] * input1_shared[((((int)threadIdx.z) * 98) + 1272)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 48)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 440)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 832)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 1224)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 48)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 440)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 832)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 1224)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 97)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 489)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 881)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 708)] * input1_shared[((((int)threadIdx.z) * 98) + 1273)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 97)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 489)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 881)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 942)] * input1_shared[((((int)threadIdx.z) * 98) + 1273)]));\n  }\n  compute[(((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 100352)] = max(compute1[4], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 200704)] = max(compute1[8], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 301056)] = max(compute1[12], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 112)] = max(compute1[1], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 100464)] = max(compute1[5], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 200816)] = max(compute1[9], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 301168)] = max(compute1[13], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 12544)] = max(compute1[2], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 112896)] = max(compute1[6], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 213248)] = max(compute1[10], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 313600)] = max(compute1[14], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 12656)] = max(compute1[3], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 113008)] = max(compute1[7], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 213360)] = max(compute1[11], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 25088)) + (((int)blockIdx.y) * 224)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) + 313712)] = max(compute1[15], 0.000000e+00f);\n}\n\n", "gridDim": [2, 56, 2], "blockDim": [56, 1, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_2048_7_7_w2048_2048_1_1_o1_2048_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 2048, 7, 7], "filter_shape": [2048, 2048, 1, 1], "output_shape": [1, 2048, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_2048_7_7_w2048_2048_1_1_o1_2048_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[1568];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 392) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((rc_outer * 1568) + (((int)threadIdx.z) * 392)) + (((int)threadIdx.y) * 56)) + ((((int)threadIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 8) + ((((((int)threadIdx.y) * 37) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 5)) < 32) {\n        if (((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 37)) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 1024) {\n          if ((((((int)threadIdx.y) * 37) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 256) {\n            if (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 37) {\n              input1_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 37)) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + (((((((int)threadIdx.y) * 37) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 5) * 2048)) + (rc_outer * 32)) + ((((((int)threadIdx.y) * 37) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 31))];\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 32; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + rc_inner)]));\n      compute1[1] = (compute1[1] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 32) + rc_inner) + 128)]));\n      compute1[2] = (compute1[2] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 32) + rc_inner) + 256)]));\n      compute1[3] = (compute1[3] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 32) + rc_inner) + 384)]));\n      compute1[4] = (compute1[4] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 32) + rc_inner) + 512)]));\n      compute1[5] = (compute1[5] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 32) + rc_inner) + 640)]));\n      compute1[6] = (compute1[6] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 32) + rc_inner) + 768)]));\n      compute1[7] = (compute1[7] + (pad_temp_shared[(((rc_inner * 49) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 32) + rc_inner) + 896)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 196)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 392)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 588)] = max(compute1[3], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 784)] = max(compute1[4], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 980)] = max(compute1[5], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 1176)] = max(compute1[6], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) + 1372)] = max(compute1[7], 0.000000e+00f);\n}\n\n", "gridDim": [1, 1, 64], "blockDim": [7, 7, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_512_28_28_w1024_512_1_1_o1_1024_14_14_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [1024, 512, 1, 1], "output_shape": [1, 1024, 14, 14], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_512_28_28_w1024_512_1_1_o1_1024_14_14_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[432];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 27) + (((int)threadIdx.x) * 2))] = input0[((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2))];\n    if (((((((int)threadIdx.x) * 2) + 1) / 27) + ((int)threadIdx.z)) < 16) {\n      if (((((int)threadIdx.z) * 27) + (((int)threadIdx.x) * 2)) < 431) {\n        if (((int)threadIdx.x) < 13) {\n          pad_temp_shared[(((((int)threadIdx.z) * 27) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((rc_outer * 12544) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + 1)];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + ((((int)threadIdx.x) * 5) / 16)) < 64) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 1024) {\n        if (((int)threadIdx.x) < 13) {\n          input1_shared[((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5))] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 5) / 16) * 512)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 5) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 1) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 1023) {\n        if (((int)threadIdx.x) < 13) {\n          input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 1)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 1) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 1) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 2) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 1022) {\n        if (((int)threadIdx.x) < 13) {\n          input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 2)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 2) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 2) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 3) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 1021) {\n        if (((int)threadIdx.x) < 13) {\n          input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 3)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 3) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 3) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + 4) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) < 1020) {\n        if (((int)threadIdx.x) < 12) {\n          input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + 4)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 4) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 4) & 15))];\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 512)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 768)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 27)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 27)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 27)] * input1_shared[((((int)threadIdx.z) * 16) + 513)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 27)] * input1_shared[((((int)threadIdx.z) * 16) + 769)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[((((int)threadIdx.z) * 16) + 514)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 54)] * input1_shared[((((int)threadIdx.z) * 16) + 770)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 515)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 771)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[((((int)threadIdx.z) * 16) + 516)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 108)] * input1_shared[((((int)threadIdx.z) * 16) + 772)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 517)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 135)] * input1_shared[((((int)threadIdx.z) * 16) + 773)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[((((int)threadIdx.z) * 16) + 518)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 162)] * input1_shared[((((int)threadIdx.z) * 16) + 774)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 519)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 189)] * input1_shared[((((int)threadIdx.z) * 16) + 775)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[((((int)threadIdx.z) * 16) + 520)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 216)] * input1_shared[((((int)threadIdx.z) * 16) + 776)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 243)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 243)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 243)] * input1_shared[((((int)threadIdx.z) * 16) + 521)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 243)] * input1_shared[((((int)threadIdx.z) * 16) + 777)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[((((int)threadIdx.z) * 16) + 522)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 270)] * input1_shared[((((int)threadIdx.z) * 16) + 778)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 297)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 297)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 297)] * input1_shared[((((int)threadIdx.z) * 16) + 523)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 297)] * input1_shared[((((int)threadIdx.z) * 16) + 779)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[((((int)threadIdx.z) * 16) + 524)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 324)] * input1_shared[((((int)threadIdx.z) * 16) + 780)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 16) + 525)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 16) + 781)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 16) + 526)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 378)] * input1_shared[((((int)threadIdx.z) * 16) + 782)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 16) + 527)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 405)] * input1_shared[((((int)threadIdx.z) * 16) + 783)]));\n  }\n  compute[((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x)) + 3136)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x)) + 6272)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x)) + 9408)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [1, 14, 16], "blockDim": [14, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_512_28_28_w512_512_1_1_o1_512_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [512, 512, 1, 1], "output_shape": [1, 512, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_512_28_28_w512_512_1_1_o1_512_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[896];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4))] = input0[(((((rc_outer * 12544) + (((int)threadIdx.z) * 1568)) + ((((int)threadIdx.x) / 14) * 784)) + (((int)blockIdx.y) * 56)) + ((((int)threadIdx.x) % 14) * 4))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((rc_outer * 12544) + (((int)threadIdx.z) * 1568)) + ((((((int)threadIdx.x) * 4) + 1) / 56) * 784)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 4) + 1) % 56))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((rc_outer * 12544) + (((int)threadIdx.z) * 1568)) + ((((((int)threadIdx.x) * 4) + 2) / 56) * 784)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 4) + 2) % 56))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((rc_outer * 12544) + (((int)threadIdx.z) * 1568)) + ((((((int)threadIdx.x) * 4) + 3) / 56) * 784)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 4) + 3) % 56))];\n    if (((((int)threadIdx.z) * 4) + ((((int)threadIdx.x) * 3) / 16)) < 32) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) < 512) {\n        if (((int)threadIdx.x) < 22) {\n          input1_shared[((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 3) / 16) * 512)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 3) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 3) + 1) >> 4)) < 32) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) < 511) {\n        if (((int)threadIdx.x) < 21) {\n          input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + 1)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 3) + 1) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 3) + 1) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 3) + 2) >> 4)) < 32) {\n      if (((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) < 510) {\n        if (((int)threadIdx.x) < 21) {\n          input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 3)) + 2)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 3) + 2) >> 4) * 512)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 3) + 2) & 15))];\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 128)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 384)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 128)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 384)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 129)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 385)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 129)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 385)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 130)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 386)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 130)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 386)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 131)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 387)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 131)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 387)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 132)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 388)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 132)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 388)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 133)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 389)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 133)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 389)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 134)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 390)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 134)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 390)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 135)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 391)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 135)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 391)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 136)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 392)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 136)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 392)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 137)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 393)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 137)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 393)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 138)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 394)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 138)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 394)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 139)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 395)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 139)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 395)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 140)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 396)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 140)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 396)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 141)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 397)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 141)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 397)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 142)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 398)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 142)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 398)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 143)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 399)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 143)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 399)]));\n  }\n  compute[((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 6272)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 12544)] = max(compute1[4], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 18816)] = max(compute1[6], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 28)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 6300)] = max(compute1[3], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 12572)] = max(compute1[5], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 18844)] = max(compute1[7], 0.000000e+00f);\n}\n\n", "gridDim": [1, 14, 16], "blockDim": [28, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_512_28_28_w16_512_1_1_o1_16_14_14_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [16, 512, 1, 1], "output_shape": [1, 16, 14, 14], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_512_28_28_w16_512_1_1_o1_16_14_14_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[1664];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30))] = input0[(((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 1)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 1) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 2)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 2) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 3)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 3) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 4)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 4) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 5)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 5) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 6)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 6) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 7)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 7) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 8)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 8) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 9)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 9) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 10)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 10) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 11)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 11) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 12)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 12) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 13)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 784)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 14)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 14) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 15)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 15) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 16)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 16) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 17)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 17) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 18)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 18) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 19)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 19) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 20)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 20) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 21)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 21) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 22)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 22) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 23)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 23) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 24)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 24) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 25)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 25) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13))];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 26)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 1568)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 27)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 27) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13))];\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 28) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1636) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 28)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 28) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13))];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 29) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1635) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 29)] = input0[(((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 29) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13))];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19))] = input1[(((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19))];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 1)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 1)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 2)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 2)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 3)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 3)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 4)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 4)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 5)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 5)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 6)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 6)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 7)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 7)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 8)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 8)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 9)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 9)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 10)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 10)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 11)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 11)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 12)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 12)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 13)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 13)];\n  if (((((((int)threadIdx.x) * 19) + 14) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1010) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 14)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 14)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 15) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1009) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 15)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 15)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 16) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1008) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 16)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 16)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 17) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1007) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 17)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 17)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 18) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1006) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 18)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 18)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 128)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 13)] * input1_shared[((((int)threadIdx.z) * 128) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 128) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 39)] * input1_shared[((((int)threadIdx.z) * 128) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 128) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 128) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 128) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 91)] * input1_shared[((((int)threadIdx.z) * 128) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 128) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 128) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 128) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 143)] * input1_shared[((((int)threadIdx.z) * 128) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 128) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 128) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 128) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 128) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 128) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 128) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 128) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 128) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 260)] * input1_shared[((((int)threadIdx.z) * 128) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 128) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 286)] * input1_shared[((((int)threadIdx.z) * 128) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 128) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 312)] * input1_shared[((((int)threadIdx.z) * 128) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 128) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 128) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 128) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 128) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 377)] * input1_shared[((((int)threadIdx.z) * 128) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 128) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 403)] * input1_shared[((((int)threadIdx.z) * 128) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 128) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 429)] * input1_shared[((((int)threadIdx.z) * 128) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 128) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 455)] * input1_shared[((((int)threadIdx.z) * 128) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 128) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 128) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 128) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 128) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 520)] * input1_shared[((((int)threadIdx.z) * 128) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 128) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 128) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 128) + 43)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 572)] * input1_shared[((((int)threadIdx.z) * 128) + 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 128) + 45)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 598)] * input1_shared[((((int)threadIdx.z) * 128) + 46)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 128) + 47)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 624)] * input1_shared[((((int)threadIdx.z) * 128) + 48)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 128) + 49)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 650)] * input1_shared[((((int)threadIdx.z) * 128) + 50)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 128) + 51)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 676)] * input1_shared[((((int)threadIdx.z) * 128) + 52)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 689)] * input1_shared[((((int)threadIdx.z) * 128) + 53)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 128) + 54)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 715)] * input1_shared[((((int)threadIdx.z) * 128) + 55)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 728)] * input1_shared[((((int)threadIdx.z) * 128) + 56)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 741)] * input1_shared[((((int)threadIdx.z) * 128) + 57)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 754)] * input1_shared[((((int)threadIdx.z) * 128) + 58)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 767)] * input1_shared[((((int)threadIdx.z) * 128) + 59)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 780)] * input1_shared[((((int)threadIdx.z) * 128) + 60)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 793)] * input1_shared[((((int)threadIdx.z) * 128) + 61)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 806)] * input1_shared[((((int)threadIdx.z) * 128) + 62)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 128) + 63)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 832)] * input1_shared[((((int)threadIdx.z) * 128) + 64)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 845)] * input1_shared[((((int)threadIdx.z) * 128) + 65)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 858)] * input1_shared[((((int)threadIdx.z) * 128) + 66)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 871)] * input1_shared[((((int)threadIdx.z) * 128) + 67)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 884)] * input1_shared[((((int)threadIdx.z) * 128) + 68)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 897)] * input1_shared[((((int)threadIdx.z) * 128) + 69)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 910)] * input1_shared[((((int)threadIdx.z) * 128) + 70)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 923)] * input1_shared[((((int)threadIdx.z) * 128) + 71)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 128) + 72)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 949)] * input1_shared[((((int)threadIdx.z) * 128) + 73)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 962)] * input1_shared[((((int)threadIdx.z) * 128) + 74)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 975)] * input1_shared[((((int)threadIdx.z) * 128) + 75)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 988)] * input1_shared[((((int)threadIdx.z) * 128) + 76)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1001)] * input1_shared[((((int)threadIdx.z) * 128) + 77)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1014)] * input1_shared[((((int)threadIdx.z) * 128) + 78)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1027)] * input1_shared[((((int)threadIdx.z) * 128) + 79)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1040)] * input1_shared[((((int)threadIdx.z) * 128) + 80)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 128) + 81)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1066)] * input1_shared[((((int)threadIdx.z) * 128) + 82)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1079)] * input1_shared[((((int)threadIdx.z) * 128) + 83)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1092)] * input1_shared[((((int)threadIdx.z) * 128) + 84)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1105)] * input1_shared[((((int)threadIdx.z) * 128) + 85)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1118)] * input1_shared[((((int)threadIdx.z) * 128) + 86)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1131)] * input1_shared[((((int)threadIdx.z) * 128) + 87)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1144)] * input1_shared[((((int)threadIdx.z) * 128) + 88)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1157)] * input1_shared[((((int)threadIdx.z) * 128) + 89)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1170)] * input1_shared[((((int)threadIdx.z) * 128) + 90)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1183)] * input1_shared[((((int)threadIdx.z) * 128) + 91)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1196)] * input1_shared[((((int)threadIdx.z) * 128) + 92)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1209)] * input1_shared[((((int)threadIdx.z) * 128) + 93)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1222)] * input1_shared[((((int)threadIdx.z) * 128) + 94)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1235)] * input1_shared[((((int)threadIdx.z) * 128) + 95)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1248)] * input1_shared[((((int)threadIdx.z) * 128) + 96)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1261)] * input1_shared[((((int)threadIdx.z) * 128) + 97)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1274)] * input1_shared[((((int)threadIdx.z) * 128) + 98)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1287)] * input1_shared[((((int)threadIdx.z) * 128) + 99)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1300)] * input1_shared[((((int)threadIdx.z) * 128) + 100)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1313)] * input1_shared[((((int)threadIdx.z) * 128) + 101)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1326)] * input1_shared[((((int)threadIdx.z) * 128) + 102)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1339)] * input1_shared[((((int)threadIdx.z) * 128) + 103)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1352)] * input1_shared[((((int)threadIdx.z) * 128) + 104)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1365)] * input1_shared[((((int)threadIdx.z) * 128) + 105)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1378)] * input1_shared[((((int)threadIdx.z) * 128) + 106)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1391)] * input1_shared[((((int)threadIdx.z) * 128) + 107)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1404)] * input1_shared[((((int)threadIdx.z) * 128) + 108)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1417)] * input1_shared[((((int)threadIdx.z) * 128) + 109)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1430)] * input1_shared[((((int)threadIdx.z) * 128) + 110)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1443)] * input1_shared[((((int)threadIdx.z) * 128) + 111)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1456)] * input1_shared[((((int)threadIdx.z) * 128) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1469)] * input1_shared[((((int)threadIdx.z) * 128) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1482)] * input1_shared[((((int)threadIdx.z) * 128) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1495)] * input1_shared[((((int)threadIdx.z) * 128) + 115)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1508)] * input1_shared[((((int)threadIdx.z) * 128) + 116)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1521)] * input1_shared[((((int)threadIdx.z) * 128) + 117)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1534)] * input1_shared[((((int)threadIdx.z) * 128) + 118)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1547)] * input1_shared[((((int)threadIdx.z) * 128) + 119)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1560)] * input1_shared[((((int)threadIdx.z) * 128) + 120)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1573)] * input1_shared[((((int)threadIdx.z) * 128) + 121)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1586)] * input1_shared[((((int)threadIdx.z) * 128) + 122)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1599)] * input1_shared[((((int)threadIdx.z) * 128) + 123)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1612)] * input1_shared[((((int)threadIdx.z) * 128) + 124)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1625)] * input1_shared[((((int)threadIdx.z) * 128) + 125)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1638)] * input1_shared[((((int)threadIdx.z) * 128) + 126)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1651)] * input1_shared[((((int)threadIdx.z) * 128) + 127)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30))] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 1)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 1) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 2)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 2) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 3)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 3) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 4)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 4) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 5)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 5) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 6)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 6) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 7)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 7) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 8)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 8) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 9)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 9) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 10)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 10) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 11)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 11) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 12)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 12) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 13)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 101136)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 14)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 14) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 15)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 15) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 16)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 16) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 17)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 17) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 18)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 18) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 19)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 19) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 20)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 20) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 21)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 21) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 22)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 22) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 23)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 23) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 24)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 24) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 25)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 25) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13)) + 100352)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 26)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 101920)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 27)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 27) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 100352)];\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 28) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1636) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 28)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 28) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 100352)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 29) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1635) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 29)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 29) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 100352)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19))] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 128)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 1)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 129)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 2)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 130)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 3)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 131)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 4)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 132)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 5)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 133)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 6)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 134)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 7)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 135)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 8)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 136)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 9)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 137)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 10)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 138)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 11)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 139)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 12)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 140)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 13)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 141)];\n  if (((((((int)threadIdx.x) * 19) + 14) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1010) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 14)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 142)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 15) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1009) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 15)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 143)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 16) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1008) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 16)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 144)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 17) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1007) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 17)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 145)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 18) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1006) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 18)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 146)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 128)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 13)] * input1_shared[((((int)threadIdx.z) * 128) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 128) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 39)] * input1_shared[((((int)threadIdx.z) * 128) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 128) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 128) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 128) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 91)] * input1_shared[((((int)threadIdx.z) * 128) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 128) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 128) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 128) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 143)] * input1_shared[((((int)threadIdx.z) * 128) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 128) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 128) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 128) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 128) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 128) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 128) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 128) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 128) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 260)] * input1_shared[((((int)threadIdx.z) * 128) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 128) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 286)] * input1_shared[((((int)threadIdx.z) * 128) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 128) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 312)] * input1_shared[((((int)threadIdx.z) * 128) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 128) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 128) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 128) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 128) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 377)] * input1_shared[((((int)threadIdx.z) * 128) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 128) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 403)] * input1_shared[((((int)threadIdx.z) * 128) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 128) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 429)] * input1_shared[((((int)threadIdx.z) * 128) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 128) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 455)] * input1_shared[((((int)threadIdx.z) * 128) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 128) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 128) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 128) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 128) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 520)] * input1_shared[((((int)threadIdx.z) * 128) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 128) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 128) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 128) + 43)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 572)] * input1_shared[((((int)threadIdx.z) * 128) + 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 128) + 45)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 598)] * input1_shared[((((int)threadIdx.z) * 128) + 46)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 128) + 47)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 624)] * input1_shared[((((int)threadIdx.z) * 128) + 48)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 128) + 49)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 650)] * input1_shared[((((int)threadIdx.z) * 128) + 50)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 128) + 51)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 676)] * input1_shared[((((int)threadIdx.z) * 128) + 52)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 689)] * input1_shared[((((int)threadIdx.z) * 128) + 53)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 128) + 54)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 715)] * input1_shared[((((int)threadIdx.z) * 128) + 55)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 728)] * input1_shared[((((int)threadIdx.z) * 128) + 56)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 741)] * input1_shared[((((int)threadIdx.z) * 128) + 57)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 754)] * input1_shared[((((int)threadIdx.z) * 128) + 58)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 767)] * input1_shared[((((int)threadIdx.z) * 128) + 59)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 780)] * input1_shared[((((int)threadIdx.z) * 128) + 60)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 793)] * input1_shared[((((int)threadIdx.z) * 128) + 61)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 806)] * input1_shared[((((int)threadIdx.z) * 128) + 62)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 128) + 63)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 832)] * input1_shared[((((int)threadIdx.z) * 128) + 64)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 845)] * input1_shared[((((int)threadIdx.z) * 128) + 65)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 858)] * input1_shared[((((int)threadIdx.z) * 128) + 66)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 871)] * input1_shared[((((int)threadIdx.z) * 128) + 67)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 884)] * input1_shared[((((int)threadIdx.z) * 128) + 68)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 897)] * input1_shared[((((int)threadIdx.z) * 128) + 69)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 910)] * input1_shared[((((int)threadIdx.z) * 128) + 70)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 923)] * input1_shared[((((int)threadIdx.z) * 128) + 71)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 128) + 72)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 949)] * input1_shared[((((int)threadIdx.z) * 128) + 73)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 962)] * input1_shared[((((int)threadIdx.z) * 128) + 74)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 975)] * input1_shared[((((int)threadIdx.z) * 128) + 75)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 988)] * input1_shared[((((int)threadIdx.z) * 128) + 76)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1001)] * input1_shared[((((int)threadIdx.z) * 128) + 77)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1014)] * input1_shared[((((int)threadIdx.z) * 128) + 78)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1027)] * input1_shared[((((int)threadIdx.z) * 128) + 79)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1040)] * input1_shared[((((int)threadIdx.z) * 128) + 80)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 128) + 81)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1066)] * input1_shared[((((int)threadIdx.z) * 128) + 82)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1079)] * input1_shared[((((int)threadIdx.z) * 128) + 83)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1092)] * input1_shared[((((int)threadIdx.z) * 128) + 84)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1105)] * input1_shared[((((int)threadIdx.z) * 128) + 85)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1118)] * input1_shared[((((int)threadIdx.z) * 128) + 86)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1131)] * input1_shared[((((int)threadIdx.z) * 128) + 87)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1144)] * input1_shared[((((int)threadIdx.z) * 128) + 88)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1157)] * input1_shared[((((int)threadIdx.z) * 128) + 89)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1170)] * input1_shared[((((int)threadIdx.z) * 128) + 90)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1183)] * input1_shared[((((int)threadIdx.z) * 128) + 91)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1196)] * input1_shared[((((int)threadIdx.z) * 128) + 92)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1209)] * input1_shared[((((int)threadIdx.z) * 128) + 93)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1222)] * input1_shared[((((int)threadIdx.z) * 128) + 94)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1235)] * input1_shared[((((int)threadIdx.z) * 128) + 95)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1248)] * input1_shared[((((int)threadIdx.z) * 128) + 96)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1261)] * input1_shared[((((int)threadIdx.z) * 128) + 97)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1274)] * input1_shared[((((int)threadIdx.z) * 128) + 98)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1287)] * input1_shared[((((int)threadIdx.z) * 128) + 99)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1300)] * input1_shared[((((int)threadIdx.z) * 128) + 100)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1313)] * input1_shared[((((int)threadIdx.z) * 128) + 101)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1326)] * input1_shared[((((int)threadIdx.z) * 128) + 102)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1339)] * input1_shared[((((int)threadIdx.z) * 128) + 103)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1352)] * input1_shared[((((int)threadIdx.z) * 128) + 104)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1365)] * input1_shared[((((int)threadIdx.z) * 128) + 105)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1378)] * input1_shared[((((int)threadIdx.z) * 128) + 106)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1391)] * input1_shared[((((int)threadIdx.z) * 128) + 107)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1404)] * input1_shared[((((int)threadIdx.z) * 128) + 108)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1417)] * input1_shared[((((int)threadIdx.z) * 128) + 109)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1430)] * input1_shared[((((int)threadIdx.z) * 128) + 110)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1443)] * input1_shared[((((int)threadIdx.z) * 128) + 111)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1456)] * input1_shared[((((int)threadIdx.z) * 128) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1469)] * input1_shared[((((int)threadIdx.z) * 128) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1482)] * input1_shared[((((int)threadIdx.z) * 128) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1495)] * input1_shared[((((int)threadIdx.z) * 128) + 115)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1508)] * input1_shared[((((int)threadIdx.z) * 128) + 116)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1521)] * input1_shared[((((int)threadIdx.z) * 128) + 117)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1534)] * input1_shared[((((int)threadIdx.z) * 128) + 118)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1547)] * input1_shared[((((int)threadIdx.z) * 128) + 119)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1560)] * input1_shared[((((int)threadIdx.z) * 128) + 120)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1573)] * input1_shared[((((int)threadIdx.z) * 128) + 121)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1586)] * input1_shared[((((int)threadIdx.z) * 128) + 122)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1599)] * input1_shared[((((int)threadIdx.z) * 128) + 123)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1612)] * input1_shared[((((int)threadIdx.z) * 128) + 124)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1625)] * input1_shared[((((int)threadIdx.z) * 128) + 125)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1638)] * input1_shared[((((int)threadIdx.z) * 128) + 126)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1651)] * input1_shared[((((int)threadIdx.z) * 128) + 127)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30))] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 1)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 1) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 2)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 2) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 3)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 3) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 4)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 4) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 5)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 5) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 6)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 6) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 7)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 7) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 8)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 8) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 9)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 9) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 10)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 10) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 11)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 11) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 12)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 12) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 13)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 201488)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 14)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 14) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 15)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 15) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 16)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 16) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 17)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 17) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 18)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 18) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 19)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 19) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 20)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 20) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 21)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 21) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 22)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 22) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 23)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 23) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 24)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 24) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 25)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 25) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13)) + 200704)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 26)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 202272)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 27)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 27) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 200704)];\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 28) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1636) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 28)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 28) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 200704)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 29) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1635) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 29)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 29) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 200704)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19))] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 256)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 1)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 257)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 2)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 258)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 3)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 259)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 4)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 260)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 5)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 261)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 6)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 262)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 7)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 263)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 8)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 264)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 9)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 265)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 10)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 266)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 11)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 267)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 12)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 268)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 13)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 269)];\n  if (((((((int)threadIdx.x) * 19) + 14) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1010) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 14)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 270)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 15) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1009) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 15)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 271)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 16) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1008) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 16)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 272)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 17) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1007) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 17)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 273)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 18) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1006) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 18)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 274)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 128)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 13)] * input1_shared[((((int)threadIdx.z) * 128) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 128) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 39)] * input1_shared[((((int)threadIdx.z) * 128) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 128) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 128) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 128) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 91)] * input1_shared[((((int)threadIdx.z) * 128) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 128) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 128) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 128) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 143)] * input1_shared[((((int)threadIdx.z) * 128) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 128) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 128) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 128) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 128) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 128) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 128) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 128) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 128) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 260)] * input1_shared[((((int)threadIdx.z) * 128) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 128) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 286)] * input1_shared[((((int)threadIdx.z) * 128) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 128) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 312)] * input1_shared[((((int)threadIdx.z) * 128) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 128) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 128) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 128) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 128) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 377)] * input1_shared[((((int)threadIdx.z) * 128) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 128) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 403)] * input1_shared[((((int)threadIdx.z) * 128) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 128) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 429)] * input1_shared[((((int)threadIdx.z) * 128) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 128) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 455)] * input1_shared[((((int)threadIdx.z) * 128) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 128) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 128) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 128) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 128) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 520)] * input1_shared[((((int)threadIdx.z) * 128) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 128) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 128) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 128) + 43)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 572)] * input1_shared[((((int)threadIdx.z) * 128) + 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 128) + 45)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 598)] * input1_shared[((((int)threadIdx.z) * 128) + 46)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 128) + 47)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 624)] * input1_shared[((((int)threadIdx.z) * 128) + 48)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 128) + 49)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 650)] * input1_shared[((((int)threadIdx.z) * 128) + 50)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 128) + 51)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 676)] * input1_shared[((((int)threadIdx.z) * 128) + 52)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 689)] * input1_shared[((((int)threadIdx.z) * 128) + 53)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 128) + 54)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 715)] * input1_shared[((((int)threadIdx.z) * 128) + 55)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 728)] * input1_shared[((((int)threadIdx.z) * 128) + 56)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 741)] * input1_shared[((((int)threadIdx.z) * 128) + 57)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 754)] * input1_shared[((((int)threadIdx.z) * 128) + 58)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 767)] * input1_shared[((((int)threadIdx.z) * 128) + 59)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 780)] * input1_shared[((((int)threadIdx.z) * 128) + 60)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 793)] * input1_shared[((((int)threadIdx.z) * 128) + 61)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 806)] * input1_shared[((((int)threadIdx.z) * 128) + 62)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 128) + 63)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 832)] * input1_shared[((((int)threadIdx.z) * 128) + 64)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 845)] * input1_shared[((((int)threadIdx.z) * 128) + 65)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 858)] * input1_shared[((((int)threadIdx.z) * 128) + 66)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 871)] * input1_shared[((((int)threadIdx.z) * 128) + 67)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 884)] * input1_shared[((((int)threadIdx.z) * 128) + 68)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 897)] * input1_shared[((((int)threadIdx.z) * 128) + 69)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 910)] * input1_shared[((((int)threadIdx.z) * 128) + 70)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 923)] * input1_shared[((((int)threadIdx.z) * 128) + 71)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 128) + 72)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 949)] * input1_shared[((((int)threadIdx.z) * 128) + 73)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 962)] * input1_shared[((((int)threadIdx.z) * 128) + 74)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 975)] * input1_shared[((((int)threadIdx.z) * 128) + 75)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 988)] * input1_shared[((((int)threadIdx.z) * 128) + 76)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1001)] * input1_shared[((((int)threadIdx.z) * 128) + 77)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1014)] * input1_shared[((((int)threadIdx.z) * 128) + 78)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1027)] * input1_shared[((((int)threadIdx.z) * 128) + 79)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1040)] * input1_shared[((((int)threadIdx.z) * 128) + 80)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 128) + 81)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1066)] * input1_shared[((((int)threadIdx.z) * 128) + 82)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1079)] * input1_shared[((((int)threadIdx.z) * 128) + 83)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1092)] * input1_shared[((((int)threadIdx.z) * 128) + 84)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1105)] * input1_shared[((((int)threadIdx.z) * 128) + 85)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1118)] * input1_shared[((((int)threadIdx.z) * 128) + 86)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1131)] * input1_shared[((((int)threadIdx.z) * 128) + 87)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1144)] * input1_shared[((((int)threadIdx.z) * 128) + 88)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1157)] * input1_shared[((((int)threadIdx.z) * 128) + 89)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1170)] * input1_shared[((((int)threadIdx.z) * 128) + 90)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1183)] * input1_shared[((((int)threadIdx.z) * 128) + 91)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1196)] * input1_shared[((((int)threadIdx.z) * 128) + 92)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1209)] * input1_shared[((((int)threadIdx.z) * 128) + 93)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1222)] * input1_shared[((((int)threadIdx.z) * 128) + 94)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1235)] * input1_shared[((((int)threadIdx.z) * 128) + 95)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1248)] * input1_shared[((((int)threadIdx.z) * 128) + 96)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1261)] * input1_shared[((((int)threadIdx.z) * 128) + 97)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1274)] * input1_shared[((((int)threadIdx.z) * 128) + 98)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1287)] * input1_shared[((((int)threadIdx.z) * 128) + 99)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1300)] * input1_shared[((((int)threadIdx.z) * 128) + 100)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1313)] * input1_shared[((((int)threadIdx.z) * 128) + 101)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1326)] * input1_shared[((((int)threadIdx.z) * 128) + 102)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1339)] * input1_shared[((((int)threadIdx.z) * 128) + 103)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1352)] * input1_shared[((((int)threadIdx.z) * 128) + 104)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1365)] * input1_shared[((((int)threadIdx.z) * 128) + 105)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1378)] * input1_shared[((((int)threadIdx.z) * 128) + 106)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1391)] * input1_shared[((((int)threadIdx.z) * 128) + 107)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1404)] * input1_shared[((((int)threadIdx.z) * 128) + 108)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1417)] * input1_shared[((((int)threadIdx.z) * 128) + 109)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1430)] * input1_shared[((((int)threadIdx.z) * 128) + 110)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1443)] * input1_shared[((((int)threadIdx.z) * 128) + 111)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1456)] * input1_shared[((((int)threadIdx.z) * 128) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1469)] * input1_shared[((((int)threadIdx.z) * 128) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1482)] * input1_shared[((((int)threadIdx.z) * 128) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1495)] * input1_shared[((((int)threadIdx.z) * 128) + 115)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1508)] * input1_shared[((((int)threadIdx.z) * 128) + 116)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1521)] * input1_shared[((((int)threadIdx.z) * 128) + 117)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1534)] * input1_shared[((((int)threadIdx.z) * 128) + 118)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1547)] * input1_shared[((((int)threadIdx.z) * 128) + 119)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1560)] * input1_shared[((((int)threadIdx.z) * 128) + 120)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1573)] * input1_shared[((((int)threadIdx.z) * 128) + 121)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1586)] * input1_shared[((((int)threadIdx.z) * 128) + 122)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1599)] * input1_shared[((((int)threadIdx.z) * 128) + 123)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1612)] * input1_shared[((((int)threadIdx.z) * 128) + 124)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1625)] * input1_shared[((((int)threadIdx.z) * 128) + 125)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1638)] * input1_shared[((((int)threadIdx.z) * 128) + 126)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1651)] * input1_shared[((((int)threadIdx.z) * 128) + 127)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30))] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 1)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 1) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 2)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 2) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 3)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 3) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 4)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 4) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 5)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 5) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 6)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 6) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 7)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 7) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 8)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 8) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 9)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 9) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 10)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 10) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 11)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 11) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 12)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 12) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 13)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 301840)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 14)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 14) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 15)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 15) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 16)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 16) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 17)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 17) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 4) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 18)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 18) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 5) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 19)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 19) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 6) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 20)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 20) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 7) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 21)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 21) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 8) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 22)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 22) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 9) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 23)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 23) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 10) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 24)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 24) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 11) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 25)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 25) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 12) % 13)) + 301056)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 26)] = input0[((((((((int)threadIdx.z) * 12544) + (((((int)threadIdx.x) * 30) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + ((((int)threadIdx.x) * 30) % 13)) + 302624)];\n  pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 27)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 27) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 1) % 13)) + 301056)];\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 28) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1636) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 28)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 28) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 2) % 13)) + 301056)];\n      }\n    }\n  }\n  if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 30) + 29) / 13)) < 128) {\n    if (((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) < 1635) {\n      if (((int)threadIdx.x) < 6) {\n        pad_temp_shared[(((((int)threadIdx.z) * 208) + (((int)threadIdx.x) * 30)) + 29)] = input0[((((((((int)threadIdx.z) * 12544) + ((((((int)threadIdx.x) * 30) + 29) / 13) * 784)) + (((int)blockIdx.y) * 56)) + (((int)blockIdx.x) * 14)) + (((((int)threadIdx.x) * 30) + 3) % 13)) + 301056)];\n      }\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19))] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 384)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 1)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 385)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 2)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 386)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 3)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 387)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 4)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 388)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 5)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 389)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 6)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 390)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 7)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 391)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 8)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 392)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 9)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 393)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 10)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 394)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 11)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 395)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 12)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 396)];\n  input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 13)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 397)];\n  if (((((((int)threadIdx.x) * 19) + 14) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1010) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 14)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 398)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 15) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1009) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 15)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 399)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 16) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1008) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 16)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 400)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 17) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1007) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 17)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 401)];\n      }\n    }\n  }\n  if (((((((int)threadIdx.x) * 19) + 18) >> 7) + ((int)threadIdx.z)) < 8) {\n    if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 1006) {\n      if (((int)threadIdx.x) < 6) {\n        input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 18)] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.x) * 19)) + 402)];\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 128)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 13)] * input1_shared[((((int)threadIdx.z) * 128) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 128) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 39)] * input1_shared[((((int)threadIdx.z) * 128) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 128) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 128) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 128) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 91)] * input1_shared[((((int)threadIdx.z) * 128) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 128) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 128) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 128) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 143)] * input1_shared[((((int)threadIdx.z) * 128) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 128) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 128) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 128) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 128) + 15)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 128) + 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 128) + 17)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 128) + 18)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 128) + 19)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 260)] * input1_shared[((((int)threadIdx.z) * 128) + 20)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 128) + 21)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 286)] * input1_shared[((((int)threadIdx.z) * 128) + 22)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 128) + 23)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 312)] * input1_shared[((((int)threadIdx.z) * 128) + 24)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 128) + 25)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 128) + 26)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 128) + 27)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 128) + 28)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 377)] * input1_shared[((((int)threadIdx.z) * 128) + 29)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 128) + 30)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 403)] * input1_shared[((((int)threadIdx.z) * 128) + 31)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 128) + 32)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 429)] * input1_shared[((((int)threadIdx.z) * 128) + 33)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 128) + 34)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 455)] * input1_shared[((((int)threadIdx.z) * 128) + 35)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 128) + 36)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 128) + 37)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 128) + 38)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 128) + 39)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 520)] * input1_shared[((((int)threadIdx.z) * 128) + 40)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 128) + 41)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 128) + 42)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 128) + 43)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 572)] * input1_shared[((((int)threadIdx.z) * 128) + 44)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 128) + 45)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 598)] * input1_shared[((((int)threadIdx.z) * 128) + 46)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 128) + 47)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 624)] * input1_shared[((((int)threadIdx.z) * 128) + 48)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 128) + 49)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 650)] * input1_shared[((((int)threadIdx.z) * 128) + 50)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 128) + 51)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 676)] * input1_shared[((((int)threadIdx.z) * 128) + 52)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 689)] * input1_shared[((((int)threadIdx.z) * 128) + 53)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 128) + 54)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 715)] * input1_shared[((((int)threadIdx.z) * 128) + 55)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 728)] * input1_shared[((((int)threadIdx.z) * 128) + 56)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 741)] * input1_shared[((((int)threadIdx.z) * 128) + 57)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 754)] * input1_shared[((((int)threadIdx.z) * 128) + 58)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 767)] * input1_shared[((((int)threadIdx.z) * 128) + 59)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 780)] * input1_shared[((((int)threadIdx.z) * 128) + 60)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 793)] * input1_shared[((((int)threadIdx.z) * 128) + 61)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 806)] * input1_shared[((((int)threadIdx.z) * 128) + 62)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 128) + 63)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 832)] * input1_shared[((((int)threadIdx.z) * 128) + 64)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 845)] * input1_shared[((((int)threadIdx.z) * 128) + 65)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 858)] * input1_shared[((((int)threadIdx.z) * 128) + 66)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 871)] * input1_shared[((((int)threadIdx.z) * 128) + 67)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 884)] * input1_shared[((((int)threadIdx.z) * 128) + 68)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 897)] * input1_shared[((((int)threadIdx.z) * 128) + 69)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 910)] * input1_shared[((((int)threadIdx.z) * 128) + 70)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 923)] * input1_shared[((((int)threadIdx.z) * 128) + 71)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 128) + 72)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 949)] * input1_shared[((((int)threadIdx.z) * 128) + 73)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 962)] * input1_shared[((((int)threadIdx.z) * 128) + 74)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 975)] * input1_shared[((((int)threadIdx.z) * 128) + 75)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 988)] * input1_shared[((((int)threadIdx.z) * 128) + 76)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1001)] * input1_shared[((((int)threadIdx.z) * 128) + 77)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1014)] * input1_shared[((((int)threadIdx.z) * 128) + 78)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1027)] * input1_shared[((((int)threadIdx.z) * 128) + 79)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1040)] * input1_shared[((((int)threadIdx.z) * 128) + 80)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 128) + 81)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1066)] * input1_shared[((((int)threadIdx.z) * 128) + 82)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1079)] * input1_shared[((((int)threadIdx.z) * 128) + 83)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1092)] * input1_shared[((((int)threadIdx.z) * 128) + 84)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1105)] * input1_shared[((((int)threadIdx.z) * 128) + 85)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1118)] * input1_shared[((((int)threadIdx.z) * 128) + 86)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1131)] * input1_shared[((((int)threadIdx.z) * 128) + 87)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1144)] * input1_shared[((((int)threadIdx.z) * 128) + 88)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1157)] * input1_shared[((((int)threadIdx.z) * 128) + 89)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1170)] * input1_shared[((((int)threadIdx.z) * 128) + 90)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1183)] * input1_shared[((((int)threadIdx.z) * 128) + 91)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1196)] * input1_shared[((((int)threadIdx.z) * 128) + 92)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1209)] * input1_shared[((((int)threadIdx.z) * 128) + 93)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1222)] * input1_shared[((((int)threadIdx.z) * 128) + 94)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1235)] * input1_shared[((((int)threadIdx.z) * 128) + 95)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1248)] * input1_shared[((((int)threadIdx.z) * 128) + 96)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1261)] * input1_shared[((((int)threadIdx.z) * 128) + 97)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1274)] * input1_shared[((((int)threadIdx.z) * 128) + 98)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1287)] * input1_shared[((((int)threadIdx.z) * 128) + 99)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1300)] * input1_shared[((((int)threadIdx.z) * 128) + 100)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1313)] * input1_shared[((((int)threadIdx.z) * 128) + 101)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1326)] * input1_shared[((((int)threadIdx.z) * 128) + 102)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1339)] * input1_shared[((((int)threadIdx.z) * 128) + 103)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1352)] * input1_shared[((((int)threadIdx.z) * 128) + 104)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1365)] * input1_shared[((((int)threadIdx.z) * 128) + 105)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1378)] * input1_shared[((((int)threadIdx.z) * 128) + 106)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1391)] * input1_shared[((((int)threadIdx.z) * 128) + 107)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1404)] * input1_shared[((((int)threadIdx.z) * 128) + 108)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1417)] * input1_shared[((((int)threadIdx.z) * 128) + 109)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1430)] * input1_shared[((((int)threadIdx.z) * 128) + 110)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1443)] * input1_shared[((((int)threadIdx.z) * 128) + 111)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1456)] * input1_shared[((((int)threadIdx.z) * 128) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1469)] * input1_shared[((((int)threadIdx.z) * 128) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1482)] * input1_shared[((((int)threadIdx.z) * 128) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1495)] * input1_shared[((((int)threadIdx.z) * 128) + 115)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1508)] * input1_shared[((((int)threadIdx.z) * 128) + 116)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1521)] * input1_shared[((((int)threadIdx.z) * 128) + 117)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1534)] * input1_shared[((((int)threadIdx.z) * 128) + 118)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1547)] * input1_shared[((((int)threadIdx.z) * 128) + 119)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1560)] * input1_shared[((((int)threadIdx.z) * 128) + 120)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1573)] * input1_shared[((((int)threadIdx.z) * 128) + 121)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1586)] * input1_shared[((((int)threadIdx.z) * 128) + 122)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1599)] * input1_shared[((((int)threadIdx.z) * 128) + 123)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1612)] * input1_shared[((((int)threadIdx.z) * 128) + 124)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1625)] * input1_shared[((((int)threadIdx.z) * 128) + 125)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1638)] * input1_shared[((((int)threadIdx.z) * 128) + 126)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1651)] * input1_shared[((((int)threadIdx.z) * 128) + 127)]));\n  compute[(((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + (((int)blockIdx.x) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [2, 14, 2], "blockDim": [7, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_32_7_7_w32_32_3_3_o1_32_7_7_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 32, 7, 7], "filter_shape": [32, 32, 3, 3], "output_shape": [1, 32, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_32_7_7_w32_32_3_3_o1_32_7_7_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[168];\n  __shared__ float input1_shared[192];\n  compute1[0] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 4; ++rc_outer) {\n    for (int ry_outer = 0; ry_outer < 3; ++ry_outer) {\n      __syncthreads();\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        pad_temp_shared[(((((int)threadIdx.z) * 21) + (((int)threadIdx.y) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= (((int)threadIdx.y) + ry_outer)) && ((((int)threadIdx.y) + ry_outer) < 8)) && (1 <= (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner + ((int)blockIdx.x)))) && ((ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner + ((int)blockIdx.x)) < 8)) ? input0[(((((((rc_outer * 392) + (((int)threadIdx.z) * 49)) + (ry_outer * 7)) + (((int)threadIdx.y) * 7)) + ((int)blockIdx.x)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) - 8)] : 0.000000e+00f);\n      }\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n        if (((((((int)threadIdx.y) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 24) + ((int)threadIdx.z)) < 8) {\n          if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.y) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 3)) < 64) {\n            if ((((((int)threadIdx.z) * 24) + (((int)threadIdx.y) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 192) {\n              if (((((int)threadIdx.y) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 24) {\n                input1_shared[(((((int)threadIdx.z) * 24) + (((int)threadIdx.y) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 2304) + (((int)threadIdx.z) * 288)) + (rc_outer * 72)) + ((((((int)threadIdx.y) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 3) * 9)) + (ry_outer * 3)) + (((((int)threadIdx.y) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 3))];\n              }\n            }\n          }\n        }\n      }\n      __syncthreads();\n      for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n        for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n          compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 21) + (((int)threadIdx.y) * 3)) + rx_inner)] * input1_shared[(((((int)threadIdx.z) * 24) + (rc_inner * 3)) + rx_inner)]));\n        }\n      }\n    }\n  }\n  compute[((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)blockIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [7, 1, 4], "blockDim": [1, 7, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_1024_14_14_w2048_1024_1_1_o1_2048_7_7_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [2048, 1024, 1, 1], "output_shape": [1, 2048, 7, 7], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_1024_14_14_w2048_1024_1_1_o1_2048_7_7_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[208];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) < 208) {\n      pad_temp_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.x))] = input0[((((rc_outer * 3136) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.x)) % 13))];\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4)) < 64) {\n        if ((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 1024) {\n          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 32) {\n            input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input1[(((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 15))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 13) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n      compute1[1] = (compute1[1] + (pad_temp_shared[((rc_inner * 13) + (((int)threadIdx.x) * 2))] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 512)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x)) + 1568)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 7, 32], "blockDim": [7, 1, 32]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_64_56_56_w4_64_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 64, 56, 56], "filter_shape": [4, 64, 1, 1], "output_shape": [1, 4, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_64_56_56_w4_64_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[448];\n  __shared__ float input1_shared[32];\n  compute1[0] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 56) * 3136)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 56))];\n    }\n    if (((((int)threadIdx.x) >> 3) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 32) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 64) + (rc_outer * 8)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 56) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n    }\n  }\n  compute[(((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [1, 56, 1], "blockDim": [56, 1, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_1024_14_14_w32_1024_1_1_o1_32_7_7_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [32, 1024, 1, 1], "output_shape": [1, 32, 7, 7], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_1024_14_14_w32_1024_1_1_o1_32_7_7_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[1664];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60))] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + (((((int)threadIdx.x) * 60) / 13) * 196)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 60) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 1)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 1) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 2)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 2) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 3)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 3) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 4)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 4) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 5)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 5) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 5) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 6)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 6) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 6) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 7)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 7) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 7) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 8)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 8) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 8) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 9)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 9) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 9) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 10)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 10) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 10) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 11)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 11) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 11) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 12)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 12) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 12) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 13)] = input0[((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + (((((int)threadIdx.x) * 60) / 13) * 196)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 60) % 13)) + 196)];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 14)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 14) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 15)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 15) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 16)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 16) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 17)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 17) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 18)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 18) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 5) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 19)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 19) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 6) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 20)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 20) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 7) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 21)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 21) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 8) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 22)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 22) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 9) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 23)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 23) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 10) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 24)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 24) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 11) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 25)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 25) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 12) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 26)] = input0[((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + (((((int)threadIdx.x) * 60) / 13) * 196)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 60) % 13)) + 392)];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 27)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 27) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 28)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 28) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 29)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 29) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 30)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 30) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 31)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 31) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 5) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 32)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 32) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 6) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 33)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 33) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 7) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 34)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 34) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 8) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 35)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 35) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 9) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 36)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 36) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 10) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 37)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 37) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 11) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 38)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 38) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 12) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 39)] = input0[((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + (((((int)threadIdx.x) * 60) / 13) * 196)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 60) % 13)) + 588)];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 40)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 40) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 41)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 41) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 42)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 42) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 3) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 43)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 43) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 4) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 44)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 44) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 5) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 45)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 45) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 6) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 46)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 46) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 7) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 47)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 47) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 8) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 48)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 48) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 9) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 49)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 49) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 10) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 50)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 50) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 11) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 51)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 51) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 12) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 52)] = input0[((((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + (((((int)threadIdx.x) * 60) / 13) * 196)) + (((int)blockIdx.y) * 28)) + ((((int)threadIdx.x) * 60) % 13)) + 784)];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 53)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 53) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 1) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 54)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 54) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 2) % 13))];\n    pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 55)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 55) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 3) % 13))];\n    if (((((int)threadIdx.z) * 32) + (((((int)threadIdx.x) * 60) + 56) / 13)) < 128) {\n      if (((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) < 1608) {\n        if (((int)threadIdx.x) < 6) {\n          pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 56)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 56) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 4) % 13))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 32) + (((((int)threadIdx.x) * 60) + 57) / 13)) < 128) {\n      if (((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) < 1607) {\n        if (((int)threadIdx.x) < 6) {\n          pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 57)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 57) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 5) % 13))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 32) + (((((int)threadIdx.x) * 60) + 58) / 13)) < 128) {\n      if (((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) < 1606) {\n        if (((int)threadIdx.x) < 6) {\n          pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 58)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 58) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 6) % 13))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 32) + (((((int)threadIdx.x) * 60) + 59) / 13)) < 128) {\n      if (((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) < 1605) {\n        if (((int)threadIdx.x) < 6) {\n          pad_temp_shared[(((((int)threadIdx.z) * 416) + (((int)threadIdx.x) * 60)) + 59)] = input0[(((((rc_outer * 25088) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 60) + 59) / 13) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 60) + 7) % 13))];\n        }\n      }\n    }\n    input1_shared[((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19))] = input1[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19))];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 1)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 1)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 2)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 2)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 3)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 3)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 4)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 4)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 5)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 5)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 6)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 6)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 7)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 7)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 8)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 8)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 9)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 9)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 10)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 10)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 11)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 11)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 12)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 12)];\n    input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 13)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 13)];\n    if (((((((int)threadIdx.x) * 19) + 14) >> 7) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 498) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 14)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 14)];\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 19) + 15) >> 7) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 497) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 15)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 15)];\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 19) + 16) >> 7) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 496) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 16)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 16)];\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 19) + 17) >> 7) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 495) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 17)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 17)];\n        }\n      }\n    }\n    if (((((((int)threadIdx.x) * 19) + 18) >> 7) + ((int)threadIdx.z)) < 4) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 494) {\n        if (((int)threadIdx.x) < 6) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 18)] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 1024)) + (rc_outer * 128)) + (((int)threadIdx.x) * 19)) + 18)];\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 128)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 13)] * input1_shared[((((int)threadIdx.z) * 128) + 1)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 26)] * input1_shared[((((int)threadIdx.z) * 128) + 2)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 39)] * input1_shared[((((int)threadIdx.z) * 128) + 3)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 52)] * input1_shared[((((int)threadIdx.z) * 128) + 4)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 128) + 5)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 78)] * input1_shared[((((int)threadIdx.z) * 128) + 6)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 91)] * input1_shared[((((int)threadIdx.z) * 128) + 7)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 104)] * input1_shared[((((int)threadIdx.z) * 128) + 8)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 117)] * input1_shared[((((int)threadIdx.z) * 128) + 9)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 130)] * input1_shared[((((int)threadIdx.z) * 128) + 10)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 143)] * input1_shared[((((int)threadIdx.z) * 128) + 11)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 156)] * input1_shared[((((int)threadIdx.z) * 128) + 12)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 169)] * input1_shared[((((int)threadIdx.z) * 128) + 13)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 182)] * input1_shared[((((int)threadIdx.z) * 128) + 14)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 195)] * input1_shared[((((int)threadIdx.z) * 128) + 15)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 128) + 16)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 221)] * input1_shared[((((int)threadIdx.z) * 128) + 17)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 234)] * input1_shared[((((int)threadIdx.z) * 128) + 18)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 247)] * input1_shared[((((int)threadIdx.z) * 128) + 19)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 260)] * input1_shared[((((int)threadIdx.z) * 128) + 20)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 273)] * input1_shared[((((int)threadIdx.z) * 128) + 21)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 286)] * input1_shared[((((int)threadIdx.z) * 128) + 22)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 299)] * input1_shared[((((int)threadIdx.z) * 128) + 23)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 312)] * input1_shared[((((int)threadIdx.z) * 128) + 24)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 325)] * input1_shared[((((int)threadIdx.z) * 128) + 25)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 338)] * input1_shared[((((int)threadIdx.z) * 128) + 26)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 351)] * input1_shared[((((int)threadIdx.z) * 128) + 27)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 364)] * input1_shared[((((int)threadIdx.z) * 128) + 28)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 377)] * input1_shared[((((int)threadIdx.z) * 128) + 29)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 390)] * input1_shared[((((int)threadIdx.z) * 128) + 30)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 403)] * input1_shared[((((int)threadIdx.z) * 128) + 31)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 416)] * input1_shared[((((int)threadIdx.z) * 128) + 32)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 429)] * input1_shared[((((int)threadIdx.z) * 128) + 33)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 442)] * input1_shared[((((int)threadIdx.z) * 128) + 34)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 455)] * input1_shared[((((int)threadIdx.z) * 128) + 35)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 468)] * input1_shared[((((int)threadIdx.z) * 128) + 36)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 481)] * input1_shared[((((int)threadIdx.z) * 128) + 37)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 494)] * input1_shared[((((int)threadIdx.z) * 128) + 38)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 507)] * input1_shared[((((int)threadIdx.z) * 128) + 39)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 520)] * input1_shared[((((int)threadIdx.z) * 128) + 40)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 533)] * input1_shared[((((int)threadIdx.z) * 128) + 41)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 546)] * input1_shared[((((int)threadIdx.z) * 128) + 42)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 559)] * input1_shared[((((int)threadIdx.z) * 128) + 43)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 572)] * input1_shared[((((int)threadIdx.z) * 128) + 44)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 585)] * input1_shared[((((int)threadIdx.z) * 128) + 45)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 598)] * input1_shared[((((int)threadIdx.z) * 128) + 46)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 611)] * input1_shared[((((int)threadIdx.z) * 128) + 47)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 624)] * input1_shared[((((int)threadIdx.z) * 128) + 48)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 637)] * input1_shared[((((int)threadIdx.z) * 128) + 49)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 650)] * input1_shared[((((int)threadIdx.z) * 128) + 50)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 663)] * input1_shared[((((int)threadIdx.z) * 128) + 51)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 676)] * input1_shared[((((int)threadIdx.z) * 128) + 52)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 689)] * input1_shared[((((int)threadIdx.z) * 128) + 53)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 702)] * input1_shared[((((int)threadIdx.z) * 128) + 54)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 715)] * input1_shared[((((int)threadIdx.z) * 128) + 55)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 728)] * input1_shared[((((int)threadIdx.z) * 128) + 56)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 741)] * input1_shared[((((int)threadIdx.z) * 128) + 57)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 754)] * input1_shared[((((int)threadIdx.z) * 128) + 58)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 767)] * input1_shared[((((int)threadIdx.z) * 128) + 59)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 780)] * input1_shared[((((int)threadIdx.z) * 128) + 60)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 793)] * input1_shared[((((int)threadIdx.z) * 128) + 61)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 806)] * input1_shared[((((int)threadIdx.z) * 128) + 62)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 819)] * input1_shared[((((int)threadIdx.z) * 128) + 63)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 832)] * input1_shared[((((int)threadIdx.z) * 128) + 64)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 845)] * input1_shared[((((int)threadIdx.z) * 128) + 65)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 858)] * input1_shared[((((int)threadIdx.z) * 128) + 66)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 871)] * input1_shared[((((int)threadIdx.z) * 128) + 67)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 884)] * input1_shared[((((int)threadIdx.z) * 128) + 68)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 897)] * input1_shared[((((int)threadIdx.z) * 128) + 69)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 910)] * input1_shared[((((int)threadIdx.z) * 128) + 70)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 923)] * input1_shared[((((int)threadIdx.z) * 128) + 71)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 936)] * input1_shared[((((int)threadIdx.z) * 128) + 72)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 949)] * input1_shared[((((int)threadIdx.z) * 128) + 73)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 962)] * input1_shared[((((int)threadIdx.z) * 128) + 74)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 975)] * input1_shared[((((int)threadIdx.z) * 128) + 75)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 988)] * input1_shared[((((int)threadIdx.z) * 128) + 76)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1001)] * input1_shared[((((int)threadIdx.z) * 128) + 77)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1014)] * input1_shared[((((int)threadIdx.z) * 128) + 78)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1027)] * input1_shared[((((int)threadIdx.z) * 128) + 79)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1040)] * input1_shared[((((int)threadIdx.z) * 128) + 80)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1053)] * input1_shared[((((int)threadIdx.z) * 128) + 81)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1066)] * input1_shared[((((int)threadIdx.z) * 128) + 82)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1079)] * input1_shared[((((int)threadIdx.z) * 128) + 83)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1092)] * input1_shared[((((int)threadIdx.z) * 128) + 84)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1105)] * input1_shared[((((int)threadIdx.z) * 128) + 85)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1118)] * input1_shared[((((int)threadIdx.z) * 128) + 86)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1131)] * input1_shared[((((int)threadIdx.z) * 128) + 87)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1144)] * input1_shared[((((int)threadIdx.z) * 128) + 88)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1157)] * input1_shared[((((int)threadIdx.z) * 128) + 89)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1170)] * input1_shared[((((int)threadIdx.z) * 128) + 90)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1183)] * input1_shared[((((int)threadIdx.z) * 128) + 91)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1196)] * input1_shared[((((int)threadIdx.z) * 128) + 92)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1209)] * input1_shared[((((int)threadIdx.z) * 128) + 93)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1222)] * input1_shared[((((int)threadIdx.z) * 128) + 94)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1235)] * input1_shared[((((int)threadIdx.z) * 128) + 95)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1248)] * input1_shared[((((int)threadIdx.z) * 128) + 96)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1261)] * input1_shared[((((int)threadIdx.z) * 128) + 97)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1274)] * input1_shared[((((int)threadIdx.z) * 128) + 98)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1287)] * input1_shared[((((int)threadIdx.z) * 128) + 99)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1300)] * input1_shared[((((int)threadIdx.z) * 128) + 100)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1313)] * input1_shared[((((int)threadIdx.z) * 128) + 101)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1326)] * input1_shared[((((int)threadIdx.z) * 128) + 102)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1339)] * input1_shared[((((int)threadIdx.z) * 128) + 103)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1352)] * input1_shared[((((int)threadIdx.z) * 128) + 104)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1365)] * input1_shared[((((int)threadIdx.z) * 128) + 105)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1378)] * input1_shared[((((int)threadIdx.z) * 128) + 106)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1391)] * input1_shared[((((int)threadIdx.z) * 128) + 107)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1404)] * input1_shared[((((int)threadIdx.z) * 128) + 108)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1417)] * input1_shared[((((int)threadIdx.z) * 128) + 109)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1430)] * input1_shared[((((int)threadIdx.z) * 128) + 110)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1443)] * input1_shared[((((int)threadIdx.z) * 128) + 111)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1456)] * input1_shared[((((int)threadIdx.z) * 128) + 112)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1469)] * input1_shared[((((int)threadIdx.z) * 128) + 113)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1482)] * input1_shared[((((int)threadIdx.z) * 128) + 114)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1495)] * input1_shared[((((int)threadIdx.z) * 128) + 115)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1508)] * input1_shared[((((int)threadIdx.z) * 128) + 116)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1521)] * input1_shared[((((int)threadIdx.z) * 128) + 117)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1534)] * input1_shared[((((int)threadIdx.z) * 128) + 118)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1547)] * input1_shared[((((int)threadIdx.z) * 128) + 119)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1560)] * input1_shared[((((int)threadIdx.z) * 128) + 120)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1573)] * input1_shared[((((int)threadIdx.z) * 128) + 121)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1586)] * input1_shared[((((int)threadIdx.z) * 128) + 122)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1599)] * input1_shared[((((int)threadIdx.z) * 128) + 123)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1612)] * input1_shared[((((int)threadIdx.z) * 128) + 124)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1625)] * input1_shared[((((int)threadIdx.z) * 128) + 125)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1638)] * input1_shared[((((int)threadIdx.z) * 128) + 126)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1651)] * input1_shared[((((int)threadIdx.z) * 128) + 127)]));\n  }\n  compute[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 49)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [1, 7, 8], "blockDim": [7, 1, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_1024_14_14_w1024_1024_1_1_o1_1024_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [1024, 1024, 1, 1], "output_shape": [1, 1024, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_1024_14_14_w1024_1024_1_1_o1_1024_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[448];\n  __shared__ float input1_shared[512];\n  for (int yy_init = 0; yy_init < 2; ++yy_init) {\n    compute1[yy_init] = 0.000000e+00f;\n    compute1[(yy_init + 2)] = 0.000000e+00f;\n    compute1[(yy_init + 4)] = 0.000000e+00f;\n    compute1[(yy_init + 6)] = 0.000000e+00f;\n  }\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 56) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 3136) + (((int)threadIdx.z) * 392)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 196)) + (((int)blockIdx.y) * 28)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28))];\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4)) < 32) {\n        if ((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 512) {\n          if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 64) {\n            input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 1024)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15))];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      for (int yy = 0; yy < 2; ++yy) {\n        compute1[yy] = (compute1[yy] + (pad_temp_shared[(((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n        compute1[(yy + 2)] = (compute1[(yy + 2)] + (pad_temp_shared[(((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 128)]));\n        compute1[(yy + 4)] = (compute1[(yy + 4)] + (pad_temp_shared[(((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 256)]));\n        compute1[(yy + 6)] = (compute1[(yy + 6)] + (pad_temp_shared[(((rc_inner * 28) + (yy * 14)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 384)]));\n      }\n    }\n  }\n  for (int i2_inner_inner_inner = 0; i2_inner_inner_inner < 2; ++i2_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (i2_inner_inner_inner * 14)) + ((int)threadIdx.x))] = max(compute1[i2_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (i2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 1568)] = max(compute1[(i2_inner_inner_inner + 2)], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (i2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 3136)] = max(compute1[(i2_inner_inner_inner + 4)], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (i2_inner_inner_inner * 14)) + ((int)threadIdx.x)) + 4704)] = max(compute1[(i2_inner_inner_inner + 6)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 7, 32], "blockDim": [14, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_256_56_56_w256_256_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [256, 256, 1, 1], "output_shape": [1, 256, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_256_56_56_w256_256_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[16];\n  __shared__ float pad_temp_shared[896];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[8] = 0.000000e+00f;\n  compute1[10] = 0.000000e+00f;\n  compute1[12] = 0.000000e+00f;\n  compute1[14] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  compute1[9] = 0.000000e+00f;\n  compute1[11] = 0.000000e+00f;\n  compute1[13] = 0.000000e+00f;\n  compute1[15] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4))] = input0[(((((rc_outer * 50176) + (((int)threadIdx.z) * 6272)) + ((((int)threadIdx.x) / 14) * 3136)) + (((int)blockIdx.y) * 56)) + ((((int)threadIdx.x) % 14) * 4))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 1)] = input0[(((((rc_outer * 50176) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 4) + 1) / 56) * 3136)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 4) + 1) % 56))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 2)] = input0[(((((rc_outer * 50176) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 4) + 2) / 56) * 3136)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 4) + 2) % 56))];\n    pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 4)) + 3)] = input0[(((((rc_outer * 50176) + (((int)threadIdx.z) * 6272)) + ((((((int)threadIdx.x) * 4) + 3) / 56) * 3136)) + (((int)blockIdx.y) * 56)) + (((((int)threadIdx.x) * 4) + 3) % 56))];\n    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 5) / 16)) < 64) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 1024) {\n        if (((int)threadIdx.x) < 26) {\n          input1_shared[((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 5) / 16) * 256)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 5) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 1) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 1023) {\n        if (((int)threadIdx.x) < 26) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 1)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 1) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 1) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 2) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 1022) {\n        if (((int)threadIdx.x) < 26) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 2)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 2) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 2) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 3) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 1021) {\n        if (((int)threadIdx.x) < 25) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 3)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 3) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 3) & 15))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 5) + 4) >> 4)) < 64) {\n      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) < 1020) {\n        if (((int)threadIdx.x) < 25) {\n          input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 5)) + 4)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 5) + 4) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 5) + 4) & 15))];\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 128)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 384)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 512)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 640)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 768)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[((int)threadIdx.x)] * input1_shared[((((int)threadIdx.z) * 16) + 896)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 128)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 256)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 384)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 512)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 640)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 768)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 896)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 129)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 385)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 513)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 641)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 769)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 56)] * input1_shared[((((int)threadIdx.z) * 16) + 897)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 129)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 257)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 385)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 513)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 641)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 769)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 897)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 130)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 386)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 514)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 642)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 770)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 898)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 130)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 258)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 386)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 514)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 642)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 770)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 140)] * input1_shared[((((int)threadIdx.z) * 16) + 898)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 131)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 387)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 515)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 643)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 771)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 168)] * input1_shared[((((int)threadIdx.z) * 16) + 899)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 131)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 259)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 387)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 515)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 643)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 771)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 899)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 132)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 388)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 516)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 644)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 772)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 900)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 132)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 260)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 388)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 516)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 644)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 772)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 252)] * input1_shared[((((int)threadIdx.z) * 16) + 900)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 133)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 389)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 517)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 645)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 773)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 280)] * input1_shared[((((int)threadIdx.z) * 16) + 901)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 133)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 261)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 389)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 517)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 645)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 773)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 308)] * input1_shared[((((int)threadIdx.z) * 16) + 901)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 134)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 390)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 518)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 646)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 774)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 336)] * input1_shared[((((int)threadIdx.z) * 16) + 902)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 134)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 262)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 390)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 518)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 646)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 774)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 364)] * input1_shared[((((int)threadIdx.z) * 16) + 902)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 135)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 391)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 519)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 647)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 775)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 392)] * input1_shared[((((int)threadIdx.z) * 16) + 903)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 135)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 263)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 391)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 519)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 647)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 775)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 420)] * input1_shared[((((int)threadIdx.z) * 16) + 903)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 136)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 392)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 520)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 648)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 776)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 448)] * input1_shared[((((int)threadIdx.z) * 16) + 904)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 136)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 264)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 392)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 520)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 648)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 776)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 476)] * input1_shared[((((int)threadIdx.z) * 16) + 904)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 137)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 393)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 521)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 649)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 777)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 504)] * input1_shared[((((int)threadIdx.z) * 16) + 905)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 137)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 265)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 393)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 521)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 649)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 777)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 532)] * input1_shared[((((int)threadIdx.z) * 16) + 905)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 138)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 394)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 522)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 650)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 778)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 560)] * input1_shared[((((int)threadIdx.z) * 16) + 906)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 138)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 266)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 394)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 522)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 650)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 778)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 588)] * input1_shared[((((int)threadIdx.z) * 16) + 906)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 139)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 395)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 523)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 651)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 779)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 616)] * input1_shared[((((int)threadIdx.z) * 16) + 907)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 139)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 267)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 395)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 523)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 651)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 779)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 644)] * input1_shared[((((int)threadIdx.z) * 16) + 907)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 140)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 396)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 524)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 652)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 780)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 672)] * input1_shared[((((int)threadIdx.z) * 16) + 908)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 140)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 268)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 396)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 524)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 652)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 780)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 700)] * input1_shared[((((int)threadIdx.z) * 16) + 908)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 141)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 397)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 525)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 653)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 781)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 728)] * input1_shared[((((int)threadIdx.z) * 16) + 909)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 141)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 269)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 397)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 525)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 653)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 781)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 756)] * input1_shared[((((int)threadIdx.z) * 16) + 909)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 142)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 398)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 526)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 654)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 782)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 784)] * input1_shared[((((int)threadIdx.z) * 16) + 910)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 142)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 270)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 398)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 526)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 654)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 782)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 812)] * input1_shared[((((int)threadIdx.z) * 16) + 910)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 143)]));\n    compute1[4] = (compute1[4] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n    compute1[6] = (compute1[6] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 399)]));\n    compute1[8] = (compute1[8] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 527)]));\n    compute1[10] = (compute1[10] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 655)]));\n    compute1[12] = (compute1[12] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 783)]));\n    compute1[14] = (compute1[14] + (pad_temp_shared[(((int)threadIdx.x) + 840)] * input1_shared[((((int)threadIdx.z) * 16) + 911)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 143)]));\n    compute1[5] = (compute1[5] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 271)]));\n    compute1[7] = (compute1[7] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 399)]));\n    compute1[9] = (compute1[9] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 527)]));\n    compute1[11] = (compute1[11] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 655)]));\n    compute1[13] = (compute1[13] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 783)]));\n    compute1[15] = (compute1[15] + (pad_temp_shared[(((int)threadIdx.x) + 868)] * input1_shared[((((int)threadIdx.z) * 16) + 911)]));\n  }\n  compute[((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 25088)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 50176)] = max(compute1[4], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 75264)] = max(compute1[6], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 100352)] = max(compute1[8], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 125440)] = max(compute1[10], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 150528)] = max(compute1[12], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 175616)] = max(compute1[14], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 28)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 25116)] = max(compute1[3], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 50204)] = max(compute1[5], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 75292)] = max(compute1[7], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 100380)] = max(compute1[9], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 125468)] = max(compute1[11], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 150556)] = max(compute1[13], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 200704) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 56)) + ((int)threadIdx.x)) + 175644)] = max(compute1[15], 0.000000e+00f);\n}\n\n", "gridDim": [1, 56, 4], "blockDim": [28, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_8_28_28_w8_8_3_3_o1_8_28_28_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 8, 28, 28], "filter_shape": [8, 8, 3, 3], "output_shape": [1, 8, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_8_28_28_w8_8_3_3_o1_8_28_28_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[192];\n  __shared__ float input1_shared[288];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n    pad_temp_shared[((((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 24)) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= ((((int)blockIdx.y) * 2) + ((int)threadIdx.x))) && (((((int)blockIdx.y) * 2) + ((int)threadIdx.x)) < 29)) && (1 <= ((((int)blockIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))) && (((((int)blockIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 29)) ? input0[(((((((((int)threadIdx.z) * 1568) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.x) * 28)) + (((int)blockIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) - 29)] : 0.000000e+00f);\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n    input1_shared[((((((int)threadIdx.z) * 72) + (((int)threadIdx.y) * 36)) + (((int)threadIdx.x) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 72)) + (((int)threadIdx.y) * 36)) + (((int)threadIdx.x) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n  }\n  __syncthreads();\n  #pragma unroll\n  for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n    #pragma unroll\n    for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n      #pragma unroll\n      for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n        compute1[0] = (compute1[0] + (pad_temp_shared[(((((rc_inner * 24) + (((int)threadIdx.y) * 6)) + (ry_inner * 6)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 72) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner)]));\n      }\n    }\n  }\n  compute[((((((((int)blockIdx.z) * 3136) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [7, 14, 2], "blockDim": [4, 2, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_16_14_14_w16_16_3_3_o1_16_14_14_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 16, 14, 14], "filter_shape": [16, 16, 3, 3], "output_shape": [1, 16, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_16_14_14_w16_16_3_3_o1_16_14_14_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[336];\n  __shared__ float input1_shared[192];\n  compute1[0] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 2; ++rc_outer) {\n    for (int rx_outer = 0; rx_outer < 3; ++rx_outer) {\n      __syncthreads();\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        pad_temp_shared[(((((int)threadIdx.z) * 42) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14) + ((int)blockIdx.y))) && (((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 14) + ((int)blockIdx.y)) < 15)) && (1 <= (rx_outer + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 14)))) && ((rx_outer + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 14)) < 15)) ? input0[(((((((rc_outer * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + (((int)threadIdx.x) * 3)) + rx_outer) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) - 15)] : 0.000000e+00f);\n      }\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n        if (((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 24) + ((int)threadIdx.z)) < 8) {\n          if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 3)) < 64) {\n            if ((((((int)threadIdx.z) * 24) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 192) {\n              if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 24) {\n                input1_shared[(((((int)threadIdx.z) * 24) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 144)) + (rc_outer * 72)) + (((int)threadIdx.x) * 6)) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 * 3)) + rx_outer)];\n              }\n            }\n          }\n        }\n      }\n      __syncthreads();\n      for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n        for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n          compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 42) + (ry_inner * 14)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 24) + (rc_inner * 3)) + ry_inner)]));\n        }\n      }\n    }\n  }\n  compute[((((((int)blockIdx.z) * 1568) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 14)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [1, 14, 2], "blockDim": [14, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_1024_14_14_w16_1024_1_1_o1_16_14_14_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 1024, 14, 14], "filter_shape": [16, 1024, 1, 1], "output_shape": [1, 16, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_1024_14_14_w16_1024_1_1_o1_16_14_14_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[64];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {\n    __syncthreads();\n    pad_temp_shared[(((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x))] = input0[((((((rc_outer * 3136) + (((int)threadIdx.z) * 196)) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + (((int)blockIdx.x) * 2)) + ((int)threadIdx.x))];\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input1[(((((((int)threadIdx.z) * 1024) + (rc_outer * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 4) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n    }\n  }\n  compute[(((((((int)threadIdx.z) * 196) + (((int)blockIdx.y) * 28)) + (((int)threadIdx.y) * 14)) + (((int)blockIdx.x) * 2)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [7, 7, 1], "blockDim": [2, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_512_28_28_w8_512_1_1_o1_8_28_28_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 512, 28, 28], "filter_shape": [8, 512, 1, 1], "output_shape": [1, 8, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_512_28_28_w8_512_1_1_o1_8_28_28_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[64];\n  __shared__ float input1_shared[64];\n  compute1[0] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 6272)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 8)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 12544)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 16)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 18816)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 24)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 25088)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 32)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 31360)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 40)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 37632)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 48)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 43904)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 56)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 50176)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 64)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 56448)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 72)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 62720)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 80)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 68992)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 88)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 75264)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 96)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 81536)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 104)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 87808)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 112)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 94080)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 120)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 100352)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 128)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 106624)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 136)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 112896)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 144)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 119168)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 152)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 125440)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 160)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 131712)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 168)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 137984)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 176)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 144256)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 184)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 150528)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 192)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 156800)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 200)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 163072)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 208)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 169344)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 216)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 175616)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 224)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 181888)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 232)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 188160)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 240)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 194432)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 248)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 200704)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 256)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 206976)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 264)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 213248)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 272)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 219520)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 280)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 225792)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 288)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 232064)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 296)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 238336)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 304)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 244608)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 312)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 250880)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 320)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 257152)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 328)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 263424)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 336)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 269696)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 344)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 275968)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 352)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 282240)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 360)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 288512)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 368)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 294784)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 376)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 301056)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 384)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 307328)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 392)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 313600)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 400)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 319872)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 408)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 326144)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 416)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 332416)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 424)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 338688)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 432)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 344960)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 440)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 351232)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 448)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 357504)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 456)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 363776)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 464)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 370048)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 472)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 376320)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 480)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 382592)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 488)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 388864)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 496)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input0[((((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 395136)];\n  input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 504)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 4) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 8)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 24)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 40)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) + 56)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  compute[(((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 56)) + (((int)threadIdx.y) * 28)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [7, 14, 1], "blockDim": [4, 2, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_256_56_56_w8_256_1_1_o1_8_28_28_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [8, 256, 1, 1], "output_shape": [1, 8, 28, 28], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_256_56_56_w8_256_1_1_o1_8_28_28_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[216];\n  __shared__ float input1_shared[64];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if (((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 27) + ((int)threadIdx.z)) < 8) {\n        if ((((((int)threadIdx.z) * 27) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 216) {\n          if (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 27) {\n            pad_temp_shared[(((((int)threadIdx.z) * 27) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 25088) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)blockIdx.x) * 28)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n          }\n        }\n      }\n    }\n    if (((((int)threadIdx.x) >> 3) + ((int)threadIdx.z)) < 8) {\n      if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 64) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 8) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 256) + (rc_outer * 8)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 27) + (((int)threadIdx.x) * 2))] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n    }\n  }\n  compute[((((((int)threadIdx.z) * 784) + (((int)blockIdx.y) * 28)) + (((int)blockIdx.x) * 14)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [2, 28, 1], "blockDim": [14, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_256_56_56_w512_256_1_1_o1_512_28_28_ws2_2_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [512, 256, 1, 1], "output_shape": [1, 512, 28, 28], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_256_56_56_w512_256_1_1_o1_512_28_28_ws2_2_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[440];\n  __shared__ float input1_shared[512];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) < 440) {\n      pad_temp_shared[((((int)threadIdx.z) * 14) + ((int)threadIdx.x))] = input0[((((rc_outer * 25088) + ((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) / 55) * 3136)) + (((int)blockIdx.y) * 112)) + (((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) % 55))];\n    }\n    if (((((int)threadIdx.z) * 2) + (((int)threadIdx.x) >> 2)) < 64) {\n      if (((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) < 512) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + ((((int)threadIdx.x) >> 2) * 256)) + (rc_outer * 8)) + ((((int)threadIdx.x) & 3) * 2))];\n        }\n      }\n    }\n    if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.x) * 2) + 1) >> 3)) < 64) {\n      if (((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) < 511) {\n        if (((int)threadIdx.x) < 8) {\n          input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7))];\n        }\n      }\n    }\n    __syncthreads();\n    compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[(((int)threadIdx.z) * 16)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 28)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 55)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 83)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 55)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 83)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 110)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 138)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 110)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 138)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 165)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 220)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 248)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 220)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 248)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 275)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 303)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 275)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 303)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 330)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 358)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 330)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 358)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n    compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 385)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 413)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n    compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 385)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n    compute1[3] = (compute1[3] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 413)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  }\n  compute[((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 14)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 784)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 1568)) + (((int)blockIdx.y) * 28)) + ((int)threadIdx.x)) + 798)] = max(compute1[3], 0.000000e+00f);\n}\n\n", "gridDim": [1, 28, 8], "blockDim": [14, 1, 32]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_2048_7_7_w32_2048_1_1_o1_32_7_7_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 2048, 7, 7], "filter_shape": [32, 2048, 1, 1], "output_shape": [1, 32, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_2048_7_7_w32_2048_1_1_o1_32_7_7_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[896];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 16; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 16)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 6272) + (((int)threadIdx.z) * 784)) + (((int)threadIdx.y) * 112)) + (ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner * 7)) + ((int)blockIdx.x))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 19; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      if (((((((int)threadIdx.y) * 19) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 7) + ((int)threadIdx.z)) < 8) {\n        if ((((((int)threadIdx.z) * 128) + (((int)threadIdx.y) * 19)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 1024) {\n          if (((((int)threadIdx.y) * 19) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {\n            input1_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.y) * 19)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (rc_outer * 128)) + (((int)threadIdx.y) * 19)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n          }\n        }\n      }\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 128; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 7) + ((int)threadIdx.y))] * input1_shared[((((int)threadIdx.z) * 128) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + ((int)blockIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [7, 1, 4], "blockDim": [1, 7, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_4_56_56_w4_4_3_3_o1_4_56_56_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 4, 56, 56], "filter_shape": [4, 4, 3, 3], "output_shape": [1, 4, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_4_56_56_w4_4_3_3_o1_4_56_56_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[224];\n  __shared__ float input1_shared[24];\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n  }\n  for (int rc_outer = 0; rc_outer < 2; ++rc_outer) {\n    for (int rx_outer = 0; rx_outer < 3; ++rx_outer) {\n      __syncthreads();\n      for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n        pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.y) * 56)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = (((((1 <= (((((int)blockIdx.y) * 2) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28))) && ((((((int)blockIdx.y) * 2) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28)) < 57)) && (1 <= (((((int)blockIdx.x) * 28) + rx_outer) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28)))) && ((((((int)blockIdx.x) * 28) + rx_outer) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28)) < 57)) ? input0[(((((((((rc_outer * 6272) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 28) * 56)) + (((int)blockIdx.x) * 28)) + rx_outer) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 28)) - 57)] : 0.000000e+00f);\n      }\n      if ((((((int)threadIdx.z) * 2) + (((int)threadIdx.x) / 6)) + ((int)threadIdx.y)) < 4) {\n        if ((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + (((int)threadIdx.x) / 3)) < 8) {\n          if ((((((int)threadIdx.z) * 12) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) < 24) {\n            if (((((int)threadIdx.y) * 6) + ((int)threadIdx.x)) < 12) {\n              if (((int)threadIdx.x) < 6) {\n                input1_shared[(((((int)threadIdx.z) * 12) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x))] = input1[(((((((int)threadIdx.z) * 72) + (((int)threadIdx.y) * 36)) + (rc_outer * 18)) + (((int)threadIdx.x) * 3)) + rx_outer)];\n              }\n            }\n          }\n        }\n      }\n      __syncthreads();\n      for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {\n        for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {\n          for (int ff = 0; ff < 2; ++ff) {\n            compute1[ff] = (compute1[ff] + (pad_temp_shared[((((rc_inner * 112) + (((int)threadIdx.y) * 28)) + (ry_inner * 28)) + ((int)threadIdx.x))] * input1_shared[((((((int)threadIdx.z) * 12) + (ff * 6)) + (rc_inner * 3)) + ry_inner)]));\n          }\n        }\n      }\n    }\n  }\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[((((((((int)threadIdx.z) * 6272) + (i1_inner_inner_inner * 3136)) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [2, 28, 1], "blockDim": [28, 2, 2]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_64_56_56_w256_64_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 64, 56, 56], "filter_shape": [256, 64, 1, 1], "output_shape": [1, 256, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_64_56_56_w256_64_1_1_o1_256_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[16];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[128];\n  compute1[0] = 0.000000e+00f;\n  compute1[2] = 0.000000e+00f;\n  compute1[4] = 0.000000e+00f;\n  compute1[6] = 0.000000e+00f;\n  compute1[8] = 0.000000e+00f;\n  compute1[10] = 0.000000e+00f;\n  compute1[12] = 0.000000e+00f;\n  compute1[14] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  compute1[3] = 0.000000e+00f;\n  compute1[5] = 0.000000e+00f;\n  compute1[7] = 0.000000e+00f;\n  compute1[9] = 0.000000e+00f;\n  compute1[11] = 0.000000e+00f;\n  compute1[13] = 0.000000e+00f;\n  compute1[15] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7))];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3))];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 12544)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 12544)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 4)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 25088)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 25088)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 8)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 37632)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 37632)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 12)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 50176)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 50176)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 16)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 62720)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 62720)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 20)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 75264)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 75264)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 24)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 87808)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 87808)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 28)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 100352)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 100352)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 32)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 112896)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 112896)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 36)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 125440)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 125440)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 40)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 137984)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 137984)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 44)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 150528)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 150528)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 48)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 163072)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 163072)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 52)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 175616)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 175616)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 56)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 188160)];\n  pad_temp_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 188160)];\n  input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((int)threadIdx.x) >> 2) * 64)) + (((int)threadIdx.x) & 3)) + 60)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[(((int)threadIdx.z) * 4)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 16)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 32)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 48)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 64)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 80)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 96)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 4) + 112)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 1)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 17)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 33)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 49)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 65)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 81)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 97)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 4) + 113)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 2)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 18)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 34)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 50)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 66)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 82)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 98)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 4) + 114)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[2] = (compute1[2] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[4] = (compute1[4] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[6] = (compute1[6] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[8] = (compute1[8] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[10] = (compute1[10] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[12] = (compute1[12] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[14] = (compute1[14] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 3)]));\n  compute1[3] = (compute1[3] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 19)]));\n  compute1[5] = (compute1[5] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 35)]));\n  compute1[7] = (compute1[7] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 51)]));\n  compute1[9] = (compute1[9] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 67)]));\n  compute1[11] = (compute1[11] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 83)]));\n  compute1[13] = (compute1[13] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 99)]));\n  compute1[15] = (compute1[15] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 4) + 115)]));\n  compute[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 12544)] = max(compute1[2], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 25088)] = max(compute1[4], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 37632)] = max(compute1[6], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 50176)] = max(compute1[8], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 62720)] = max(compute1[10], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 75264)] = max(compute1[12], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 87808)] = max(compute1[14], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 224)] = max(compute1[1], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 12768)] = max(compute1[3], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 25312)] = max(compute1[5], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 37856)] = max(compute1[7], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 50400)] = max(compute1[9], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 62944)] = max(compute1[11], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 75488)] = max(compute1[13], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 448)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 88032)] = max(compute1[15], 0.000000e+00f);\n}\n\n", "gridDim": [7, 7, 8], "blockDim": [8, 4, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_256_56_56_w4_256_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 256, 56, 56], "filter_shape": [4, 256, 1, 1], "output_shape": [1, 4, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_256_56_56_w4_256_1_1_o1_4_56_56_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[128];\n  __shared__ float input1_shared[32];\n  compute1[0] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7))];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 25088)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 25088)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 8)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 50176)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 50176)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 16)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 75264)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 75264)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 24)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 100352)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 100352)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 32)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 125440)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 125440)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 40)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 150528)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 150528)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 48)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 175616)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 175616)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 56)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 200704)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 200704)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 64)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 225792)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 225792)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 72)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 250880)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 250880)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 80)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 275968)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 275968)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 88)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 301056)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 301056)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 96)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 326144)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 326144)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 104)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 351232)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 351232)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 112)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 376320)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 376320)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 120)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 401408)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 401408)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 128)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 426496)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 426496)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 136)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 451584)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 451584)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 144)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 476672)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 476672)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 152)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 501760)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 501760)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 160)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 526848)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 526848)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 168)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 551936)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 551936)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 176)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 577024)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 577024)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 184)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 602112)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 602112)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 192)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 627200)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 627200)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 200)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 652288)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 652288)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 208)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 677376)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 677376)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 216)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 702464)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 702464)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 224)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 727552)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 727552)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 232)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 752640)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 752640)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 240)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((int)threadIdx.x) >> 2) * 56)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 777728)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 6272) + (((int)threadIdx.y) * 3136)) + (((int)blockIdx.y) * 112)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 56)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 777728)];\n  if (((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) >> 3) + ((int)threadIdx.z)) < 4) {\n    if ((((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 32) {\n      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 8) {\n        if (((int)threadIdx.x) < 4) {\n          input1_shared[(((((int)threadIdx.z) * 8) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) + 248)];\n        }\n      }\n    }\n  }\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 8) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 8) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 8) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 8) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 8) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 8) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 8) + 7)]));\n  compute[(((((((int)threadIdx.z) * 3136) + (((int)blockIdx.y) * 112)) + (((int)threadIdx.y) * 56)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [7, 28, 1], "blockDim": [8, 2, 4]}]