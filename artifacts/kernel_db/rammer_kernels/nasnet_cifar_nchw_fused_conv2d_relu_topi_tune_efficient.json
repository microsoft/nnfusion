[{"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_192_16_16_w32_192_1_1_o1_32_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 192, 16, 16], "filter_shape": [32, 192, 1, 1], "output_shape": [1, 32, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_192_16_16_w32_192_1_1_o1_32_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 1)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 4096)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 4097)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 16)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 17)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 8192)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 8193)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 32)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 33)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 12288)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 12289)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 48)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 49)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 16384)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 16385)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 64)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 65)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 20480)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 20481)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 80)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 81)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 24576)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 24577)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 96)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 97)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 28672)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 28673)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 112)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 113)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 32768)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 32769)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 128)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 129)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 36864)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 36865)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 144)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 145)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 40960)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 40961)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 160)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 161)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 45056)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + 45057)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 176)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 192)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 177)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 4)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 20)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 36)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 52)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 68)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 84)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 100)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 116)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 132)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 148)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 164)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 180)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 196)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 212)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 228)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 244)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 4)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [2, 8, 2], "blockDim": [4, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_512_8_8_w128_512_1_1_o1_128_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 512, 8, 8], "filter_shape": [128, 512, 1, 1], "output_shape": [1, 128, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_512_8_8_w128_512_1_1_o1_128_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[256];\n  #pragma unroll\n  for (int xx_init = 0; xx_init < 2; ++xx_init) {\n    compute1[xx_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((((rc_outer * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + (rc_outer * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      #pragma unroll\n      for (int xx = 0; xx < 2; ++xx) {\n        compute1[xx] = (compute1[xx] + (pad_temp_shared[((((rc_inner * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n    compute[(((((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[i3_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [2, 2, 8], "blockDim": [2, 4, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_192_32_32_w64_192_1_1_o1_64_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 192, 32, 32], "filter_shape": [64, 192, 1, 1], "output_shape": [1, 64, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_192_32_32_w64_192_1_1_o1_64_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[768];\n  __shared__ float input1_shared[768];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n    compute1[(ff_init + 2)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((rc_outer * 24576) + (((((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 5) * 1024)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 31))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[(((((int)threadIdx.z) * 48) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 6144) + (((int)threadIdx.z) * 384)) + ((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 24) * 192)) + (rc_outer * 24)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 24))];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 24; ++rc_inner) {\n      #pragma unroll\n      for (int ff = 0; ff < 2; ++ff) {\n        compute1[ff] = (compute1[ff] + (pad_temp_shared[((rc_inner * 32) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 48) + (ff * 24)) + rc_inner)]));\n        compute1[(ff + 2)] = (compute1[(ff + 2)] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)) + 16)] * input1_shared[(((((int)threadIdx.z) * 48) + (ff * 24)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (i1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 16)] = max(compute1[(i1_inner_inner_inner + 2)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 32, 2], "blockDim": [16, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_192_32_32_w32_192_1_1_o1_32_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 192, 32, 32], "filter_shape": [32, 192, 1, 1], "output_shape": [1, 32, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_192_32_32_w32_192_1_1_o1_32_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[128];\n  #pragma unroll\n  for (int xx_init = 0; xx_init < 2; ++xx_init) {\n    compute1[xx_init] = 0.000000e+00f;\n    compute1[(xx_init + 2)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 24; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 8192) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    input1_shared[((((int)threadIdx.z) * 16) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 384)) + ((((int)threadIdx.x) >> 3) * 192)) + (rc_outer * 8)) + (((int)threadIdx.x) & 7))];\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      #pragma unroll\n      for (int xx = 0; xx < 2; ++xx) {\n        compute1[xx] = (compute1[xx] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n        compute1[(xx + 2)] = (compute1[(xx + 2)] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[i3_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner) + 8192)] = max(compute1[(i3_inner_inner_inner + 2)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 32, 2], "blockDim": [16, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_64_16_16_w64_64_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 64, 16, 16], "filter_shape": [64, 64, 1, 1], "output_shape": [1, 64, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_64_16_16_w64_64_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  pad_temp_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input0[(((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2))];\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)];\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[(((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2))];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2)) + 1)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input0[((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 4096)];\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 4097)];\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2)) + 16)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2)) + 17)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input0[((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 8192)];\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 8193)];\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2)) + 32)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2)) + 33)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input0[((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 12288)];\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 12289)];\n  input1_shared[((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2))] = input1[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2)) + 48)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1)] = input1[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.x) * 2)) + 49)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((int)threadIdx.x) * 2)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.x) * 2) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute[((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 16, 4], "blockDim": [8, 1, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_384_16_16_w128_384_1_1_o1_128_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 384, 16, 16], "filter_shape": [128, 384, 1, 1], "output_shape": [1, 128, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_384_16_16_w128_384_1_1_o1_128_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[1024];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7))];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4))];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 1)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 2)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 3)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 8192)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 8192)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 32)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 33)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 34)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 35)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 16384)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 16384)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 64)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 65)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 66)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 67)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 24576)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 24576)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 96)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 97)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 98)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 99)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 32768)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 32768)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 128)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 129)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 130)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 131)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 40960)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 40960)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 160)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 161)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 162)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 163)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 49152)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 49152)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 192)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 193)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 194)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 195)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 57344)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 57344)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 224)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 225)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 226)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 227)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 65536)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 65536)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 256)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 257)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 258)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 259)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 73728)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 73728)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 288)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 289)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 290)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 291)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 81920)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 81920)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 320)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 321)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 322)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 323)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2))] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.x) >> 2) * 16)) + (((int)blockIdx.x) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 90112)];\n  pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((((int)threadIdx.z) * 512) + (((int)threadIdx.y) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.x) * 2) + 1) >> 3) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 2) + 1) & 7)) + 90112)];\n  input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4))] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 352)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 353)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 2)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 354)];\n  input1_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 32)) + (((int)threadIdx.x) * 4)) + 3)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (((int)threadIdx.x) * 4)) + 355)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[(((int)threadIdx.z) * 32)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[((((int)threadIdx.y) * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 32) + 512)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 16)] * input1_shared[((((int)threadIdx.z) * 32) + 513)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 32)] * input1_shared[((((int)threadIdx.z) * 32) + 514)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 48)] * input1_shared[((((int)threadIdx.z) * 32) + 515)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 64)] * input1_shared[((((int)threadIdx.z) * 32) + 516)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 80)] * input1_shared[((((int)threadIdx.z) * 32) + 517)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 96)] * input1_shared[((((int)threadIdx.z) * 32) + 518)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 112)] * input1_shared[((((int)threadIdx.z) * 32) + 519)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 128)] * input1_shared[((((int)threadIdx.z) * 32) + 520)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 144)] * input1_shared[((((int)threadIdx.z) * 32) + 521)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 160)] * input1_shared[((((int)threadIdx.z) * 32) + 522)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 176)] * input1_shared[((((int)threadIdx.z) * 32) + 523)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 192)] * input1_shared[((((int)threadIdx.z) * 32) + 524)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 208)] * input1_shared[((((int)threadIdx.z) * 32) + 525)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 224)] * input1_shared[((((int)threadIdx.z) * 32) + 526)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 240)] * input1_shared[((((int)threadIdx.z) * 32) + 527)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 256)] * input1_shared[((((int)threadIdx.z) * 32) + 528)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 17)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 272)] * input1_shared[((((int)threadIdx.z) * 32) + 529)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 18)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 288)] * input1_shared[((((int)threadIdx.z) * 32) + 530)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 19)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 304)] * input1_shared[((((int)threadIdx.z) * 32) + 531)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 20)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 320)] * input1_shared[((((int)threadIdx.z) * 32) + 532)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 21)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 336)] * input1_shared[((((int)threadIdx.z) * 32) + 533)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 22)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 352)] * input1_shared[((((int)threadIdx.z) * 32) + 534)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 23)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 368)] * input1_shared[((((int)threadIdx.z) * 32) + 535)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 24)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 384)] * input1_shared[((((int)threadIdx.z) * 32) + 536)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 25)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 400)] * input1_shared[((((int)threadIdx.z) * 32) + 537)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 26)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 416)] * input1_shared[((((int)threadIdx.z) * 32) + 538)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 27)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 432)] * input1_shared[((((int)threadIdx.z) * 32) + 539)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 28)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 448)] * input1_shared[((((int)threadIdx.z) * 32) + 540)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 29)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 464)] * input1_shared[((((int)threadIdx.z) * 32) + 541)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 30)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 480)] * input1_shared[((((int)threadIdx.z) * 32) + 542)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 31)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) + 496)] * input1_shared[((((int)threadIdx.z) * 32) + 543)]));\n  compute[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 4096)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [2, 8, 4], "blockDim": [8, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_768_8_8_w128_768_1_1_o1_128_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 768, 8, 8], "filter_shape": [128, 768, 1, 1], "output_shape": [1, 128, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_768_8_8_w128_768_1_1_o1_128_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[768];\n  __shared__ float input1_shared[768];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 96) + (((int)threadIdx.y) * 24)) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((((rc_outer * 3072) + (((int)threadIdx.z) * 384)) + ((((((int)threadIdx.y) * 6) + (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 2)) >> 2) * 64)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.y) * 6) + (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 2)) & 3) * 8)) + (((int)blockIdx.x) * 4)) + (((((int)threadIdx.x) * 6) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 3))];\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 6; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[((((((int)threadIdx.z) * 96) + (((int)threadIdx.y) * 24)) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 1536)) + (((((((int)threadIdx.y) * 24) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 48) * 768)) + (rc_outer * 48)) + ((((((int)threadIdx.y) * 24) + (((int)threadIdx.x) * 6)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 48))];\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 48; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[(((rc_inner * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 48) + rc_inner)]));\n      compute1[1] = (compute1[1] + (pad_temp_shared[(((rc_inner * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 48) + rc_inner) + 384)]));\n    }\n  }\n  compute[((((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n  compute[(((((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 8)) + (((int)blockIdx.x) * 4)) + ((int)threadIdx.x)) + 512)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [2, 2, 8], "blockDim": [4, 4, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_96_32_32_w32_96_1_1_o1_32_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 96, 32, 32], "filter_shape": [32, 96, 1, 1], "output_shape": [1, 32, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_96_32_32_w32_96_1_1_o1_32_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[256];\n  #pragma unroll\n  for (int xx_init = 0; xx_init < 2; ++xx_init) {\n    compute1[xx_init] = 0.000000e+00f;\n    compute1[(xx_init + 2)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 6; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 16384) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 5) * 1024)) + (((int)blockIdx.y) * 32)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 31))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 1536) + (((int)threadIdx.z) * 192)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 96)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15))];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      #pragma unroll\n      for (int xx = 0; xx < 2; ++xx) {\n        compute1[xx] = (compute1[xx] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n        compute1[(xx + 2)] = (compute1[(xx + 2)] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 128)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[i3_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner) + 8192)] = max(compute1[(i3_inner_inner_inner + 2)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 32, 2], "blockDim": [16, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_3_32_32_w96_3_3_3_o1_96_32_32_ws1_1_wd1_1_p1_1_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 3, 32, 32], "filter_shape": [96, 3, 3, 3], "output_shape": [1, 96, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_3_32_32_w96_3_3_3_o1_96_32_32_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[12];\n  __shared__ float pad_temp_shared[108];\n  __shared__ float input1_shared[432];\n  for (int yy_init = 0; yy_init < 2; ++yy_init) {\n    compute1[yy_init] = 0.000000e+00f;\n    compute1[(yy_init + 2)] = 0.000000e+00f;\n    compute1[(yy_init + 4)] = 0.000000e+00f;\n    compute1[(yy_init + 6)] = 0.000000e+00f;\n    compute1[(yy_init + 8)] = 0.000000e+00f;\n    compute1[(yy_init + 10)] = 0.000000e+00f;\n  }\n  for (int ry_outer = 0; ry_outer < 3; ++ry_outer) {\n    __syncthreads();\n    if (((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) < 108) {\n      if (((int)threadIdx.x) < 14) {\n        pad_temp_shared[((((int)threadIdx.z) * 14) + ((int)threadIdx.x))] = (((((1 <= (((((int)blockIdx.y) * 2) + ((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) % 36) / 18)) + ry_outer)) && ((((((int)blockIdx.y) * 2) + ((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) % 36) / 18)) + ry_outer) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + (((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) % 18)))) && (((((int)blockIdx.x) * 16) + (((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) % 18)) < 33)) ? input0[((((((((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) / 36) * 1024) + (((int)blockIdx.y) * 64)) + (((((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) % 36) / 18) * 32)) + (ry_outer * 32)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.z) * 14) + ((int)threadIdx.x)) % 18)) - 33)] : 0.000000e+00f);\n      }\n    }\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      if (((((int)threadIdx.z) * 6) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 9)) < 48) {\n        if (((((int)threadIdx.z) * 18) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 3)) < 144) {\n          if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 432) {\n            if (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 54) {\n              input1_shared[(((((int)threadIdx.z) * 54) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input1[(((((((int)blockIdx.z) * 1296) + (((int)threadIdx.z) * 162)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 3) * 9)) + (ry_outer * 3)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 3))];\n            }\n          }\n        }\n      }\n    }\n    __syncthreads();\n    for (int rc_inner = 0; rc_inner < 3; ++rc_inner) {\n      for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {\n        for (int yy = 0; yy < 2; ++yy) {\n          compute1[yy] = (compute1[yy] + (pad_temp_shared[((((rc_inner * 36) + (yy * 18)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[(((((int)threadIdx.z) * 9) + (rc_inner * 3)) + rx_inner)]));\n          compute1[(yy + 2)] = (compute1[(yy + 2)] + (pad_temp_shared[((((rc_inner * 36) + (yy * 18)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 9) + (rc_inner * 3)) + rx_inner) + 72)]));\n          compute1[(yy + 4)] = (compute1[(yy + 4)] + (pad_temp_shared[((((rc_inner * 36) + (yy * 18)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 9) + (rc_inner * 3)) + rx_inner) + 144)]));\n          compute1[(yy + 6)] = (compute1[(yy + 6)] + (pad_temp_shared[((((rc_inner * 36) + (yy * 18)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 9) + (rc_inner * 3)) + rx_inner) + 216)]));\n          compute1[(yy + 8)] = (compute1[(yy + 8)] + (pad_temp_shared[((((rc_inner * 36) + (yy * 18)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 9) + (rc_inner * 3)) + rx_inner) + 288)]));\n          compute1[(yy + 10)] = (compute1[(yy + 10)] + (pad_temp_shared[((((rc_inner * 36) + (yy * 18)) + ((int)threadIdx.x)) + rx_inner)] * input1_shared[((((((int)threadIdx.z) * 9) + (rc_inner * 3)) + rx_inner) + 360)]));\n        }\n      }\n    }\n  }\n  for (int i2_inner_inner_inner = 0; i2_inner_inner_inner < 2; ++i2_inner_inner_inner) {\n    compute[((((((((int)blockIdx.z) * 49152) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x))] = max(compute1[i2_inner_inner_inner], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 49152) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8192)] = max(compute1[(i2_inner_inner_inner + 2)], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 49152) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 16384)] = max(compute1[(i2_inner_inner_inner + 4)], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 49152) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 24576)] = max(compute1[(i2_inner_inner_inner + 6)], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 49152) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32768)] = max(compute1[(i2_inner_inner_inner + 8)], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 49152) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 64)) + (i2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 40960)] = max(compute1[(i2_inner_inner_inner + 10)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [2, 16, 2], "blockDim": [16, 1, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_128_8_8_w128_128_1_1_o1_128_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 128, 8, 8], "filter_shape": [128, 128, 1, 1], "output_shape": [1, 128, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_128_8_8_w128_128_1_1_o1_128_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[256];\n  compute1[0] = 0.000000e+00f;\n  compute1[1] = 0.000000e+00f;\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1024)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1025)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 16)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 17)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 2048)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 2049)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 32)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 33)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 3072)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 3073)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 48)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 49)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 4096)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 4097)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 64)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 65)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 5120)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 5121)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 80)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 81)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 6144)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 6145)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 96)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 97)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  __syncthreads();\n  pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 7168)];\n  pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input0[(((((((int)threadIdx.z) * 64) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 7169)];\n  input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 112)];\n  input1_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = input1[(((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 128)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 113)];\n  __syncthreads();\n  compute1[0] = (compute1[0] + (pad_temp_shared[((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2))] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 1)] * input1_shared[(((int)threadIdx.z) * 16)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 16)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 17)] * input1_shared[((((int)threadIdx.z) * 16) + 1)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 32)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 33)] * input1_shared[((((int)threadIdx.z) * 16) + 2)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 48)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 49)] * input1_shared[((((int)threadIdx.z) * 16) + 3)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 64)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 65)] * input1_shared[((((int)threadIdx.z) * 16) + 4)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 80)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 81)] * input1_shared[((((int)threadIdx.z) * 16) + 5)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 96)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 97)] * input1_shared[((((int)threadIdx.z) * 16) + 6)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 112)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 113)] * input1_shared[((((int)threadIdx.z) * 16) + 7)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 128)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 129)] * input1_shared[((((int)threadIdx.z) * 16) + 8)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 144)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 145)] * input1_shared[((((int)threadIdx.z) * 16) + 9)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 160)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 161)] * input1_shared[((((int)threadIdx.z) * 16) + 10)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 176)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 177)] * input1_shared[((((int)threadIdx.z) * 16) + 11)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 192)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 193)] * input1_shared[((((int)threadIdx.z) * 16) + 12)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 208)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 209)] * input1_shared[((((int)threadIdx.z) * 16) + 13)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 224)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 225)] * input1_shared[((((int)threadIdx.z) * 16) + 14)]));\n  compute1[0] = (compute1[0] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 240)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute1[1] = (compute1[1] + (pad_temp_shared[(((((int)threadIdx.y) * 8) + (((int)threadIdx.x) * 2)) + 241)] * input1_shared[((((int)threadIdx.z) * 16) + 15)]));\n  compute[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2))] = max(compute1[0], 0.000000e+00f);\n  compute[((((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1)] = max(compute1[1], 0.000000e+00f);\n}\n\n", "gridDim": [1, 4, 8], "blockDim": [4, 2, 16]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_32_32_32_w32_32_1_1_o1_32_32_32_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 32, 32, 32], "filter_shape": [32, 32, 1, 1], "output_shape": [1, 32, 32, 32], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_32_32_32_w32_32_1_1_o1_32_32_32_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[8];\n  __shared__ float pad_temp_shared[512];\n  __shared__ float input1_shared[256];\n  #pragma unroll\n  for (int xx_init = 0; xx_init < 2; ++xx_init) {\n    compute1[xx_init] = 0.000000e+00f;\n    compute1[(xx_init + 2)] = 0.000000e+00f;\n    compute1[(xx_init + 4)] = 0.000000e+00f;\n    compute1[(xx_init + 6)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 2; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 8)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 16384) + (((int)threadIdx.z) * 4096)) + ((((((int)threadIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 5) * 1024)) + (((int)blockIdx.y) * 32)) + (((((int)threadIdx.x) * 8) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 31))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 128)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 4) * 32)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 15))];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      #pragma unroll\n      for (int xx = 0; xx < 2; ++xx) {\n        compute1[xx] = (compute1[xx] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n        compute1[(xx + 2)] = (compute1[(xx + 2)] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 64)]));\n        compute1[(xx + 4)] = (compute1[(xx + 4)] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 128)]));\n        compute1[(xx + 6)] = (compute1[(xx + 6)] + (pad_temp_shared[(((rc_inner * 32) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 16) + rc_inner) + 192)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n    compute[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[i3_inner_inner_inner], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner) + 4096)] = max(compute1[(i3_inner_inner_inner + 2)], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner) + 8192)] = max(compute1[(i3_inner_inner_inner + 4)], 0.000000e+00f);\n    compute[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner) + 12288)] = max(compute1[(i3_inner_inner_inner + 6)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 32, 2], "blockDim": [16, 1, 4]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_256_16_16_w64_256_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 256, 16, 16], "filter_shape": [64, 256, 1, 1], "output_shape": [1, 64, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_256_16_16_w64_256_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[4];\n  __shared__ float pad_temp_shared[256];\n  __shared__ float input1_shared[128];\n  #pragma unroll\n  for (int xx_init = 0; xx_init < 2; ++xx_init) {\n    compute1[xx_init] = 0.000000e+00f;\n    compute1[(xx_init + 2)] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[((((((rc_outer * 2048) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)];\n    }\n    input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] = input1[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 256)) + (rc_outer * 8)) + ((int)threadIdx.x))];\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {\n      #pragma unroll\n      for (int xx = 0; xx < 2; ++xx) {\n        compute1[xx] = (compute1[xx] + (pad_temp_shared[((((rc_inner * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[((((int)threadIdx.z) * 8) + rc_inner)]));\n        compute1[(xx + 2)] = (compute1[(xx + 2)] + (pad_temp_shared[((((rc_inner * 32) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + xx)] * input1_shared[(((((int)threadIdx.z) * 8) + rc_inner) + 64)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i3_inner_inner_inner = 0; i3_inner_inner_inner < 2; ++i3_inner_inner_inner) {\n    compute[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner)] = max(compute1[i3_inner_inner_inner], 0.000000e+00f);\n    compute[(((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + i3_inner_inner_inner) + 2048)] = max(compute1[(i3_inner_inner_inner + 2)], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [1, 8, 4], "blockDim": [8, 2, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_384_16_16_w64_384_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 384, 16, 16], "filter_shape": [64, 384, 1, 1], "output_shape": [1, 64, 16, 16], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_384_16_16_w64_384_1_1_o1_64_16_16_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[2];\n  __shared__ float pad_temp_shared[384];\n  __shared__ float input1_shared[384];\n  #pragma unroll\n  for (int ff_init = 0; ff_init < 2; ++ff_init) {\n    compute1[ff_init] = 0.000000e+00f;\n  }\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[((((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 24)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((((rc_outer * 6144) + (((int)threadIdx.z) * 768)) + ((((((int)threadIdx.y) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 3)) >> 1) * 256)) + (((int)blockIdx.y) * 32)) + ((((((int)threadIdx.y) * 3) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 3)) & 1) * 16)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 7))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[((((((int)threadIdx.z) * 48) + (((int)threadIdx.y) * 24)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[((((((((int)blockIdx.z) * 6144) + (((int)threadIdx.z) * 768)) + (((int)threadIdx.y) * 384)) + (rc_outer * 24)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 24; ++rc_inner) {\n      #pragma unroll\n      for (int ff = 0; ff < 2; ++ff) {\n        compute1[ff] = (compute1[ff] + (pad_temp_shared[(((rc_inner * 16) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x))] * input1_shared[(((((int)threadIdx.z) * 48) + (ff * 24)) + rc_inner)]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i1_inner_inner_inner = 0; i1_inner_inner_inner < 2; ++i1_inner_inner_inner) {\n    compute[(((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (i1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.y) * 16)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x))] = max(compute1[i1_inner_inner_inner], 0.000000e+00f);\n  }\n}\n\n", "gridDim": [2, 8, 4], "blockDim": [8, 2, 8]}, {"tvm_func_name": "tuned_fused_convolution_relu_op_float_i1_384_8_8_w64_384_1_1_o1_64_8_8_ws1_1_wd1_1_p0_0_kernel0", "op_type": "Fused_Convolution_Relu", "parameters": {"input_shape": [1, 384, 8, 8], "filter_shape": [64, 384, 1, 1], "output_shape": [1, 64, 8, 8], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [0, 0]}, "code": "extern \"C\" __global__ void tuned_fused_convolution_relu_op_float_i1_384_8_8_w64_384_1_1_o1_64_8_8_ws1_1_wd1_1_p0_0_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ compute) {\n   float compute1[1];\n  __shared__ float pad_temp_shared[128];\n  __shared__ float input1_shared[128];\n  compute1[0] = 0.000000e+00f;\n  #pragma unroll\n  for (int rc_outer = 0; rc_outer < 24; ++rc_outer) {\n    __syncthreads();\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {\n      pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner)] = input0[(((((rc_outer * 1024) + (((int)threadIdx.z) * 128)) + ((((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 3) * 64)) + (((int)blockIdx.y) * 8)) + (((((int)threadIdx.x) * 2) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 7))];\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {\n      input1_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)] = input1[(((((((int)blockIdx.z) * 3072) + (((int)threadIdx.z) * 384)) + (rc_outer * 16)) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1)];\n    }\n    __syncthreads();\n    #pragma unroll\n    for (int rc_inner = 0; rc_inner < 16; ++rc_inner) {\n      compute1[0] = (compute1[0] + (pad_temp_shared[((rc_inner * 8) + ((int)threadIdx.x))] * input1_shared[((((int)threadIdx.z) * 16) + rc_inner)]));\n    }\n  }\n  compute[((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 8)) + ((int)threadIdx.x))] = max(compute1[0], 0.000000e+00f);\n}\n\n", "gridDim": [1, 8, 8], "blockDim": [8, 1, 8]}]